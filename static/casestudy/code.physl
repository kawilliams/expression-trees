// lra.physl
//
// Logistic regression analysis algorithm
//
//   x: [N, M]
//   y: [N]
//
define(lra_explicit, x, y, alpha, iterations, enable_output,
    block(
        define(weights, constant(0.0, shape(x, 1))),            // weights: [M]
        define(transx, transpose(x)),                           // transx:  [M, N]
        define(pred, constant(0.0, shape(x, 0))),
        define(step, 0),
        while(
            step < iterations,
            block(
                if(enable_output, cout("step: ", step, ", ", weights)),
                // exp(-dot(x, weights)): [N], pred: [N]
                store(pred, 1.0 / (1.0 + exp(-dot(x, weights)))),
                store(weights, weights - (alpha * dot(transx, pred - y))),
                store(step, step + 1)
            )
        ),
        weights
    )
),
lra_explicit