diff --git a/static/als_csv_instrumented.cpp b/static/als_csv_instrumented.cpp
index 23dc984..2df2dfe 100644
--- a/static/als_csv_instrumented.cpp
+++ b/static/als_csv_instrumented.cpp
@@ -23,24 +23,22 @@
 #include <utility>
 
 ///////////////////////////////////////////////////////////////////////////////
-char const* const read_x_code = R"(block(
+char const* const read_x_code = R"(
     //
     // Read input-data from given CSV file
     //
     define(read_x, filepath, row_start, row_stop, col_start, col_stop,
         slice(file_read_csv(filepath), make_list(row_start , row_stop),
               make_list(col_start , col_stop))
-    ),
+    )
     read_x
-))";
+)";
 
 
-char const* const als_explicit = R"(block(
+char const* const als_explicit = R"(
     //
     // Alternating Least squares algorithm (ALS)
     //
-    //
-    //
     define(als_explicit, ratings, regularization, num_factors, iterations, alpha,
         enable_output,
         block(
@@ -49,7 +47,7 @@ char const* const als_explicit = R"(block(
             define(conf, alpha * ratings),
 
             define(conf_u, constant(0.0, make_list(num_items))),
-            define(conf_i, constant(0.0,make_list(num_users))),
+            define(conf_i, constant(0.0, make_list(num_users))),
 
             define(c_u, constant(0.0, make_list(num_items, num_items))),
             define(c_i, constant(0.0, make_list(num_users, num_users))),
@@ -73,25 +71,25 @@ char const* const als_explicit = R"(block(
 
             while(k < iterations,
                 block(
-                    store(YtY, dot(transpose(Y), Y) + regularization*I_f),
-                    store(XtX, dot(transpose(X), X) + regularization*I_f),
+                    if(enable_output,
+                            block(
+                                    cout("iteration ", k, u),
+                                    cout("X: ",X),
+                                    cout("Y: ",Y)
+                            )
+                    ),
+                    store(YtY, dot(transpose(Y), Y) + regularization * I_f),
+                    store(XtX, dot(transpose(X), X) + regularization * I_f),
 
                     while(u < num_users,
                         block(
-                                if(enable_output,
-                                        block(
-                                                cout("iteration ",k),
-                                                cout("X: ",X),
-                                                cout("Y: ",Y)
-                                        )
-                                ),
                             store(conf_u, slice_row(conf, u)),
                             store(c_u, diag(conf_u)),
-                            store(p_u, __ne(conf_u,0.0,true)),
-                            store(A, dot(dot(transpose(Y),c_u),Y)+ YtY),
-                            store(b, dot(dot(transpose(Y),(c_u + I_i)),transpose(p_u))),
-                            set_row(X,u,u+1,1,dot(inverse(A),b)),
-                            store(u, u+1)
+                            store(p_u, __ne(conf_u, 0.0, true)),
+                            store(A, dot(dot(transpose(Y), c_u), Y)+ YtY),
+                            store(b, dot(dot(transpose(Y),(c_u + I_i)), transpose(p_u))),
+                            store(slice(X, list(u, u + 1, 1),nil), dot(inverse(A), b)),
+                            store(u, u + 1)
                         )
                     ),
                     store(u, 0),
@@ -99,36 +97,33 @@ char const* const als_explicit = R"(block(
                         block(
                             store(conf_i, slice_column(conf, i)),
                             store(c_i, diag(conf_i)),
-                            store(p_i, __ne(conf_i,0.0,true)),
-                            store(A, dot(dot(transpose(X),c_i),X) + XtX),
-                            store(b, dot(dot(transpose(X),(c_i + I_u)),transpose(p_i))),
-                            set_row(Y,i,i+1,1,dot(inverse(A),b)),
-                            store(i, i+1)
+                            store(p_i, __ne(conf_i, 0.0, true)),
+                            store(A, dot(dot(transpose(X),c_i), X) + XtX),
+                            store(b, dot(dot(transpose(X),(c_i + I_u)), transpose(p_i))),
+                            store(slice(Y, list(i, i + 1, 1),nil), dot(inverse(A), b)),
+                            store(i, i + 1)
                         )
                     ),
                     store(i, 0),
-                    store(k,k+1)
+                    store(k, k + 1)
                 )
             ),
-            make_list(X, Y)
+            list(X, Y)
         )
-    ),
+    )
     als_explicit
-))";
+)";
 
-std::string const als_direct = R"(block(
+std::string const als_direct = R"(
     //
     // Alternating Least squares algorithm (ALS) (direct implementation)
     //
-    //
-    //
-    //
     define(als_direct, ratings, regularization, num_factors, iterations, alpha,
         enable_output, als(ratings, regularization, num_factors, iterations, alpha,
         enable_output)
-    ),
+    )
     als_direct
-))";
+)";
 
 ///////////////////////////////////////////////////////////////////////////////
 // Find the line/column position in the source code from a given iterator
@@ -293,28 +288,17 @@ void print_instrumentation(char const* const name, int compile_id,
               << "\n\n";
 }
 
-void print_performance_counter_data_csv()
+void print_performance_counter_data_csv(
+    std::vector<std::string> const& existing_primitive_instances)
 {
     std::cout << std::endl << "Primitive Performance Counter Data in CSV:";
 
     // CSV Header
     std::cout << "\nprimitive_instance,display_name,count,time,eval_direct\n";
 
-    // List of existing primitive instances
-    std::vector<std::string> existing_primitive_instances;
-
-    // Retrieve all primitive instances
-    for (auto const& entry :
-        hpx::agas::find_symbols(hpx::launch::sync, "/phylanx/*$*"))
-    {
-        existing_primitive_instances.push_back(entry.first);
-    }
-
     // Print performance data
     for (auto const& entry :
-        phylanx::util::retrieve_counter_data(existing_primitive_instances,
-            std::vector<std::string>{"count/eval", "time/eval", "eval_direct"},
-            hpx::find_here()))
+        phylanx::util::retrieve_counter_data(existing_primitive_instances))
     {
         std::cout << "\"" << entry.first << "\",\""
                   << phylanx::execution_tree::compiler::primitive_display_name(
@@ -340,11 +324,19 @@ int hpx_main(boost::program_options::variables_map& vm)
 
     // compile the given code
     phylanx::execution_tree::compiler::function_list snippets;
-    auto read_x =
+    auto const& code_read_x =
         phylanx::execution_tree::compile("read_x", read_x_code, snippets);
-    auto als = phylanx::execution_tree::compile(
+
+    auto const& code_als = phylanx::execution_tree::compile(
+        vm.count("direct") != 0 ? "als_direct" : "als_explicit",
         vm.count("direct") != 0 ? als_direct : als_explicit, snippets);
 
+    // Enable collection of performance data for all existing primitives
+    auto primitives = phylanx::util::enable_measurements();
+
+    auto read_x = code_read_x.run();
+    auto als = code_als.run();
+
     // Print instrumentation information, if enabled
     if (vm.count("instrument") != 0)
     {
@@ -382,7 +374,7 @@ int hpx_main(boost::program_options::variables_map& vm)
     // Print performance counter data in CSV
     if (vm.count("instrument") != 0)
     {
-        print_performance_counter_data_csv();
+        print_performance_counter_data_csv(primitives);
     }
 
     // Make sure all counters are properly initialized, don't reset current
diff --git a/static/compare.js b/static/compare.js
index 315f0d9..8b99e38 100644
--- a/static/compare.js
+++ b/static/compare.js
@@ -261,8 +261,8 @@ function retrieveData() {
     legend.empty();
     */
 
-    // console.log("Files1:", textfile1, csvfile1);
-    // console.log("Files2:", textfile2, csvfile2);
+    console.log("Files1:", textfile1, csvfile1);
+    console.log("Files2:", textfile2, csvfile2);
     callEverything(textfile1, csvfile1, textfile2, csvfile2);
 
 }
diff --git a/static/generateTree.js b/static/generateTree.js
index a4ec3c2..e75b3d8 100644
--- a/static/generateTree.js
+++ b/static/generateTree.js
@@ -401,7 +401,8 @@ function update(source, fullRoot, perfdata, perfdata2, clicked) {
             }
 
             if (d._perfdata.eval_direct !== d._perfdata2.eval_direct) {
-                d.executedDifferently = true;
+                console.log("diff ", d._perfdata, d._perfdata2);
+		d.executedDifferently = true;
             } else {
                 d.executedDifferently = false;
             }
@@ -747,7 +748,7 @@ function update(source, fullRoot, perfdata, perfdata2, clicked) {
                 return "start";
             })
             .text(function (d) {
-                if (!d.children) {
+                if (!d.children && d._perfdata) {
                     return d._perfdata.display_name;
                 } else {
                     return "";
@@ -1294,8 +1295,6 @@ function drawList (nodes) {
   }
   // Sort nodes by time (slowest to fastest)
   var nodes = nodes.sort(function(c,d) {
-        console.log(c);
-        console.log(d);
         if ( hasData(c) && hasData(d)){
             return d._perfdata[currentTime] - c._perfdata[currentTime];
         }
diff --git a/static/lra_csv_instrumented.cpp b/static/lra_csv_instrumented.cpp
new file mode 100644
index 0000000..56328bf
--- /dev/null
+++ b/static/lra_csv_instrumented.cpp
@@ -0,0 +1,410 @@
+//   Copyright (c) 2017-2018 Hartmut Kaiser
+//   Copyright (c) 2018 Parsa Amini
+//
+//   Distributed under the Boost Software License, Version 1.0. (See accompanying
+//   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
+
+#include <phylanx/phylanx.hpp>
+
+#include <hpx/hpx_init.hpp>
+#include <hpx/include/agas.hpp>
+#include <hpx/runtime_fwd.hpp>
+
+#include <cstddef>
+#include <cstdint>
+#include <iostream>
+#include <map>
+#include <vector>
+#include <string>
+#include <utility>
+
+#include <boost/program_options.hpp>
+#include <blaze/Math.h>
+
+//////////////////////////////////////////////////////////////////////////////////
+// This example uses part of the breast cancer dataset from UCI Machine Learning
+// Repository:
+//     https://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+(Diagnostic)
+//
+// A copy of the full dataset in CSV format (breast_cancer.csv), obtained from
+// scikit-learn datasets, is provided in the same folder as this example.
+//
+// The layout of the data in the provided CSV file used by the example
+// is as follows:
+// 30 features per line followed by the classification
+// 569 lines of data
+//
+// This example also demonstrates how the generated primitives can be introspected
+// and linked back to the source code.
+//
+/////////////////////////////////////////////////////////////////////////////////
+
+std::string const read_x_code = R"(block(
+    //
+    // Read X-data from given CSV file
+    //
+    define(read_x, filepath, row_start, row_stop, col_start, col_stop,
+        slice(file_read_csv(filepath),
+              make_list(row_start, row_stop),
+              make_list(col_start, col_stop))
+    ),
+    read_x
+))";
+
+std::string const read_y_code = R"(block(
+    //
+    // Read Y-data from given CSV file
+    //
+    define(read_y, filepath, row_start, row_stop, col_stop,
+        slice(file_read_csv(filepath), make_list(row_start, row_stop), col_stop)
+    ),
+    read_y
+))";
+
+///////////////////////////////////////////////////////////////////////////////
+std::string const lra_code = R"(block(
+    //
+    // Logistic regression analysis algorithm
+    //
+    //   x: [N, M]
+    //   y: [N]
+    //
+    define(lra_explicit, x, y, alpha, iterations, enable_output,
+        block(
+            define(weights, constant(0.0, shape(x, 1))),            // weights: [M]
+            define(transx, transpose(x)),                           // transx:  [M, N]
+            define(pred, constant(0.0, shape(x, 0))),
+            define(step, 0),
+            while(
+                step < iterations,
+                block(
+                    if(enable_output, cout("step: ", step, ", ", weights)),
+                    // exp(-dot(x, weights)): [N], pred: [N]
+                    store(pred, 1.0 / (1.0 + exp(-dot(x, weights)))),
+                    store(weights, weights - (alpha * dot(transx, pred - y))),
+                    store(step, step + 1)
+                )
+            ),
+            weights
+        )
+    ),
+    lra_explicit
+))";
+
+std::string const lra_code_direct = R"(block(
+    //
+    // Logistic regression analysis algorithm (direct implementation)
+    //
+    //   x: [N, M]
+    //   y: [N]
+    //
+    define(lra_direct, x, y, alpha, iterations, enable_output,
+        lra(x, y, alpha, iterations, enable_output)
+    ),
+    lra_direct
+))";
+
+///////////////////////////////////////////////////////////////////////////////
+// Find the line/column position in the source code from a given iterator
+// pointing into it.
+//
+std::pair<std::size_t, std::size_t> get_pos(std::string const& code,
+    std::tuple<std::size_t, std::size_t, std::int64_t> const& tags)
+{
+    // Column might be given directly, in that case line is given as well
+    if (std::get<2>(tags) != -1)
+    {
+        return std::make_pair(std::get<1>(tags), std::get<2>(tags));
+    }
+
+    // Otherwise the given value is the offset into the code
+    std::size_t pos = std::get<1>(tags);
+    std::size_t line = 1;
+    std::size_t column = 1;
+
+    for (std::int64_t i = 0; i != pos && i != code.size(); ++i)
+    {
+        if (code[i] == '\r' || code[i] == '\n')    // CR/LF
+        {
+            ++line;
+            column = 1;
+        }
+        else
+        {
+            ++column;
+        }
+    }
+
+    return std::make_pair(line, column);
+}
+
+///////////////////////////////////////////////////////////////////////////////
+// Find offset into code as given by the tags argument
+//
+std::size_t get_offset(std::string const& code,
+    std::tuple<std::size_t, std::size_t, std::size_t> const& tags)
+{
+    // Offset might be given directly
+    if (std::get<2>(tags) == -1)
+    {
+        return std::get<1>(tags);
+    }
+
+    // Otherwise the given value is the line/column position in the code
+    std::size_t offset = 0;
+    std::size_t line = 1;
+    std::size_t column = 0;
+
+    for (std::int64_t i = 0; i != code.size(); ++i, ++offset)
+    {
+        if (code[i] == '\r' || code[i] == '\n')    // CR/LF
+        {
+            ++line;
+            column = 0;
+        }
+        else
+        {
+            ++column;
+        }
+
+        if (std::get<1>(tags) == line && std::get<2>(tags) == column)
+        {
+            break;
+        }
+    }
+
+    return offset;
+}
+
+// Extract the compile_id/tag pair from a given primitive instance name.
+//
+// The compile_id is a sequence number tracking invocations of the
+// function phylanx::execution_tree::compile (needed to link back to the
+// concrete source code compiled).
+//
+// The tag is an index into the array of iterators filled by
+// phylanx::ast::generate_ast. It allows to find the iterator referring
+// to the construct in the source code a particular primitive instance was
+// created by.
+//
+std::tuple<std::size_t, std::size_t, std::size_t> extract_tags(
+    std::string const& name)
+{
+    auto data = phylanx::execution_tree::compiler::parse_primitive_name(name);
+    return std::make_tuple(data.compile_id, data.tag1, data.tag2);
+}
+
+// The symbolic names registered in AGAS that identify the created
+// primitive instances have the following structure:
+//
+// /phylanx/<primitive>$<sequence-nr>[$<instance>]/<compile_id>$<tag1>[$<tag2>]
+//
+//  where:
+//      <primitive>:   the name of primitive type representing the given
+//                     node in the expression tree
+//      <sequence-nr>: the sequence number of the corresponding instance
+//                     of type <primitive>
+//      <instance>:    (optional), some primitives have additional instance
+//                     names, for instance references to function arguments
+//                     have the name of the argument as their <instance>
+//      <compile_id>:  the sequence number of the invocation of the
+//                     function phylanx::execution_tree::compile
+//      <tag1>:        if <tag2> == -1: the position inside the compiled code
+//                     block where the referring to the point of usage of the
+//                     primitive in the compiled source code
+//                     if <tag2> != -1: the line number in the compiled code
+//                     block where the referring to the point of usage of the
+//                     primitive in the compiled source code
+//      <tag2>:        (optional) if <tag2> != -1 or not given: the column
+//                      offset in the given line (default: -1)
+//
+void print_instrumentation(
+    char const* const name, int compile_id, std::string const& code,
+    phylanx::execution_tree::compiler::function const& func,
+    std::map<std::string, hpx::id_type> const& entries)
+{
+    std::cout << "Instrumentation information for function: " << name << "\n";
+
+    for (auto const& e : entries)
+    {
+        // Extract compile_id and iterator index (tag) from the symbolic name
+        auto tags = extract_tags(e.first);
+        if (std::get<0>(tags) != compile_id)
+            continue;
+
+        // Find real position of given symbol in source code
+        if (std::get<1>(tags) != std::size_t(-1))
+        {
+            auto pos = get_pos(code, tags);
+            std::cout << e.first << ": " << name << "(" << pos.first << ", "
+                      << pos.second << "): ";
+
+            // Show the next (at max) 20 characters
+            auto offset = get_offset(code, tags);
+            auto end = code.begin() + offset;
+            for (int i = 0; end != code.end() && i != 20; ++end, ++i)
+            {
+                if (*end == '\n' || *end == '\r')
+                    break;
+            }
+            std::cout << std::string(code.begin() + offset, end)
+                      << " ...\n";
+        }
+        else
+        {
+            std::cout << e.first << "\n";
+        }
+    }
+
+    std::cout << "\n";
+
+    std::cout << "Tree information for function: " << name << "\n";
+    std::cout << phylanx::execution_tree::newick_tree(
+                     name, func.get_expression_topology())
+              << "\n\n";
+
+    std::cout << phylanx::execution_tree::dot_tree(
+                     name, func.get_expression_topology())
+              << "\n\n";
+}
+
+void print_performance_counter_data_csv(
+    std::vector<std::string> const& existing_primitive_instances)
+{
+    std::cout << std::endl << "Primitive Performance Counter Data in CSV:";
+
+    // CSV Header
+    std::cout << "\nprimitive_instance,display_name,count,time,eval_direct\n";
+
+    // Print performance data
+    for (auto const& entry :
+        phylanx::util::retrieve_counter_data(existing_primitive_instances))
+    {
+        std::cout << "\"" << entry.first << "\",\""
+                  << phylanx::execution_tree::compiler::primitive_display_name(
+                         entry.first)
+                  << "\"";
+        for (auto const& counter_value : entry.second)
+        {
+            std::cout << "," << counter_value;
+        }
+        std::cout << std::endl;
+    }
+
+    std::cout << std::endl;
+}
+
+///////////////////////////////////////////////////////////////////////////////
+int hpx_main(boost::program_options::variables_map& vm)
+{
+    if (vm.count("data_csv") == 0)
+    {
+        std::cerr << "Please specify '--data_csv=data-file'";
+        return hpx::finalize();
+    }
+
+    // Compile the given code
+    phylanx::execution_tree::compiler::function_list snippets;
+    auto const& code_read_x = phylanx::execution_tree::compile(
+        "read_x", phylanx::ast::generate_ast(read_x_code), snippets);
+
+    auto const& code_read_y = phylanx::execution_tree::compile(
+        "read_y", phylanx::ast::generate_ast(read_y_code), snippets);
+
+    auto const& code_lra = phylanx::execution_tree::compile(
+        vm.count("direct") != 0 ? "lra_direct" : "lra",
+        vm.count("direct") != 0 ? lra_code_direct : lra_code, snippets);
+
+    // Enable collection of performance data for all existing primitives
+    auto primitives = phylanx::util::enable_measurements();
+
+    auto read_x = code_read_x.run();
+    auto read_y = code_read_y.run();
+    auto lra = code_lra.run();
+
+    // Print instrumentation information, if enabled
+    if (vm.count("instrument") != 0)
+    {
+        auto entries =
+            hpx::agas::find_symbols(hpx::launch::sync, "/phylanx/*");
+
+        print_instrumentation("read_x", 0, read_x_code, read_x, entries);
+        print_instrumentation("read_y", 1, read_y_code, read_y, entries);
+        print_instrumentation("lra", 2, lra_code, lra, entries);
+    }
+
+    auto row_start = vm["row_start"].as<std::int64_t>();
+    auto col_start = vm["col_start"].as<std::int64_t>();
+    auto row_stop = vm["row_stop"].as<std::int64_t>();
+    auto col_stop = vm["col_stop"].as<std::int64_t>();
+
+    // Read the data from the files
+    auto x = read_x(vm["data_csv"].as<std::string>(), row_start, row_stop,
+        col_start, col_stop);
+    auto y =
+        read_y(vm["data_csv"].as<std::string>(), row_start, row_stop, col_stop);
+
+    // Remaining command line options
+    auto alpha = vm["alpha"].as<double>();
+    auto iterations = vm["num_iterations"].as<std::int64_t>();
+    bool enable_output = vm.count("enable_output") != 0;
+
+    // Measure execution time
+    hpx::util::high_resolution_timer t;
+
+    // Evaluate LRA using the read data
+    auto result =
+        lra(std::move(x), std::move(y), alpha, iterations, enable_output);
+
+    auto elapsed = t.elapsed();
+
+    // Print performance counter data in CSV
+    if (vm.count("instrument") != 0)
+    {
+        print_performance_counter_data_csv(primitives);
+    }
+
+    // Make sure all counters are properly initialized, don't reset current
+    // counter values
+    hpx::reinit_active_counters(false);
+
+    std::cout << "Result: \n"
+              << phylanx::execution_tree::extract_numeric_value(result) << "\n"
+              << "Calculated in: " << elapsed << " seconds\n";
+
+    return hpx::finalize();
+}
+
+int main(int argc, char* argv[])
+{
+    // Command line handling
+    boost::program_options::options_description desc("usage: lra [options]");
+    desc.add_options()
+        ("enable_output,e", "enable progress output (default: false)")
+        ("instrument,i", "print instrumentation information (default: false)")
+        ("direct,d", "use direct implementation of LRA (default: false)")
+        ("num_iterations,n",
+            boost::program_options::value<std::int64_t>()->default_value(750),
+            "number of iterations (default: 750)")
+        ("alpha,a",
+            boost::program_options::value<double>()->default_value(1e-5),
+            "alpha (default: 1e-5)")
+        ("data_csv",
+            boost::program_options::value<std::string>(),
+            "file name for reading data")
+        ("row_start",
+            boost::program_options::value<std::int64_t>()->default_value(0),
+            "row_start (default: 0)")
+        ("col_start",
+            boost::program_options::value<std::int64_t>()->default_value(0),
+            "col_start (default: 0)")
+        ("row_stop",
+            boost::program_options::value<std::int64_t>()->default_value(569),
+            "row_stop (default: 569)")
+        ("col_stop",
+            boost::program_options::value<std::int64_t>()->default_value(30),
+            "col_stop (default: 30)")
+        ;
+
+    return hpx::init(desc, argc, argv);
+}
diff --git a/static/weekly-data/2019-01-10-als-perfdata.csv b/static/weekly-data/2019-01-10-als-perfdata.csv
new file mode 100755
index 0000000..29dc203
--- /dev/null
+++ b/static/weekly-data/2019-01-10-als-perfdata.csv
@@ -0,0 +1,270 @@
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$44$32","add(44, 32)",3,580312,1
+"/phylanx/__add$1/2$45$32","add(45, 32)",3,328744,1
+"/phylanx/__add$10/2$71$30","add(71, 30)",3,53675,1
+"/phylanx/__add$2/2$52$38","add(52, 38)",30,3605704,1
+"/phylanx/__add$3/2$53$60","add(53, 60)",30,1574924,1
+"/phylanx/__add$4/2$54$52","add(54, 52)",30,438469,1
+"/phylanx/__add$5/2$55$38","add(55, 38)",30,443047,1
+"/phylanx/__add$6/2$64$38","add(64, 38)",300,18578779,1
+"/phylanx/__add$7/2$65$60","add(65, 60)",300,4776749,1
+"/phylanx/__add$8/2$66$52","add(66, 52)",300,3153814,1
+"/phylanx/__add$9/2$67$38","add(67, 38)",300,3384603,1
+"/phylanx/__lt$0/2$35$19","lt(35, 19)",4,205540,1
+"/phylanx/__lt$1/2$47$27","lt(47, 27)",33,732476,1
+"/phylanx/__lt$2/2$59$27","lt(59, 27)",303,5024296,1
+"/phylanx/__mul$0/2$10$26","mul(10, 26)",1,46134626,-1
+"/phylanx/__mul$1/2$44$55","mul(44, 55)",3,105886,1
+"/phylanx/__mul$2/2$45$55","mul(45, 55)",3,79612,1
+"/phylanx/__ne$0/2$51$40","ne(51, 40)",30,30916817,0
+"/phylanx/__ne$1/2$63$40","ne(63, 40)",300,3873461,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,4818,1
+"/phylanx/access-argument$1$row_start/0$6$50","access-argument/row_start(6, 50)",1,1198,1
+"/phylanx/access-argument$10$num_factors/2$22$51","access-argument/num_factors(22, 51)",1,775,1
+"/phylanx/access-argument$11$num_factors/2$23$34","access-argument/num_factors(23, 34)",1,5883,1
+"/phylanx/access-argument$12$num_factors/2$30$49","access-argument/num_factors(30, 49)",1,963,1
+"/phylanx/access-argument$13$num_factors/2$30$62","access-argument/num_factors(30, 62)",1,263,1
+"/phylanx/access-argument$14$num_factors/2$31$49","access-argument/num_factors(31, 49)",1,705,1
+"/phylanx/access-argument$15$num_factors/2$31$62","access-argument/num_factors(31, 62)",1,304,1
+"/phylanx/access-argument$16$num_factors/2$32$47","access-argument/num_factors(32, 47)",1,916,1
+"/phylanx/access-argument$17$num_factors/2$32$60","access-argument/num_factors(32, 60)",1,266,1
+"/phylanx/access-argument$18$num_factors/2$33$47","access-argument/num_factors(33, 47)",1,1008,1
+"/phylanx/access-argument$19$iterations/2$35$23","access-argument/iterations(35, 23)",4,3483,1
+"/phylanx/access-argument$2$row_stop/0$6$62","access-argument/row_stop(6, 62)",1,356,1
+"/phylanx/access-argument$20$enable_output/2$37$24","access-argument/enable_output(37, 24)",3,2416,1
+"/phylanx/access-argument$21$regularization/2$44$55","access-argument/regularization(44, 55)",3,2489,1
+"/phylanx/access-argument$22$regularization/2$45$55","access-argument/regularization(45, 55)",3,2383,1
+"/phylanx/access-argument$3$col_start/0$7$25","access-argument/col_start(7, 25)",1,1038,1
+"/phylanx/access-argument$4$col_stop/0$7$37","access-argument/col_stop(7, 37)",1,316,1
+"/phylanx/access-argument$5$ratings/2$8$37","access-argument/ratings(8, 37)",1,1983,1
+"/phylanx/access-argument$6$ratings/2$9$37","access-argument/ratings(9, 37)",1,1000,1
+"/phylanx/access-argument$7$alpha/2$10$26","access-argument/alpha(10, 26)",1,1000,1
+"/phylanx/access-argument$8$ratings/2$10$34","access-argument/ratings(10, 34)",1,577,1
+"/phylanx/access-argument$9$num_factors/2$21$51","access-argument/num_factors(21, 51)",1,1044,1
+"/phylanx/access-function$0$read_x/1$9$5","access-function/read_x(9, 5)",1,520,1
+"/phylanx/access-function$1$als_explicit/3$77$5","access-function/als_explicit(77, 5)",1,197,1
+"/phylanx/access-variable$0$num_items/2$12$52","access-variable/num_items(12, 52)",1,4587,1
+"/phylanx/access-variable$1$num_users/2$13$52","access-variable/num_users(13, 52)",1,3162,1
+"/phylanx/access-variable$10$num_items/2$24$34","access-variable/num_items(24, 34)",1,9447,1
+"/phylanx/access-variable$11$num_users/2$25$34","access-variable/num_users(25, 34)",1,8263,1
+"/phylanx/access-variable$12$k/2$35$19","access-variable/k(35, 19)",4,12380,1
+"/phylanx/access-variable$13$k/2$39$56","access-variable/k(39, 56)",0,0,1
+"/phylanx/access-variable$14$u/2$39$59","access-variable/u(39, 59)",0,0,1
+"/phylanx/access-variable$15$X/2$40$48","access-variable/X(40, 48)",0,0,1
+"/phylanx/access-variable$16$Y/2$41$48","access-variable/Y(41, 48)",0,0,1
+"/phylanx/access-variable$17$YtY/2$44$27","access-variable/YtY(44, 27)",0,0,1
+"/phylanx/access-variable$18$Y/2$44$46","access-variable/Y(44, 46)",3,11721,1
+"/phylanx/access-variable$19$Y/2$44$50","access-variable/Y(44, 50)",3,5711,1
+"/phylanx/access-variable$2$num_items/2$15$49","access-variable/num_items(15, 49)",1,4020,1
+"/phylanx/access-variable$20$I_f/2$44$72","access-variable/I_f(44, 72)",3,7019,1
+"/phylanx/access-variable$21$XtX/2$45$27","access-variable/XtX(45, 27)",0,0,1
+"/phylanx/access-variable$22$X/2$45$46","access-variable/X(45, 46)",3,11147,1
+"/phylanx/access-variable$23$X/2$45$50","access-variable/X(45, 50)",3,5836,1
+"/phylanx/access-variable$24$I_f/2$45$72","access-variable/I_f(45, 72)",3,5196,1
+"/phylanx/access-variable$25$u/2$47$27","access-variable/u(47, 27)",33,57963,1
+"/phylanx/access-variable$26$num_users/2$47$31","access-variable/num_users(47, 31)",33,38660,1
+"/phylanx/access-variable$27$conf_u/2$49$35","access-variable/conf_u(49, 35)",0,0,1
+"/phylanx/access-variable$28$conf/2$49$53","access-variable/conf(49, 53)",30,46622,1
+"/phylanx/access-variable$29$u/2$49$59","access-variable/u(49, 59)",30,42801,1
+"/phylanx/access-variable$3$num_items/2$15$60","access-variable/num_items(15, 60)",1,1662,1
+"/phylanx/access-variable$30$c_u/2$50$35","access-variable/c_u(50, 35)",0,0,1
+"/phylanx/access-variable$31$conf_u/2$50$45","access-variable/conf_u(50, 45)",30,52006,1
+"/phylanx/access-variable$32$p_u/2$51$35","access-variable/p_u(51, 35)",0,0,1
+"/phylanx/access-variable$33$conf_u/2$51$45","access-variable/conf_u(51, 45)",30,161001,1
+"/phylanx/access-variable$34$A/2$52$35","access-variable/A(52, 35)",0,0,1
+"/phylanx/access-variable$35$Y/2$52$56","access-variable/Y(52, 56)",30,59893,1
+"/phylanx/access-variable$36$c_u/2$52$60","access-variable/c_u(52, 60)",30,45404,1
+"/phylanx/access-variable$37$Y/2$52$66","access-variable/Y(52, 66)",30,43646,1
+"/phylanx/access-variable$38$YtY/2$52$70","access-variable/YtY(52, 70)",30,39096,1
+"/phylanx/access-variable$39$b/2$53$35","access-variable/b(53, 35)",0,0,1
+"/phylanx/access-variable$4$num_users/2$16$49","access-variable/num_users(16, 49)",1,3057,1
+"/phylanx/access-variable$40$Y/2$53$56","access-variable/Y(53, 56)",30,63744,1
+"/phylanx/access-variable$41$c_u/2$53$60","access-variable/c_u(53, 60)",30,44793,1
+"/phylanx/access-variable$42$I_i/2$53$66","access-variable/I_i(53, 66)",30,33921,1
+"/phylanx/access-variable$43$p_u/2$53$83","access-variable/p_u(53, 83)",30,52271,1
+"/phylanx/access-variable$44$u/2$54$49","access-variable/u(54, 49)",30,56306,1
+"/phylanx/access-variable$45$u/2$54$52","access-variable/u(54, 52)",30,33181,1
+"/phylanx/access-variable$46$X/2$54$41","access-variable/X(54, 41)",0,0,1
+"/phylanx/access-variable$47$A/2$54$80","access-variable/A(54, 80)",30,50913,1
+"/phylanx/access-variable$48$b/2$54$84","access-variable/b(54, 84)",30,39454,1
+"/phylanx/access-variable$49$u/2$55$35","access-variable/u(55, 35)",0,0,1
+"/phylanx/access-variable$5$num_users/2$16$60","access-variable/num_users(16, 60)",1,1608,1
+"/phylanx/access-variable$50$u/2$55$38","access-variable/u(55, 38)",30,40770,1
+"/phylanx/access-variable$51$u/2$58$27","access-variable/u(58, 27)",0,0,1
+"/phylanx/access-variable$52$i/2$59$27","access-variable/i(59, 27)",303,325687,1
+"/phylanx/access-variable$53$num_items/2$59$31","access-variable/num_items(59, 31)",303,283614,1
+"/phylanx/access-variable$54$conf_i/2$61$35","access-variable/conf_i(61, 35)",0,0,1
+"/phylanx/access-variable$55$conf/2$61$56","access-variable/conf(61, 56)",300,384787,1
+"/phylanx/access-variable$56$i/2$61$62","access-variable/i(61, 62)",300,350383,1
+"/phylanx/access-variable$57$c_i/2$62$35","access-variable/c_i(62, 35)",0,0,1
+"/phylanx/access-variable$58$conf_i/2$62$45","access-variable/conf_i(62, 45)",300,418045,1
+"/phylanx/access-variable$59$p_i/2$63$35","access-variable/p_i(63, 35)",0,0,1
+"/phylanx/access-variable$6$num_items/2$17$49","access-variable/num_items(17, 49)",1,2975,1
+"/phylanx/access-variable$60$conf_i/2$63$45","access-variable/conf_i(63, 45)",300,461457,1
+"/phylanx/access-variable$61$A/2$64$35","access-variable/A(64, 35)",0,0,1
+"/phylanx/access-variable$62$X/2$64$56","access-variable/X(64, 56)",300,377796,1
+"/phylanx/access-variable$63$c_i/2$64$59","access-variable/c_i(64, 59)",300,296134,1
+"/phylanx/access-variable$64$X/2$64$65","access-variable/X(64, 65)",300,272057,1
+"/phylanx/access-variable$65$XtX/2$64$70","access-variable/XtX(64, 70)",300,272139,1
+"/phylanx/access-variable$66$b/2$65$35","access-variable/b(65, 35)",0,0,1
+"/phylanx/access-variable$67$X/2$65$56","access-variable/X(65, 56)",300,350833,1
+"/phylanx/access-variable$68$c_i/2$65$60","access-variable/c_i(65, 60)",300,302039,1
+"/phylanx/access-variable$69$I_u/2$65$66","access-variable/I_u(65, 66)",300,240096,1
+"/phylanx/access-variable$7$num_users/2$18$49","access-variable/num_users(18, 49)",1,4224,1
+"/phylanx/access-variable$70$p_i/2$65$83","access-variable/p_i(65, 83)",300,332486,1
+"/phylanx/access-variable$71$i/2$66$49","access-variable/i(66, 49)",300,481232,1
+"/phylanx/access-variable$72$i/2$66$52","access-variable/i(66, 52)",300,256890,1
+"/phylanx/access-variable$73$Y/2$66$41","access-variable/Y(66, 41)",0,0,1
+"/phylanx/access-variable$74$A/2$66$80","access-variable/A(66, 80)",300,338992,1
+"/phylanx/access-variable$75$b/2$66$84","access-variable/b(66, 84)",300,315154,1
+"/phylanx/access-variable$76$i/2$67$35","access-variable/i(67, 35)",0,0,1
+"/phylanx/access-variable$77$i/2$67$38","access-variable/i(67, 38)",300,328131,1
+"/phylanx/access-variable$78$i/2$70$27","access-variable/i(70, 27)",0,0,1
+"/phylanx/access-variable$79$k/2$71$27","access-variable/k(71, 27)",0,0,1
+"/phylanx/access-variable$8$num_users/2$21$40","access-variable/num_users(21, 40)",1,3222,1
+"/phylanx/access-variable$80$k/2$71$30","access-variable/k(71, 30)",3,5543,1
+"/phylanx/access-variable$81$X/2$74$18","access-variable/X(74, 18)",1,2089,1
+"/phylanx/access-variable$82$Y/2$74$21","access-variable/Y(74, 21)",1,1199,1
+"/phylanx/access-variable$9$num_items/2$22$40","access-variable/num_items(22, 40)",1,3280,1
+"/phylanx/block$0/2$7$9","block(7, 9)",1,267859219,-1
+"/phylanx/block$1/2$36$17","block(36, 17)",3,275166622,0
+"/phylanx/block$2/2$38$29","block(38, 29)",0,0,-1
+"/phylanx/block$3/2$48$25","block(48, 25)",30,56178089,0
+"/phylanx/block$4/2$60$25","block(60, 25)",300,143701608,-1
+"/phylanx/constant$0/2$12$28","constant(12, 28)",1,159837,-1
+"/phylanx/constant$1/2$13$28","constant(13, 28)",1,88691,-1
+"/phylanx/constant$2/2$15$25","constant(15, 25)",1,110741,-1
+"/phylanx/constant$3/2$16$25","constant(16, 25)",1,85221,-1
+"/phylanx/constant$4/2$17$25","constant(17, 25)",1,72723,-1
+"/phylanx/constant$5/2$18$25","constant(18, 25)",1,78013,-1
+"/phylanx/constant$6/2$30$25","constant(30, 25)",1,81129,-1
+"/phylanx/constant$7/2$31$25","constant(31, 25)",1,78394,-1
+"/phylanx/constant$8/2$32$23","constant(32, 23)",1,75361,-1
+"/phylanx/constant$9/2$33$23","constant(33, 23)",1,70534,-1
+"/phylanx/cout$0/2$39$37","cout(39, 37)",0,0,-1
+"/phylanx/cout$1/2$40$37","cout(40, 37)",0,0,-1
+"/phylanx/cout$2/2$41$37","cout(41, 37)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,8936,-1
+"/phylanx/define-variable$1$num_users/2$8$20","define-variable/num_users(8, 20)",1,215863,-1
+"/phylanx/define-variable$10$X/2$21$20","define-variable/X(21, 20)",1,245594,-1
+"/phylanx/define-variable$11$Y/2$22$20","define-variable/Y(22, 20)",1,226806,-1
+"/phylanx/define-variable$12$I_f/2$23$20","define-variable/I_f(23, 20)",1,90910,-1
+"/phylanx/define-variable$13$I_i/2$24$20","define-variable/I_i(24, 20)",1,99698,-1
+"/phylanx/define-variable$14$I_u/2$25$20","define-variable/I_u(25, 20)",1,66500,-1
+"/phylanx/define-variable$15$k/2$26$20","define-variable/k(26, 20)",1,6826,-1
+"/phylanx/define-variable$16$i/2$27$20","define-variable/i(27, 20)",1,10470,-1
+"/phylanx/define-variable$17$u/2$28$20","define-variable/u(28, 20)",1,5255,-1
+"/phylanx/define-variable$18$XtX/2$30$20","define-variable/XtX(30, 20)",1,114160,-1
+"/phylanx/define-variable$19$YtY/2$31$20","define-variable/YtY(31, 20)",1,111123,-1
+"/phylanx/define-variable$2$num_items/2$9$20","define-variable/num_items(9, 20)",1,78933,-1
+"/phylanx/define-variable$20$A/2$32$20","define-variable/A(32, 20)",1,107550,-1
+"/phylanx/define-variable$21$b/2$33$20","define-variable/b(33, 20)",1,109997,-1
+"/phylanx/define-variable$22$als_explicit/2$5$12","define-variable/als_explicit(5, 12)",1,562,-1
+"/phylanx/define-variable$3$conf/2$10$20","define-variable/conf(10, 20)",1,46196609,-1
+"/phylanx/define-variable$4$conf_u/2$12$20","define-variable/conf_u(12, 20)",1,204368,-1
+"/phylanx/define-variable$5$conf_i/2$13$20","define-variable/conf_i(13, 20)",1,126307,-1
+"/phylanx/define-variable$6$c_u/2$15$20","define-variable/c_u(15, 20)",1,142177,-1
+"/phylanx/define-variable$7$c_i/2$16$20","define-variable/c_i(16, 20)",1,119364,-1
+"/phylanx/define-variable$8$p_u/2$17$20","define-variable/p_u(17, 20)",1,103904,-1
+"/phylanx/define-variable$9$p_i/2$18$20","define-variable/p_i(18, 20)",1,111912,-1
+"/phylanx/diag$0/2$50$40","diag(50, 40)",30,747771,1
+"/phylanx/diag$1/2$62$40","diag(62, 40)",300,3173255,1
+"/phylanx/dot$0/2$44$32","dot(44, 32)",3,451323,1
+"/phylanx/dot$1/2$45$32","dot(45, 32)",3,204777,1
+"/phylanx/dot$10/2$65$42","dot(65, 42)",300,12134693,1
+"/phylanx/dot$11/2$66$68","dot(66, 68)",300,11046755,1
+"/phylanx/dot$2/2$52$38","dot(52, 38)",30,2914904,1
+"/phylanx/dot$3/2$52$42","dot(52, 42)",30,2155938,1
+"/phylanx/dot$4/2$53$38","dot(53, 38)",30,4495237,1
+"/phylanx/dot$5/2$53$42","dot(53, 42)",30,3612580,1
+"/phylanx/dot$6/2$54$68","dot(54, 68)",30,1864883,1
+"/phylanx/dot$7/2$64$38","dot(64, 38)",300,13320104,1
+"/phylanx/dot$8/2$64$42","dot(64, 42)",300,8309576,1
+"/phylanx/dot$9/2$65$38","dot(65, 38)",300,18403921,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,700726803,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,700855201,1
+"/phylanx/function$1$als_explicit/2$5$12","function/als_explicit(5, 12)",1,267974504,1
+"/phylanx/identity$0/2$23$25","identity(23, 25)",1,51190,-1
+"/phylanx/identity$1/2$24$25","identity(24, 25)",1,62727,-1
+"/phylanx/identity$2/2$25$25","identity(25, 25)",1,30247,-1
+"/phylanx/if$0/2$37$21","if(37, 21)",3,74374,1
+"/phylanx/inverse$0/2$54$72","inverse(54, 72)",30,1000273,1
+"/phylanx/inverse$1/2$66$72","inverse(66, 72)",300,6253562,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,700813158,-1
+"/phylanx/lambda$1/2$5$12","lambda(5, 12)",1,267936086,-1
+"/phylanx/list$0/2$54$44","list(54, 44)",30,1159268,1
+"/phylanx/list$1/2$66$44","list(66, 44)",300,9243687,1
+"/phylanx/list$2/2$74$13","list(74, 13)",1,19688,-1
+"/phylanx/make_list$0/0$6$40","make_list(6, 40)",1,58568,-1
+"/phylanx/make_list$1/0$7$15","make_list(7, 15)",1,34731,-1
+"/phylanx/make_list$10/2$30$39","make_list(30, 39)",1,29022,-1
+"/phylanx/make_list$11/2$31$39","make_list(31, 39)",1,26585,-1
+"/phylanx/make_list$12/2$32$37","make_list(32, 37)",1,26032,-1
+"/phylanx/make_list$13/2$33$37","make_list(33, 37)",1,20310,-1
+"/phylanx/make_list$2/2$12$42","make_list(12, 42)",1,30240,-1
+"/phylanx/make_list$3/2$13$42","make_list(13, 42)",1,24440,-1
+"/phylanx/make_list$4/2$15$39","make_list(15, 39)",1,34843,-1
+"/phylanx/make_list$5/2$16$39","make_list(16, 39)",1,32092,-1
+"/phylanx/make_list$6/2$17$39","make_list(17, 39)",1,21760,-1
+"/phylanx/make_list$7/2$18$39","make_list(18, 39)",1,23905,-1
+"/phylanx/make_list$8/2$21$30","make_list(21, 30)",1,32517,-1
+"/phylanx/make_list$9/2$22$30","make_list(22, 30)",1,30400,-1
+"/phylanx/random$0/2$21$23","random(21, 23)",1,211243,-1
+"/phylanx/random$1/2$22$23","random(22, 23)",1,199446,-1
+"/phylanx/set_seed$0/2$20$13","set_seed(20, 13)",1,244026,-1
+"/phylanx/shape$0/2$8$31","shape(8, 31)",1,95177,-1
+"/phylanx/shape$1/2$9$31","shape(9, 31)",1,28443,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,700747090,-1
+"/phylanx/slice_column$0/2$61$43","slice_column(61, 43)",300,6861679,1
+"/phylanx/slice_row$0/2$49$43","slice_row(49, 43)",30,835425,1
+"/phylanx/store$0/2$44$21","store(44, 21)",3,668609,1
+"/phylanx/store$1/2$45$21","store(45, 21)",3,415095,1
+"/phylanx/store$10/2$61$29","store(61, 29)",300,15252577,1
+"/phylanx/store$11/2$62$29","store(62, 29)",300,9425952,1
+"/phylanx/store$12/2$63$29","store(63, 29)",300,9677825,1
+"/phylanx/store$13/2$64$29","store(64, 29)",300,24970065,1
+"/phylanx/store$14/2$65$29","store(65, 29)",300,24692187,1
+"/phylanx/store$15/2$66$29","store(66, 29)",300,31795808,1
+"/phylanx/store$16/2$67$29","store(67, 29)",300,11677842,1
+"/phylanx/store$17/2$70$21","store(70, 21)",3,88345,1
+"/phylanx/store$18/2$71$21","store(71, 21)",3,57638665,0
+"/phylanx/store$2/2$49$29","store(49, 29)",30,1830628,1
+"/phylanx/store$3/2$50$29","store(50, 29)",30,1653391,1
+"/phylanx/store$4/2$51$29","store(51, 29)",30,32601127,0
+"/phylanx/store$5/2$52$29","store(52, 29)",30,4563774,1
+"/phylanx/store$6/2$53$29","store(53, 29)",30,5472070,1
+"/phylanx/store$7/2$54$29","store(54, 29)",30,4432226,1
+"/phylanx/store$8/2$55$29","store(55, 29)",30,2817748,1
+"/phylanx/store$9/2$58$21","store(58, 21)",3,84777,1
+"/phylanx/transpose$0/2$44$36","transpose(44, 36)",3,81446,1
+"/phylanx/transpose$1/2$45$36","transpose(45, 36)",3,48107,1
+"/phylanx/transpose$2/2$52$46","transpose(52, 46)",30,534996,1
+"/phylanx/transpose$3/2$53$46","transpose(53, 46)",30,419282,1
+"/phylanx/transpose$4/2$53$73","transpose(53, 73)",30,316431,1
+"/phylanx/transpose$5/2$64$46","transpose(64, 46)",300,3554226,1
+"/phylanx/transpose$6/2$65$46","transpose(65, 46)",300,2807089,1
+"/phylanx/transpose$7/2$65$73","transpose(65, 73)",300,2238965,1
+"/phylanx/variable$0$num_users/2$8$20","variable/num_users(8, 20)",39,14737,1
+"/phylanx/variable$1$num_items/2$9$20","variable/num_items(9, 20)",309,79906,1
+"/phylanx/variable$10$Y/2$22$20","variable/Y(22, 20)",97,65031,1
+"/phylanx/variable$11$I_f/2$23$20","variable/I_f(23, 20)",6,4300,1
+"/phylanx/variable$12$I_i/2$24$20","variable/I_i(24, 20)",30,10925,1
+"/phylanx/variable$13$I_u/2$25$20","variable/I_u(25, 20)",300,77316,1
+"/phylanx/variable$14$k/2$26$20","variable/k(26, 20)",7,4473,1
+"/phylanx/variable$15$i/2$27$20","variable/i(27, 20)",1503,596987,1
+"/phylanx/variable$16$u/2$28$20","variable/u(28, 20)",153,79494,1
+"/phylanx/variable$17$XtX/2$30$20","variable/XtX(30, 20)",300,90619,1
+"/phylanx/variable$18$YtY/2$31$20","variable/YtY(31, 20)",30,13318,1
+"/phylanx/variable$19$A/2$32$20","variable/A(32, 20)",330,141766,1
+"/phylanx/variable$2$conf/2$10$20","variable/conf(10, 20)",330,191618,1
+"/phylanx/variable$20$b/2$33$20","variable/b(33, 20)",330,126289,1
+"/phylanx/variable$3$conf_u/2$12$20","variable/conf_u(12, 20)",60,51318,1
+"/phylanx/variable$4$conf_i/2$13$20","variable/conf_i(13, 20)",600,290690,1
+"/phylanx/variable$5$c_u/2$15$20","variable/c_u(15, 20)",60,31116,1
+"/phylanx/variable$6$c_i/2$16$20","variable/c_i(16, 20)",600,214435,1
+"/phylanx/variable$7$p_u/2$17$20","variable/p_u(17, 20)",30,20759,1
+"/phylanx/variable$8$p_i/2$18$20","variable/p_i(18, 20)",300,128101,1
+"/phylanx/variable$9$X/2$21$20","variable/X(21, 20)",907,383102,1
+"/phylanx/while$0/2$35$13","while(35, 13)",1,218106852,-1
+"/phylanx/while$1/2$47$21","while(47, 21)",3,56647724,0
+"/phylanx/while$2/2$59$21","while(59, 21)",3,159182428,0
\ No newline at end of file
diff --git a/static/weekly-data/2019-01-10-als-tree.txt b/static/weekly-data/2019-01-10-als-tree.txt
new file mode 100755
index 0000000..fa3fbd7
--- /dev/null
+++ b/static/weekly-data/2019-01-10-als-tree.txt
@@ -0,0 +1 @@
+(((((((/phylanx/access-argument$5$ratings/2$8$37) /phylanx/shape$0/2$8$31) /phylanx/variable$0$num_users/2$8$20) /phylanx/define-variable$1$num_users/2$8$20,(((/phylanx/access-argument$6$ratings/2$9$37) /phylanx/shape$1/2$9$31) /phylanx/variable$1$num_items/2$9$20) /phylanx/define-variable$2$num_items/2$9$20,(((/phylanx/access-argument$7$alpha/2$10$26,/phylanx/access-argument$8$ratings/2$10$34) /phylanx/__mul$0/2$10$26) /phylanx/variable$2$conf/2$10$20) /phylanx/define-variable$3$conf/2$10$20,((((/phylanx/access-variable$0$num_items/2$12$52) /phylanx/make_list$2/2$12$42) /phylanx/constant$0/2$12$28) /phylanx/variable$3$conf_u/2$12$20) /phylanx/define-variable$4$conf_u/2$12$20,((((/phylanx/access-variable$1$num_users/2$13$52) /phylanx/make_list$3/2$13$42) /phylanx/constant$1/2$13$28) /phylanx/variable$4$conf_i/2$13$20) /phylanx/define-variable$5$conf_i/2$13$20,((((/phylanx/access-variable$2$num_items/2$15$49,/phylanx/access-variable$3$num_items/2$15$60) /phylanx/make_list$4/2$15$39) /phylanx/constant$2/2$15$25) /phylanx/variable$5$c_u/2$15$20) /phylanx/define-variable$6$c_u/2$15$20,((((/phylanx/access-variable$4$num_users/2$16$49,/phylanx/access-variable$5$num_users/2$16$60) /phylanx/make_list$5/2$16$39) /phylanx/constant$3/2$16$25) /phylanx/variable$6$c_i/2$16$20) /phylanx/define-variable$7$c_i/2$16$20,((((/phylanx/access-variable$6$num_items/2$17$49) /phylanx/make_list$6/2$17$39) /phylanx/constant$4/2$17$25) /phylanx/variable$7$p_u/2$17$20) /phylanx/define-variable$8$p_u/2$17$20,((((/phylanx/access-variable$7$num_users/2$18$49) /phylanx/make_list$7/2$18$39) /phylanx/constant$5/2$18$25) /phylanx/variable$8$p_i/2$18$20) /phylanx/define-variable$9$p_i/2$18$20,/phylanx/set_seed$0/2$20$13,((((/phylanx/access-variable$8$num_users/2$21$40,/phylanx/access-argument$9$num_factors/2$21$51) /phylanx/make_list$8/2$21$30) /phylanx/random$0/2$21$23) /phylanx/variable$9$X/2$21$20) /phylanx/define-variable$10$X/2$21$20,((((/phylanx/access-variable$9$num_items/2$22$40,/phylanx/access-argument$10$num_factors/2$22$51) /phylanx/make_list$9/2$22$30) /phylanx/random$1/2$22$23) /phylanx/variable$10$Y/2$22$20) /phylanx/define-variable$11$Y/2$22$20,(((/phylanx/access-argument$11$num_factors/2$23$34) /phylanx/identity$0/2$23$25) /phylanx/variable$11$I_f/2$23$20) /phylanx/define-variable$12$I_f/2$23$20,(((/phylanx/access-variable$10$num_items/2$24$34) /phylanx/identity$1/2$24$25) /phylanx/variable$12$I_i/2$24$20) /phylanx/define-variable$13$I_i/2$24$20,(((/phylanx/access-variable$11$num_users/2$25$34) /phylanx/identity$2/2$25$25) /phylanx/variable$13$I_u/2$25$20) /phylanx/define-variable$14$I_u/2$25$20,(/phylanx/variable$14$k/2$26$20) /phylanx/define-variable$15$k/2$26$20,(/phylanx/variable$15$i/2$27$20) /phylanx/define-variable$16$i/2$27$20,(/phylanx/variable$16$u/2$28$20) /phylanx/define-variable$17$u/2$28$20,((((/phylanx/access-argument$12$num_factors/2$30$49,/phylanx/access-argument$13$num_factors/2$30$62) /phylanx/make_list$10/2$30$39) /phylanx/constant$6/2$30$25) /phylanx/variable$17$XtX/2$30$20) /phylanx/define-variable$18$XtX/2$30$20,((((/phylanx/access-argument$14$num_factors/2$31$49,/phylanx/access-argument$15$num_factors/2$31$62) /phylanx/make_list$11/2$31$39) /phylanx/constant$7/2$31$25) /phylanx/variable$18$YtY/2$31$20) /phylanx/define-variable$19$YtY/2$31$20,((((/phylanx/access-argument$16$num_factors/2$32$47,/phylanx/access-argument$17$num_factors/2$32$60) /phylanx/make_list$12/2$32$37) /phylanx/constant$8/2$32$23) /phylanx/variable$19$A/2$32$20) /phylanx/define-variable$20$A/2$32$20,((((/phylanx/access-argument$18$num_factors/2$33$47) /phylanx/make_list$13/2$33$37) /phylanx/constant$9/2$33$23) /phylanx/variable$20$b/2$33$20) /phylanx/define-variable$21$b/2$33$20,((/phylanx/access-variable$12$k/2$35$19,/phylanx/access-argument$19$iterations/2$35$23) /phylanx/__lt$0/2$35$19,((/phylanx/access-argument$20$enable_output/2$37$24,((/phylanx/access-variable$13$k/2$39$56,/phylanx/access-variable$14$u/2$39$59) /phylanx/cout$0/2$39$37,(/phylanx/access-variable$15$X/2$40$48) /phylanx/cout$1/2$40$37,(/phylanx/access-variable$16$Y/2$41$48) /phylanx/cout$2/2$41$37) /phylanx/block$2/2$38$29) /phylanx/if$0/2$37$21,(/phylanx/access-variable$17$YtY/2$44$27,(((/phylanx/access-variable$18$Y/2$44$46) /phylanx/transpose$0/2$44$36,/phylanx/access-variable$19$Y/2$44$50) /phylanx/dot$0/2$44$32,(/phylanx/access-argument$21$regularization/2$44$55,/phylanx/access-variable$20$I_f/2$44$72) /phylanx/__mul$1/2$44$55) /phylanx/__add$0/2$44$32) /phylanx/store$0/2$44$21,(/phylanx/access-variable$21$XtX/2$45$27,(((/phylanx/access-variable$22$X/2$45$46) /phylanx/transpose$1/2$45$36,/phylanx/access-variable$23$X/2$45$50) /phylanx/dot$1/2$45$32,(/phylanx/access-argument$22$regularization/2$45$55,/phylanx/access-variable$24$I_f/2$45$72) /phylanx/__mul$2/2$45$55) /phylanx/__add$1/2$45$32) /phylanx/store$1/2$45$21,((/phylanx/access-variable$25$u/2$47$27,/phylanx/access-variable$26$num_users/2$47$31) /phylanx/__lt$1/2$47$27,((/phylanx/access-variable$27$conf_u/2$49$35,(/phylanx/access-variable$28$conf/2$49$53,/phylanx/access-variable$29$u/2$49$59) /phylanx/slice_row$0/2$49$43) /phylanx/store$2/2$49$29,(/phylanx/access-variable$30$c_u/2$50$35,(/phylanx/access-variable$31$conf_u/2$50$45) /phylanx/diag$0/2$50$40) /phylanx/store$3/2$50$29,(/phylanx/access-variable$32$p_u/2$51$35,(/phylanx/access-variable$33$conf_u/2$51$45) /phylanx/__ne$0/2$51$40) /phylanx/store$4/2$51$29,(/phylanx/access-variable$34$A/2$52$35,((((/phylanx/access-variable$35$Y/2$52$56) /phylanx/transpose$2/2$52$46,/phylanx/access-variable$36$c_u/2$52$60) /phylanx/dot$3/2$52$42,/phylanx/access-variable$37$Y/2$52$66) /phylanx/dot$2/2$52$38,/phylanx/access-variable$38$YtY/2$52$70) /phylanx/__add$2/2$52$38) /phylanx/store$5/2$52$29,(/phylanx/access-variable$39$b/2$53$35,(((/phylanx/access-variable$40$Y/2$53$56) /phylanx/transpose$3/2$53$46,(/phylanx/access-variable$41$c_u/2$53$60,/phylanx/access-variable$42$I_i/2$53$66) /phylanx/__add$3/2$53$60) /phylanx/dot$5/2$53$42,(/phylanx/access-variable$43$p_u/2$53$83) /phylanx/transpose$4/2$53$73) /phylanx/dot$4/2$53$38) /phylanx/store$6/2$53$29,(/phylanx/access-variable$46$X/2$54$41,((/phylanx/access-variable$47$A/2$54$80) /phylanx/inverse$0/2$54$72,/phylanx/access-variable$48$b/2$54$84) /phylanx/dot$6/2$54$68) /phylanx/store$7/2$54$29,(/phylanx/access-variable$49$u/2$55$35,(/phylanx/access-variable$50$u/2$55$38) /phylanx/__add$5/2$55$38) /phylanx/store$8/2$55$29) /phylanx/block$3/2$48$25) /phylanx/while$1/2$47$21,(/phylanx/access-variable$51$u/2$58$27) /phylanx/store$9/2$58$21,((/phylanx/access-variable$52$i/2$59$27,/phylanx/access-variable$53$num_items/2$59$31) /phylanx/__lt$2/2$59$27,((/phylanx/access-variable$54$conf_i/2$61$35,(/phylanx/access-variable$55$conf/2$61$56,/phylanx/access-variable$56$i/2$61$62) /phylanx/slice_column$0/2$61$43) /phylanx/store$10/2$61$29,(/phylanx/access-variable$57$c_i/2$62$35,(/phylanx/access-variable$58$conf_i/2$62$45) /phylanx/diag$1/2$62$40) /phylanx/store$11/2$62$29,(/phylanx/access-variable$59$p_i/2$63$35,(/phylanx/access-variable$60$conf_i/2$63$45) /phylanx/__ne$1/2$63$40) /phylanx/store$12/2$63$29,(/phylanx/access-variable$61$A/2$64$35,((((/phylanx/access-variable$62$X/2$64$56) /phylanx/transpose$5/2$64$46,/phylanx/access-variable$63$c_i/2$64$59) /phylanx/dot$8/2$64$42,/phylanx/access-variable$64$X/2$64$65) /phylanx/dot$7/2$64$38,/phylanx/access-variable$65$XtX/2$64$70) /phylanx/__add$6/2$64$38) /phylanx/store$13/2$64$29,(/phylanx/access-variable$66$b/2$65$35,(((/phylanx/access-variable$67$X/2$65$56) /phylanx/transpose$6/2$65$46,(/phylanx/access-variable$68$c_i/2$65$60,/phylanx/access-variable$69$I_u/2$65$66) /phylanx/__add$7/2$65$60) /phylanx/dot$10/2$65$42,(/phylanx/access-variable$70$p_i/2$65$83) /phylanx/transpose$7/2$65$73) /phylanx/dot$9/2$65$38) /phylanx/store$14/2$65$29,(/phylanx/access-variable$73$Y/2$66$41,((/phylanx/access-variable$74$A/2$66$80) /phylanx/inverse$1/2$66$72,/phylanx/access-variable$75$b/2$66$84) /phylanx/dot$11/2$66$68) /phylanx/store$15/2$66$29,(/phylanx/access-variable$76$i/2$67$35,(/phylanx/access-variable$77$i/2$67$38) /phylanx/__add$9/2$67$38) /phylanx/store$16/2$67$29) /phylanx/block$4/2$60$25) /phylanx/while$2/2$59$21,(/phylanx/access-variable$78$i/2$70$27) /phylanx/store$17/2$70$21,(/phylanx/access-variable$79$k/2$71$27,(/phylanx/access-variable$80$k/2$71$30) /phylanx/__add$10/2$71$30) /phylanx/store$18/2$71$21) /phylanx/block$1/2$36$17) /phylanx/while$0/2$35$13,(/phylanx/access-variable$81$X/2$74$18,/phylanx/access-variable$82$Y/2$74$21) /phylanx/list$2/2$74$13) /phylanx/block$0/2$7$9) /phylanx/lambda$1/2$5$12) /phylanx/function$1$als_explicit/2$5$12) als;
\ No newline at end of file
diff --git a/static/weekly-data/2019-01-17-als-perfdata.csv b/static/weekly-data/2019-01-17-als-perfdata.csv
new file mode 100644
index 0000000..77ea9b2
--- /dev/null
+++ b/static/weekly-data/2019-01-17-als-perfdata.csv
@@ -0,0 +1,270 @@
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$44$32","add(44, 32)",3,642328,1
+"/phylanx/__add$1/2$45$32","add(45, 32)",3,375069,1
+"/phylanx/__add$10/2$71$30","add(71, 30)",3,56195,1
+"/phylanx/__add$2/2$52$38","add(52, 38)",30,3691754,1
+"/phylanx/__add$3/2$53$60","add(53, 60)",30,1536680,1
+"/phylanx/__add$4/2$54$52","add(54, 52)",30,437661,1
+"/phylanx/__add$5/2$55$38","add(55, 38)",30,450044,1
+"/phylanx/__add$6/2$64$38","add(64, 38)",300,19446873,1
+"/phylanx/__add$7/2$65$60","add(65, 60)",300,4908812,1
+"/phylanx/__add$8/2$66$52","add(66, 52)",300,3162566,1
+"/phylanx/__add$9/2$67$38","add(67, 38)",300,3423066,1
+"/phylanx/__lt$0/2$35$19","lt(35, 19)",4,209564,1
+"/phylanx/__lt$1/2$47$27","lt(47, 27)",33,768667,1
+"/phylanx/__lt$2/2$59$27","lt(59, 27)",303,5310367,1
+"/phylanx/__mul$0/2$10$26","mul(10, 26)",1,189297,-1
+"/phylanx/__mul$1/2$44$55","mul(44, 55)",3,101966,1
+"/phylanx/__mul$2/2$45$55","mul(45, 55)",3,91213,1
+"/phylanx/__ne$0/2$51$40","ne(51, 40)",30,649599,1
+"/phylanx/__ne$1/2$63$40","ne(63, 40)",300,4035775,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,800,1
+"/phylanx/access-argument$1$row_start/0$6$50","access-argument/row_start(6, 50)",1,4695,1
+"/phylanx/access-argument$10$num_factors/2$22$51","access-argument/num_factors(22, 51)",1,873,1
+"/phylanx/access-argument$11$num_factors/2$23$34","access-argument/num_factors(23, 34)",1,5503,1
+"/phylanx/access-argument$12$num_factors/2$30$49","access-argument/num_factors(30, 49)",1,1256,1
+"/phylanx/access-argument$13$num_factors/2$30$62","access-argument/num_factors(30, 62)",1,343,1
+"/phylanx/access-argument$14$num_factors/2$31$49","access-argument/num_factors(31, 49)",1,1180,1
+"/phylanx/access-argument$15$num_factors/2$31$62","access-argument/num_factors(31, 62)",1,286,1
+"/phylanx/access-argument$16$num_factors/2$32$47","access-argument/num_factors(32, 47)",1,834,1
+"/phylanx/access-argument$17$num_factors/2$32$60","access-argument/num_factors(32, 60)",1,370,1
+"/phylanx/access-argument$18$num_factors/2$33$47","access-argument/num_factors(33, 47)",1,1534,1
+"/phylanx/access-argument$19$iterations/2$35$23","access-argument/iterations(35, 23)",4,2892,1
+"/phylanx/access-argument$2$row_stop/0$6$62","access-argument/row_stop(6, 62)",1,543,1
+"/phylanx/access-argument$20$enable_output/2$37$24","access-argument/enable_output(37, 24)",3,2695,1
+"/phylanx/access-argument$21$regularization/2$44$55","access-argument/regularization(44, 55)",3,1958,1
+"/phylanx/access-argument$22$regularization/2$45$55","access-argument/regularization(45, 55)",3,2684,1
+"/phylanx/access-argument$3$col_start/0$7$25","access-argument/col_start(7, 25)",1,674,1
+"/phylanx/access-argument$4$col_stop/0$7$37","access-argument/col_stop(7, 37)",1,198,1
+"/phylanx/access-argument$5$ratings/2$8$37","access-argument/ratings(8, 37)",1,1834,1
+"/phylanx/access-argument$6$ratings/2$9$37","access-argument/ratings(9, 37)",1,1112,1
+"/phylanx/access-argument$7$alpha/2$10$26","access-argument/alpha(10, 26)",1,806,1
+"/phylanx/access-argument$8$ratings/2$10$34","access-argument/ratings(10, 34)",1,529,1
+"/phylanx/access-argument$9$num_factors/2$21$51","access-argument/num_factors(21, 51)",1,1334,1
+"/phylanx/access-function$0$read_x/1$9$5","access-function/read_x(9, 5)",1,412,1
+"/phylanx/access-function$1$als_explicit/3$77$5","access-function/als_explicit(77, 5)",1,174,1
+"/phylanx/access-variable$0$num_items/2$12$52","access-variable/num_items(12, 52)",1,5393,1
+"/phylanx/access-variable$1$num_users/2$13$52","access-variable/num_users(13, 52)",1,3813,1
+"/phylanx/access-variable$10$num_items/2$24$34","access-variable/num_items(24, 34)",1,9200,1
+"/phylanx/access-variable$11$num_users/2$25$34","access-variable/num_users(25, 34)",1,8417,1
+"/phylanx/access-variable$12$k/2$35$19","access-variable/k(35, 19)",4,12601,1
+"/phylanx/access-variable$13$k/2$39$56","access-variable/k(39, 56)",0,0,1
+"/phylanx/access-variable$14$u/2$39$59","access-variable/u(39, 59)",0,0,1
+"/phylanx/access-variable$15$X/2$40$48","access-variable/X(40, 48)",0,0,1
+"/phylanx/access-variable$16$Y/2$41$48","access-variable/Y(41, 48)",0,0,1
+"/phylanx/access-variable$17$YtY/2$44$27","access-variable/YtY(44, 27)",0,0,1
+"/phylanx/access-variable$18$Y/2$44$46","access-variable/Y(44, 46)",3,10982,1
+"/phylanx/access-variable$19$Y/2$44$50","access-variable/Y(44, 50)",3,6883,1
+"/phylanx/access-variable$2$num_items/2$15$49","access-variable/num_items(15, 49)",1,5890,1
+"/phylanx/access-variable$20$I_f/2$44$72","access-variable/I_f(44, 72)",3,7357,1
+"/phylanx/access-variable$21$XtX/2$45$27","access-variable/XtX(45, 27)",0,0,1
+"/phylanx/access-variable$22$X/2$45$46","access-variable/X(45, 46)",3,12799,1
+"/phylanx/access-variable$23$X/2$45$50","access-variable/X(45, 50)",3,7030,1
+"/phylanx/access-variable$24$I_f/2$45$72","access-variable/I_f(45, 72)",3,6130,1
+"/phylanx/access-variable$25$u/2$47$27","access-variable/u(47, 27)",33,62524,1
+"/phylanx/access-variable$26$num_users/2$47$31","access-variable/num_users(47, 31)",33,41142,1
+"/phylanx/access-variable$27$conf_u/2$49$35","access-variable/conf_u(49, 35)",0,0,1
+"/phylanx/access-variable$28$conf/2$49$53","access-variable/conf(49, 53)",30,53967,1
+"/phylanx/access-variable$29$u/2$49$59","access-variable/u(49, 59)",30,48731,1
+"/phylanx/access-variable$3$num_items/2$15$60","access-variable/num_items(15, 60)",1,3170,1
+"/phylanx/access-variable$30$c_u/2$50$35","access-variable/c_u(50, 35)",0,0,1
+"/phylanx/access-variable$31$conf_u/2$50$45","access-variable/conf_u(50, 45)",30,58080,1
+"/phylanx/access-variable$32$p_u/2$51$35","access-variable/p_u(51, 35)",0,0,1
+"/phylanx/access-variable$33$conf_u/2$51$45","access-variable/conf_u(51, 45)",30,73525,1
+"/phylanx/access-variable$34$A/2$52$35","access-variable/A(52, 35)",0,0,1
+"/phylanx/access-variable$35$Y/2$52$56","access-variable/Y(52, 56)",30,60041,1
+"/phylanx/access-variable$36$c_u/2$52$60","access-variable/c_u(52, 60)",30,42641,1
+"/phylanx/access-variable$37$Y/2$52$66","access-variable/Y(52, 66)",30,43039,1
+"/phylanx/access-variable$38$YtY/2$52$70","access-variable/YtY(52, 70)",30,40074,1
+"/phylanx/access-variable$39$b/2$53$35","access-variable/b(53, 35)",0,0,1
+"/phylanx/access-variable$4$num_users/2$16$49","access-variable/num_users(16, 49)",1,3820,1
+"/phylanx/access-variable$40$Y/2$53$56","access-variable/Y(53, 56)",30,58886,1
+"/phylanx/access-variable$41$c_u/2$53$60","access-variable/c_u(53, 60)",30,43381,1
+"/phylanx/access-variable$42$I_i/2$53$66","access-variable/I_i(53, 66)",30,36136,1
+"/phylanx/access-variable$43$p_u/2$53$83","access-variable/p_u(53, 83)",30,59221,1
+"/phylanx/access-variable$44$u/2$54$49","access-variable/u(54, 49)",30,66112,1
+"/phylanx/access-variable$45$u/2$54$52","access-variable/u(54, 52)",30,36051,1
+"/phylanx/access-variable$46$X/2$54$41","access-variable/X(54, 41)",0,0,1
+"/phylanx/access-variable$47$A/2$54$80","access-variable/A(54, 80)",30,52375,1
+"/phylanx/access-variable$48$b/2$54$84","access-variable/b(54, 84)",30,44001,1
+"/phylanx/access-variable$49$u/2$55$35","access-variable/u(55, 35)",0,0,1
+"/phylanx/access-variable$5$num_users/2$16$60","access-variable/num_users(16, 60)",1,2143,1
+"/phylanx/access-variable$50$u/2$55$38","access-variable/u(55, 38)",30,45687,1
+"/phylanx/access-variable$51$u/2$58$27","access-variable/u(58, 27)",0,0,1
+"/phylanx/access-variable$52$i/2$59$27","access-variable/i(59, 27)",303,402366,1
+"/phylanx/access-variable$53$num_items/2$59$31","access-variable/num_items(59, 31)",303,296134,1
+"/phylanx/access-variable$54$conf_i/2$61$35","access-variable/conf_i(61, 35)",0,0,1
+"/phylanx/access-variable$55$conf/2$61$56","access-variable/conf(61, 56)",300,407734,1
+"/phylanx/access-variable$56$i/2$61$62","access-variable/i(61, 62)",300,412571,1
+"/phylanx/access-variable$57$c_i/2$62$35","access-variable/c_i(62, 35)",0,0,1
+"/phylanx/access-variable$58$conf_i/2$62$45","access-variable/conf_i(62, 45)",300,415211,1
+"/phylanx/access-variable$59$p_i/2$63$35","access-variable/p_i(63, 35)",0,0,1
+"/phylanx/access-variable$6$num_items/2$17$49","access-variable/num_items(17, 49)",1,3980,1
+"/phylanx/access-variable$60$conf_i/2$63$45","access-variable/conf_i(63, 45)",300,453782,1
+"/phylanx/access-variable$61$A/2$64$35","access-variable/A(64, 35)",0,0,1
+"/phylanx/access-variable$62$X/2$64$56","access-variable/X(64, 56)",300,389618,1
+"/phylanx/access-variable$63$c_i/2$64$59","access-variable/c_i(64, 59)",300,309671,1
+"/phylanx/access-variable$64$X/2$64$65","access-variable/X(64, 65)",300,309280,1
+"/phylanx/access-variable$65$XtX/2$64$70","access-variable/XtX(64, 70)",300,283426,1
+"/phylanx/access-variable$66$b/2$65$35","access-variable/b(65, 35)",0,0,1
+"/phylanx/access-variable$67$X/2$65$56","access-variable/X(65, 56)",300,353120,1
+"/phylanx/access-variable$68$c_i/2$65$60","access-variable/c_i(65, 60)",300,294691,1
+"/phylanx/access-variable$69$I_u/2$65$66","access-variable/I_u(65, 66)",300,264269,1
+"/phylanx/access-variable$7$num_users/2$18$49","access-variable/num_users(18, 49)",1,4073,1
+"/phylanx/access-variable$70$p_i/2$65$83","access-variable/p_i(65, 83)",300,331352,1
+"/phylanx/access-variable$71$i/2$66$49","access-variable/i(66, 49)",300,523865,1
+"/phylanx/access-variable$72$i/2$66$52","access-variable/i(66, 52)",300,265834,1
+"/phylanx/access-variable$73$Y/2$66$41","access-variable/Y(66, 41)",0,0,1
+"/phylanx/access-variable$74$A/2$66$80","access-variable/A(66, 80)",300,355788,1
+"/phylanx/access-variable$75$b/2$66$84","access-variable/b(66, 84)",300,329152,1
+"/phylanx/access-variable$76$i/2$67$35","access-variable/i(67, 35)",0,0,1
+"/phylanx/access-variable$77$i/2$67$38","access-variable/i(67, 38)",300,384938,1
+"/phylanx/access-variable$78$i/2$70$27","access-variable/i(70, 27)",0,0,1
+"/phylanx/access-variable$79$k/2$71$27","access-variable/k(71, 27)",0,0,1
+"/phylanx/access-variable$8$num_users/2$21$40","access-variable/num_users(21, 40)",1,4080,1
+"/phylanx/access-variable$80$k/2$71$30","access-variable/k(71, 30)",3,5685,1
+"/phylanx/access-variable$81$X/2$74$18","access-variable/X(74, 18)",1,2084,1
+"/phylanx/access-variable$82$Y/2$74$21","access-variable/Y(74, 21)",1,1154,1
+"/phylanx/access-variable$9$num_items/2$22$40","access-variable/num_items(22, 40)",1,4157,1
+"/phylanx/block$0/2$7$9","block(7, 9)",1,199092711,-1
+"/phylanx/block$1/2$36$17","block(36, 17)",3,254950259,0
+"/phylanx/block$2/2$38$29","block(38, 29)",0,0,-1
+"/phylanx/block$3/2$48$25","block(48, 25)",30,25648874,0
+"/phylanx/block$4/2$60$25","block(60, 25)",300,149747520,-1
+"/phylanx/constant$0/2$12$28","constant(12, 28)",1,182584,-1
+"/phylanx/constant$1/2$13$28","constant(13, 28)",1,90837,-1
+"/phylanx/constant$2/2$15$25","constant(15, 25)",1,124390,-1
+"/phylanx/constant$3/2$16$25","constant(16, 25)",1,116483,-1
+"/phylanx/constant$4/2$17$25","constant(17, 25)",1,87013,-1
+"/phylanx/constant$5/2$18$25","constant(18, 25)",1,86067,-1
+"/phylanx/constant$6/2$30$25","constant(30, 25)",1,106367,-1
+"/phylanx/constant$7/2$31$25","constant(31, 25)",1,95000,-1
+"/phylanx/constant$8/2$32$23","constant(32, 23)",1,89037,-1
+"/phylanx/constant$9/2$33$23","constant(33, 23)",1,73883,-1
+"/phylanx/cout$0/2$39$37","cout(39, 37)",0,0,-1
+"/phylanx/cout$1/2$40$37","cout(40, 37)",0,0,-1
+"/phylanx/cout$2/2$41$37","cout(41, 37)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,8445,-1
+"/phylanx/define-variable$1$num_users/2$8$20","define-variable/num_users(8, 20)",1,178160,-1
+"/phylanx/define-variable$10$X/2$21$20","define-variable/X(21, 20)",1,281077,-1
+"/phylanx/define-variable$11$Y/2$22$20","define-variable/Y(22, 20)",1,288143,-1
+"/phylanx/define-variable$12$I_f/2$23$20","define-variable/I_f(23, 20)",1,96126,-1
+"/phylanx/define-variable$13$I_i/2$24$20","define-variable/I_i(24, 20)",1,104700,-1
+"/phylanx/define-variable$14$I_u/2$25$20","define-variable/I_u(25, 20)",1,69450,-1
+"/phylanx/define-variable$15$k/2$26$20","define-variable/k(26, 20)",1,9303,-1
+"/phylanx/define-variable$16$i/2$27$20","define-variable/i(27, 20)",1,6594,-1
+"/phylanx/define-variable$17$u/2$28$20","define-variable/u(28, 20)",1,5764,-1
+"/phylanx/define-variable$18$XtX/2$30$20","define-variable/XtX(30, 20)",1,140730,-1
+"/phylanx/define-variable$19$YtY/2$31$20","define-variable/YtY(31, 20)",1,157107,-1
+"/phylanx/define-variable$2$num_items/2$9$20","define-variable/num_items(9, 20)",1,61514,-1
+"/phylanx/define-variable$20$A/2$32$20","define-variable/A(32, 20)",1,125020,-1
+"/phylanx/define-variable$21$b/2$33$20","define-variable/b(33, 20)",1,102383,-1
+"/phylanx/define-variable$22$als_explicit/2$5$12","define-variable/als_explicit(5, 12)",1,488,-1
+"/phylanx/define-variable$3$conf/2$10$20","define-variable/conf(10, 20)",1,234524,-1
+"/phylanx/define-variable$4$conf_u/2$12$20","define-variable/conf_u(12, 20)",1,217704,-1
+"/phylanx/define-variable$5$conf_i/2$13$20","define-variable/conf_i(13, 20)",1,131233,-1
+"/phylanx/define-variable$6$c_u/2$15$20","define-variable/c_u(15, 20)",1,157610,-1
+"/phylanx/define-variable$7$c_i/2$16$20","define-variable/c_i(16, 20)",1,157487,-1
+"/phylanx/define-variable$8$p_u/2$17$20","define-variable/p_u(17, 20)",1,124290,-1
+"/phylanx/define-variable$9$p_i/2$18$20","define-variable/p_i(18, 20)",1,125710,-1
+"/phylanx/diag$0/2$50$40","diag(50, 40)",30,760317,1
+"/phylanx/diag$1/2$62$40","diag(62, 40)",300,3384140,1
+"/phylanx/dot$0/2$44$32","dot(44, 32)",3,493244,1
+"/phylanx/dot$1/2$45$32","dot(45, 32)",3,254961,1
+"/phylanx/dot$10/2$65$42","dot(65, 42)",300,12515255,1
+"/phylanx/dot$11/2$66$68","dot(66, 68)",300,11584890,1
+"/phylanx/dot$2/2$52$38","dot(52, 38)",30,2983627,1
+"/phylanx/dot$3/2$52$42","dot(52, 42)",30,2189596,1
+"/phylanx/dot$4/2$53$38","dot(53, 38)",30,4725067,1
+"/phylanx/dot$5/2$53$42","dot(53, 42)",30,3770844,1
+"/phylanx/dot$6/2$54$68","dot(54, 68)",30,2095199,1
+"/phylanx/dot$7/2$64$38","dot(64, 38)",300,14013980,1
+"/phylanx/dot$8/2$64$42","dot(64, 42)",300,8705687,1
+"/phylanx/dot$9/2$65$38","dot(65, 38)",300,19048755,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,226014258,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,226213257,1
+"/phylanx/function$1$als_explicit/2$5$12","function/als_explicit(5, 12)",1,199185011,1
+"/phylanx/identity$0/2$23$25","identity(23, 25)",1,49147,-1
+"/phylanx/identity$1/2$24$25","identity(24, 25)",1,62723,-1
+"/phylanx/identity$2/2$25$25","identity(25, 25)",1,29803,-1
+"/phylanx/if$0/2$37$21","if(37, 21)",3,87821,1
+"/phylanx/inverse$0/2$54$72","inverse(54, 72)",30,1156787,1
+"/phylanx/inverse$1/2$66$72","inverse(66, 72)",300,6519861,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,226178896,-1
+"/phylanx/lambda$1/2$5$12","lambda(5, 12)",1,199152536,-1
+"/phylanx/list$0/2$54$44","list(54, 44)",30,1266704,1
+"/phylanx/list$1/2$66$44","list(66, 44)",300,9609189,1
+"/phylanx/list$2/2$74$13","list(74, 13)",1,19703,-1
+"/phylanx/make_list$0/0$6$40","make_list(6, 40)",1,67478,-1
+"/phylanx/make_list$1/0$7$15","make_list(7, 15)",1,21967,-1
+"/phylanx/make_list$10/2$30$39","make_list(30, 39)",1,38694,-1
+"/phylanx/make_list$11/2$31$39","make_list(31, 39)",1,37786,-1
+"/phylanx/make_list$12/2$32$37","make_list(32, 37)",1,33770,-1
+"/phylanx/make_list$13/2$33$37","make_list(33, 37)",1,34150,-1
+"/phylanx/make_list$2/2$12$42","make_list(12, 42)",1,37123,-1
+"/phylanx/make_list$3/2$13$42","make_list(13, 42)",1,28930,-1
+"/phylanx/make_list$4/2$15$39","make_list(15, 39)",1,53187,-1
+"/phylanx/make_list$5/2$16$39","make_list(16, 39)",1,45923,-1
+"/phylanx/make_list$6/2$17$39","make_list(17, 39)",1,28256,-1
+"/phylanx/make_list$7/2$18$39","make_list(18, 39)",1,28147,-1
+"/phylanx/make_list$8/2$21$30","make_list(21, 30)",1,40554,-1
+"/phylanx/make_list$9/2$22$30","make_list(22, 30)",1,40844,-1
+"/phylanx/random$0/2$21$23","random(21, 23)",1,247513,-1
+"/phylanx/random$1/2$22$23","random(22, 23)",1,253827,-1
+"/phylanx/set_seed$0/2$20$13","set_seed(20, 13)",1,264590,-1
+"/phylanx/shape$0/2$8$31","shape(8, 31)",1,86123,-1
+"/phylanx/shape$1/2$9$31","shape(9, 31)",1,26512,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,226086866,-1
+"/phylanx/slice_column$0/2$61$43","slice_column(61, 43)",300,7431644,1
+"/phylanx/slice_row$0/2$49$43","slice_row(49, 43)",30,940624,1
+"/phylanx/store$0/2$44$21","store(44, 21)",3,740392,1
+"/phylanx/store$1/2$45$21","store(45, 21)",3,479016,1
+"/phylanx/store$10/2$61$29","store(61, 29)",300,16400024,1
+"/phylanx/store$11/2$62$29","store(62, 29)",300,9679401,1
+"/phylanx/store$12/2$63$29","store(63, 29)",300,10241190,1
+"/phylanx/store$13/2$64$29","store(64, 29)",300,26002798,1
+"/phylanx/store$14/2$65$29","store(65, 29)",300,25717384,1
+"/phylanx/store$15/2$66$29","store(66, 29)",300,33452635,1
+"/phylanx/store$16/2$67$29","store(67, 29)",300,11597576,1
+"/phylanx/store$17/2$70$21","store(70, 21)",3,115734,1
+"/phylanx/store$18/2$71$21","store(71, 21)",3,60515520,0
+"/phylanx/store$2/2$49$29","store(49, 29)",30,2065545,1
+"/phylanx/store$3/2$50$29","store(50, 29)",30,1669901,1
+"/phylanx/store$4/2$51$29","store(51, 29)",30,1488132,1
+"/phylanx/store$5/2$52$29","store(52, 29)",30,4553804,1
+"/phylanx/store$6/2$53$29","store(53, 29)",30,5614468,1
+"/phylanx/store$7/2$54$29","store(54, 29)",30,4722962,1
+"/phylanx/store$8/2$55$29","store(55, 29)",30,2962968,1
+"/phylanx/store$9/2$58$21","store(58, 21)",3,101232,1
+"/phylanx/transpose$0/2$44$36","transpose(44, 36)",3,91906,1
+"/phylanx/transpose$1/2$45$36","transpose(45, 36)",3,54959,1
+"/phylanx/transpose$2/2$52$46","transpose(52, 46)",30,499270,1
+"/phylanx/transpose$3/2$53$46","transpose(53, 46)",30,428887,1
+"/phylanx/transpose$4/2$53$73","transpose(53, 73)",30,340126,1
+"/phylanx/transpose$5/2$64$46","transpose(64, 46)",300,3689112,1
+"/phylanx/transpose$6/2$65$46","transpose(65, 46)",300,2840330,1
+"/phylanx/transpose$7/2$65$73","transpose(65, 73)",300,2335911,1
+"/phylanx/variable$0$num_users/2$8$20","variable/num_users(8, 20)",39,18436,1
+"/phylanx/variable$1$num_items/2$9$20","variable/num_items(9, 20)",309,86931,1
+"/phylanx/variable$10$Y/2$22$20","variable/Y(22, 20)",97,66477,1
+"/phylanx/variable$11$I_f/2$23$20","variable/I_f(23, 20)",6,4984,1
+"/phylanx/variable$12$I_i/2$24$20","variable/I_i(24, 20)",30,12590,1
+"/phylanx/variable$13$I_u/2$25$20","variable/I_u(25, 20)",300,89970,1
+"/phylanx/variable$14$k/2$26$20","variable/k(26, 20)",7,4862,1
+"/phylanx/variable$15$i/2$27$20","variable/i(27, 20)",1503,704003,1
+"/phylanx/variable$16$u/2$28$20","variable/u(28, 20)",153,92704,1
+"/phylanx/variable$17$XtX/2$30$20","variable/XtX(30, 20)",300,99091,1
+"/phylanx/variable$18$YtY/2$31$20","variable/YtY(31, 20)",30,14535,1
+"/phylanx/variable$19$A/2$32$20","variable/A(32, 20)",330,139414,1
+"/phylanx/variable$2$conf/2$10$20","variable/conf(10, 20)",330,181135,1
+"/phylanx/variable$20$b/2$33$20","variable/b(33, 20)",330,135026,1
+"/phylanx/variable$3$conf_u/2$12$20","variable/conf_u(12, 20)",60,38844,1
+"/phylanx/variable$4$conf_i/2$13$20","variable/conf_i(13, 20)",600,269343,1
+"/phylanx/variable$5$c_u/2$15$20","variable/c_u(15, 20)",60,33141,1
+"/phylanx/variable$6$c_i/2$16$20","variable/c_i(16, 20)",600,224041,1
+"/phylanx/variable$7$p_u/2$17$20","variable/p_u(17, 20)",30,22365,1
+"/phylanx/variable$8$p_i/2$18$20","variable/p_i(18, 20)",300,135068,1
+"/phylanx/variable$9$X/2$21$20","variable/X(21, 20)",907,392989,1
+"/phylanx/while$0/2$35$13","while(35, 13)",1,195009573,-1
+"/phylanx/while$1/2$47$21","while(47, 21)",3,26100671,0
+"/phylanx/while$2/2$59$21","while(59, 21)",3,166353889,0
\ No newline at end of file
diff --git a/static/weekly-data/2019-01-17-als-tree.txt b/static/weekly-data/2019-01-17-als-tree.txt
new file mode 100644
index 0000000..13d5d1b
--- /dev/null
+++ b/static/weekly-data/2019-01-17-als-tree.txt
@@ -0,0 +1 @@
+(((((((/phylanx/access-argument$5$ratings/2$8$37) /phylanx/shape$0/2$8$31) /phylanx/variable$0$num_users/2$8$20) /phylanx/define-variable$1$num_users/2$8$20,(((/phylanx/access-argument$6$ratings/2$9$37) /phylanx/shape$1/2$9$31) /phylanx/variable$1$num_items/2$9$20) /phylanx/define-variable$2$num_items/2$9$20,(((/phylanx/access-argument$7$alpha/2$10$26,/phylanx/access-argument$8$ratings/2$10$34) /phylanx/__mul$0/2$10$26) /phylanx/variable$2$conf/2$10$20) /phylanx/define-variable$3$conf/2$10$20,((((/phylanx/access-variable$0$num_items/2$12$52) /phylanx/make_list$2/2$12$42) /phylanx/constant$0/2$12$28) /phylanx/variable$3$conf_u/2$12$20) /phylanx/define-variable$4$conf_u/2$12$20,((((/phylanx/access-variable$1$num_users/2$13$52) /phylanx/make_list$3/2$13$42) /phylanx/constant$1/2$13$28) /phylanx/variable$4$conf_i/2$13$20) /phylanx/define-variable$5$conf_i/2$13$20,((((/phylanx/access-variable$2$num_items/2$15$49,/phylanx/access-variable$3$num_items/2$15$60) /phylanx/make_list$4/2$15$39) /phylanx/constant$2/2$15$25) /phylanx/variable$5$c_u/2$15$20) /phylanx/define-variable$6$c_u/2$15$20,((((/phylanx/access-variable$4$num_users/2$16$49,/phylanx/access-variable$5$num_users/2$16$60) /phylanx/make_list$5/2$16$39) /phylanx/constant$3/2$16$25) /phylanx/variable$6$c_i/2$16$20) /phylanx/define-variable$7$c_i/2$16$20,((((/phylanx/access-variable$6$num_items/2$17$49) /phylanx/make_list$6/2$17$39) /phylanx/constant$4/2$17$25) /phylanx/variable$7$p_u/2$17$20) /phylanx/define-variable$8$p_u/2$17$20,((((/phylanx/access-variable$7$num_users/2$18$49) /phylanx/make_list$7/2$18$39) /phylanx/constant$5/2$18$25) /phylanx/variable$8$p_i/2$18$20) /phylanx/define-variable$9$p_i/2$18$20,/phylanx/set_seed$0/2$20$13,((((/phylanx/access-variable$8$num_users/2$21$40,/phylanx/access-argument$9$num_factors/2$21$51) /phylanx/make_list$8/2$21$30) /phylanx/random$0/2$21$23) /phylanx/variable$9$X/2$21$20) /phylanx/define-variable$10$X/2$21$20,((((/phylanx/access-variable$9$num_items/2$22$40,/phylanx/access-argument$10$num_factors/2$22$51) /phylanx/make_list$9/2$22$30) /phylanx/random$1/2$22$23) /phylanx/variable$10$Y/2$22$20) /phylanx/define-variable$11$Y/2$22$20,(((/phylanx/access-argument$11$num_factors/2$23$34) /phylanx/identity$0/2$23$25) /phylanx/variable$11$I_f/2$23$20) /phylanx/define-variable$12$I_f/2$23$20,(((/phylanx/access-variable$10$num_items/2$24$34) /phylanx/identity$1/2$24$25) /phylanx/variable$12$I_i/2$24$20) /phylanx/define-variable$13$I_i/2$24$20,(((/phylanx/access-variable$11$num_users/2$25$34) /phylanx/identity$2/2$25$25) /phylanx/variable$13$I_u/2$25$20) /phylanx/define-variable$14$I_u/2$25$20,(/phylanx/variable$14$k/2$26$20) /phylanx/define-variable$15$k/2$26$20,(/phylanx/variable$15$i/2$27$20) /phylanx/define-variable$16$i/2$27$20,(/phylanx/variable$16$u/2$28$20) /phylanx/define-variable$17$u/2$28$20,((((/phylanx/access-argument$12$num_factors/2$30$49,/phylanx/access-argument$13$num_factors/2$30$62) /phylanx/make_list$10/2$30$39) /phylanx/constant$6/2$30$25) /phylanx/variable$17$XtX/2$30$20) /phylanx/define-variable$18$XtX/2$30$20,((((/phylanx/access-argument$14$num_factors/2$31$49,/phylanx/access-argument$15$num_factors/2$31$62) /phylanx/make_list$11/2$31$39) /phylanx/constant$7/2$31$25) /phylanx/variable$18$YtY/2$31$20) /phylanx/define-variable$19$YtY/2$31$20,((((/phylanx/access-argument$16$num_factors/2$32$47,/phylanx/access-argument$17$num_factors/2$32$60) /phylanx/make_list$12/2$32$37) /phylanx/constant$8/2$32$23) /phylanx/variable$19$A/2$32$20) /phylanx/define-variable$20$A/2$32$20,((((/phylanx/access-argument$18$num_factors/2$33$47) /phylanx/make_list$13/2$33$37) /phylanx/constant$9/2$33$23) /phylanx/variable$20$b/2$33$20) /phylanx/define-variable$21$b/2$33$20,((/phylanx/access-variable$12$k/2$35$19,/phylanx/access-argument$19$iterations/2$35$23) /phylanx/__lt$0/2$35$19,((/phylanx/access-argument$20$enable_output/2$37$24,((/phylanx/access-variable$13$k/2$39$56,/phylanx/access-variable$14$u/2$39$59) /phylanx/cout$0/2$39$37,(/phylanx/access-variable$15$X/2$40$48) /phylanx/cout$1/2$40$37,(/phylanx/access-variable$16$Y/2$41$48) /phylanx/cout$2/2$41$37) /phylanx/block$2/2$38$29) /phylanx/if$0/2$37$21,(/phylanx/access-variable$17$YtY/2$44$27,(((/phylanx/access-variable$18$Y/2$44$46) /phylanx/transpose$0/2$44$36,/phylanx/access-variable$19$Y/2$44$50) /phylanx/dot$0/2$44$32,(/phylanx/access-argument$21$regularization/2$44$55,/phylanx/access-variable$20$I_f/2$44$72) /phylanx/__mul$1/2$44$55) /phylanx/__add$0/2$44$32) /phylanx/store$0/2$44$21,(/phylanx/access-variable$21$XtX/2$45$27,(((/phylanx/access-variable$22$X/2$45$46) /phylanx/transpose$1/2$45$36,/phylanx/access-variable$23$X/2$45$50) /phylanx/dot$1/2$45$32,(/phylanx/access-argument$22$regularization/2$45$55,/phylanx/access-variable$24$I_f/2$45$72) /phylanx/__mul$2/2$45$55) /phylanx/__add$1/2$45$32) /phylanx/store$1/2$45$21,((/phylanx/access-variable$25$u/2$47$27,/phylanx/access-variable$26$num_users/2$47$31) /phylanx/__lt$1/2$47$27,((/phylanx/access-variable$27$conf_u/2$49$35,(/phylanx/access-variable$28$conf/2$49$53,/phylanx/access-variable$29$u/2$49$59) /phylanx/slice_row$0/2$49$43) /phylanx/store$2/2$49$29,(/phylanx/access-variable$30$c_u/2$50$35,(/phylanx/access-variable$31$conf_u/2$50$45) /phylanx/diag$0/2$50$40) /phylanx/store$3/2$50$29,(/phylanx/access-variable$32$p_u/2$51$35,(/phylanx/access-variable$33$conf_u/2$51$45) /phylanx/__ne$0/2$51$40) /phylanx/store$4/2$51$29,(/phylanx/access-variable$34$A/2$52$35,((((/phylanx/access-variable$35$Y/2$52$56) /phylanx/transpose$2/2$52$46,/phylanx/access-variable$36$c_u/2$52$60) /phylanx/dot$3/2$52$42,/phylanx/access-variable$37$Y/2$52$66) /phylanx/dot$2/2$52$38,/phylanx/access-variable$38$YtY/2$52$70) /phylanx/__add$2/2$52$38) /phylanx/store$5/2$52$29,(/phylanx/access-variable$39$b/2$53$35,(((/phylanx/access-variable$40$Y/2$53$56) /phylanx/transpose$3/2$53$46,(/phylanx/access-variable$41$c_u/2$53$60,/phylanx/access-variable$42$I_i/2$53$66) /phylanx/__add$3/2$53$60) /phylanx/dot$5/2$53$42,(/phylanx/access-variable$43$p_u/2$53$83) /phylanx/transpose$4/2$53$73) /phylanx/dot$4/2$53$38) /phylanx/store$6/2$53$29,(/phylanx/access-variable$46$X/2$54$41,((/phylanx/access-variable$47$A/2$54$80) /phylanx/inverse$0/2$54$72,/phylanx/access-variable$48$b/2$54$84) /phylanx/dot$6/2$54$68) /phylanx/store$7/2$54$29,(/phylanx/access-variable$49$u/2$55$35,(/phylanx/access-variable$50$u/2$55$38) /phylanx/__add$5/2$55$38) /phylanx/store$8/2$55$29) /phylanx/block$3/2$48$25) /phylanx/while$1/2$47$21,(/phylanx/access-variable$51$u/2$58$27) /phylanx/store$9/2$58$21,((/phylanx/access-variable$52$i/2$59$27,/phylanx/access-variable$53$num_items/2$59$31) /phylanx/__lt$2/2$59$27,((/phylanx/access-variable$54$conf_i/2$61$35,(/phylanx/access-variable$55$conf/2$61$56,/phylanx/access-variable$56$i/2$61$62) /phylanx/slice_column$0/2$61$43) /phylanx/store$10/2$61$29,(/phylanx/access-variable$57$c_i/2$62$35,(/phylanx/access-variable$58$conf_i/2$62$45) /phylanx/diag$1/2$62$40) /phylanx/store$11/2$62$29,(/phylanx/access-variable$59$p_i/2$63$35,(/phylanx/access-variable$60$conf_i/2$63$45) /phylanx/__ne$1/2$63$40) /phylanx/store$12/2$63$29,(/phylanx/access-variable$61$A/2$64$35,((((/phylanx/access-variable$62$X/2$64$56) /phylanx/transpose$5/2$64$46,/phylanx/access-variable$63$c_i/2$64$59) /phylanx/dot$8/2$64$42,/phylanx/access-variable$64$X/2$64$65) /phylanx/dot$7/2$64$38,/phylanx/access-variable$65$XtX/2$64$70) /phylanx/__add$6/2$64$38) /phylanx/store$13/2$64$29,(/phylanx/access-variable$66$b/2$65$35,(((/phylanx/access-variable$67$X/2$65$56) /phylanx/transpose$6/2$65$46,(/phylanx/access-variable$68$c_i/2$65$60,/phylanx/access-variable$69$I_u/2$65$66) /phylanx/__add$7/2$65$60) /phylanx/dot$10/2$65$42,(/phylanx/access-variable$70$p_i/2$65$83) /phylanx/transpose$7/2$65$73) /phylanx/dot$9/2$65$38) /phylanx/store$14/2$65$29,(/phylanx/access-variable$73$Y/2$66$41,((/phylanx/access-variable$74$A/2$66$80) /phylanx/inverse$1/2$66$72,/phylanx/access-variable$75$b/2$66$84) /phylanx/dot$11/2$66$68) /phylanx/store$15/2$66$29,(/phylanx/access-variable$76$i/2$67$35,(/phylanx/access-variable$77$i/2$67$38) /phylanx/__add$9/2$67$38) /phylanx/store$16/2$67$29) /phylanx/block$4/2$60$25) /phylanx/while$2/2$59$21,(/phylanx/access-variable$78$i/2$70$27) /phylanx/store$17/2$70$21,(/phylanx/access-variable$79$k/2$71$27,(/phylanx/access-variable$80$k/2$71$30) /phylanx/__add$10/2$71$30) /phylanx/store$18/2$71$21) /phylanx/block$1/2$36$17) /phylanx/while$0/2$35$13,(/phylanx/access-variable$81$X/2$74$18,/phylanx/access-variable$82$Y/2$74$21) /phylanx/list$2/2$74$13) /phylanx/block$0/2$7$9) /phylanx/lambda$1/2$5$12) /phylanx/function$1$als_explicit/2$5$12) als;
diff --git a/static/weekly-data/2019-01-24-als-perfdata.csv b/static/weekly-data/2019-01-24-als-perfdata.csv
new file mode 100644
index 0000000..40e2a5d
--- /dev/null
+++ b/static/weekly-data/2019-01-24-als-perfdata.csv
@@ -0,0 +1,270 @@
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$44$32","add(44, 32)",3,727581,1
+"/phylanx/__add$1/2$45$32","add(45, 32)",3,448387,1
+"/phylanx/__add$10/2$71$30","add(71, 30)",3,60858,1
+"/phylanx/__add$2/2$52$38","add(52, 38)",30,3944397,1
+"/phylanx/__add$3/2$53$60","add(53, 60)",30,1604254,1
+"/phylanx/__add$4/2$54$52","add(54, 52)",30,500742,1
+"/phylanx/__add$5/2$55$38","add(55, 38)",30,521452,1
+"/phylanx/__add$6/2$64$38","add(64, 38)",300,23523821,1
+"/phylanx/__add$7/2$65$60","add(65, 60)",300,6266609,1
+"/phylanx/__add$8/2$66$52","add(66, 52)",300,3861693,1
+"/phylanx/__add$9/2$67$38","add(67, 38)",300,4066145,1
+"/phylanx/__lt$0/2$35$19","lt(35, 19)",4,219186,1
+"/phylanx/__lt$1/2$47$27","lt(47, 27)",33,885231,1
+"/phylanx/__lt$2/2$59$27","lt(59, 27)",303,6380126,1
+"/phylanx/__mul$0/2$10$26","mul(10, 26)",1,204642,-1
+"/phylanx/__mul$1/2$44$55","mul(44, 55)",3,114830,1
+"/phylanx/__mul$2/2$45$55","mul(45, 55)",3,111419,1
+"/phylanx/__ne$0/2$51$40","ne(51, 40)",30,669486,1
+"/phylanx/__ne$1/2$63$40","ne(63, 40)",300,4572835,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,741,1
+"/phylanx/access-argument$1$row_start/0$6$50","access-argument/row_start(6, 50)",1,3952,1
+"/phylanx/access-argument$10$num_factors/2$22$51","access-argument/num_factors(22, 51)",1,1185,1
+"/phylanx/access-argument$11$num_factors/2$23$34","access-argument/num_factors(23, 34)",1,5395,1
+"/phylanx/access-argument$12$num_factors/2$30$49","access-argument/num_factors(30, 49)",1,1318,1
+"/phylanx/access-argument$13$num_factors/2$30$62","access-argument/num_factors(30, 62)",1,435,1
+"/phylanx/access-argument$14$num_factors/2$31$49","access-argument/num_factors(31, 49)",1,1482,1
+"/phylanx/access-argument$15$num_factors/2$31$62","access-argument/num_factors(31, 62)",1,583,1
+"/phylanx/access-argument$16$num_factors/2$32$47","access-argument/num_factors(32, 47)",1,1385,1
+"/phylanx/access-argument$17$num_factors/2$32$60","access-argument/num_factors(32, 60)",1,542,1
+"/phylanx/access-argument$18$num_factors/2$33$47","access-argument/num_factors(33, 47)",1,1550,1
+"/phylanx/access-argument$19$iterations/2$35$23","access-argument/iterations(35, 23)",4,2748,1
+"/phylanx/access-argument$2$row_stop/0$6$62","access-argument/row_stop(6, 62)",1,521,1
+"/phylanx/access-argument$20$enable_output/2$37$24","access-argument/enable_output(37, 24)",3,2708,1
+"/phylanx/access-argument$21$regularization/2$44$55","access-argument/regularization(44, 55)",3,2889,1
+"/phylanx/access-argument$22$regularization/2$45$55","access-argument/regularization(45, 55)",3,3142,1
+"/phylanx/access-argument$3$col_start/0$7$25","access-argument/col_start(7, 25)",1,644,1
+"/phylanx/access-argument$4$col_stop/0$7$37","access-argument/col_stop(7, 37)",1,281,1
+"/phylanx/access-argument$5$ratings/2$8$37","access-argument/ratings(8, 37)",1,1871,1
+"/phylanx/access-argument$6$ratings/2$9$37","access-argument/ratings(9, 37)",1,794,1
+"/phylanx/access-argument$7$alpha/2$10$26","access-argument/alpha(10, 26)",1,767,1
+"/phylanx/access-argument$8$ratings/2$10$34","access-argument/ratings(10, 34)",1,555,1
+"/phylanx/access-argument$9$num_factors/2$21$51","access-argument/num_factors(21, 51)",1,1065,1
+"/phylanx/access-function$0$read_x/1$9$5","access-function/read_x(9, 5)",1,823,1
+"/phylanx/access-function$1$als_explicit/3$77$5","access-function/als_explicit(77, 5)",1,195,1
+"/phylanx/access-variable$0$num_items/2$12$52","access-variable/num_items(12, 52)",1,5770,1
+"/phylanx/access-variable$1$num_users/2$13$52","access-variable/num_users(13, 52)",1,6327,1
+"/phylanx/access-variable$10$num_items/2$24$34","access-variable/num_items(24, 34)",1,9732,1
+"/phylanx/access-variable$11$num_users/2$25$34","access-variable/num_users(25, 34)",1,9047,1
+"/phylanx/access-variable$12$k/2$35$19","access-variable/k(35, 19)",4,14522,1
+"/phylanx/access-variable$13$k/2$39$56","access-variable/k(39, 56)",0,0,1
+"/phylanx/access-variable$14$u/2$39$59","access-variable/u(39, 59)",0,0,1
+"/phylanx/access-variable$15$X/2$40$48","access-variable/X(40, 48)",0,0,1
+"/phylanx/access-variable$16$Y/2$41$48","access-variable/Y(41, 48)",0,0,1
+"/phylanx/access-variable$17$YtY/2$44$27","access-variable/YtY(44, 27)",0,0,1
+"/phylanx/access-variable$18$Y/2$44$46","access-variable/Y(44, 46)",3,9689,1
+"/phylanx/access-variable$19$Y/2$44$50","access-variable/Y(44, 50)",3,6914,1
+"/phylanx/access-variable$2$num_items/2$15$49","access-variable/num_items(15, 49)",1,6267,1
+"/phylanx/access-variable$20$I_f/2$44$72","access-variable/I_f(44, 72)",3,7447,1
+"/phylanx/access-variable$21$XtX/2$45$27","access-variable/XtX(45, 27)",0,0,1
+"/phylanx/access-variable$22$X/2$45$46","access-variable/X(45, 46)",3,8937,1
+"/phylanx/access-variable$23$X/2$45$50","access-variable/X(45, 50)",3,6466,1
+"/phylanx/access-variable$24$I_f/2$45$72","access-variable/I_f(45, 72)",3,6729,1
+"/phylanx/access-variable$25$u/2$47$27","access-variable/u(47, 27)",33,64013,1
+"/phylanx/access-variable$26$num_users/2$47$31","access-variable/num_users(47, 31)",33,44351,1
+"/phylanx/access-variable$27$conf_u/2$49$35","access-variable/conf_u(49, 35)",0,0,1
+"/phylanx/access-variable$28$conf/2$49$53","access-variable/conf(49, 53)",30,50189,1
+"/phylanx/access-variable$29$u/2$49$59","access-variable/u(49, 59)",30,49713,1
+"/phylanx/access-variable$3$num_items/2$15$60","access-variable/num_items(15, 60)",1,2190,1
+"/phylanx/access-variable$30$c_u/2$50$35","access-variable/c_u(50, 35)",0,0,1
+"/phylanx/access-variable$31$conf_u/2$50$45","access-variable/conf_u(50, 45)",30,54022,1
+"/phylanx/access-variable$32$p_u/2$51$35","access-variable/p_u(51, 35)",0,0,1
+"/phylanx/access-variable$33$conf_u/2$51$45","access-variable/conf_u(51, 45)",30,74525,1
+"/phylanx/access-variable$34$A/2$52$35","access-variable/A(52, 35)",0,0,1
+"/phylanx/access-variable$35$Y/2$52$56","access-variable/Y(52, 56)",30,56556,1
+"/phylanx/access-variable$36$c_u/2$52$60","access-variable/c_u(52, 60)",30,44372,1
+"/phylanx/access-variable$37$Y/2$52$66","access-variable/Y(52, 66)",30,46348,1
+"/phylanx/access-variable$38$YtY/2$52$70","access-variable/YtY(52, 70)",30,41715,1
+"/phylanx/access-variable$39$b/2$53$35","access-variable/b(53, 35)",0,0,1
+"/phylanx/access-variable$4$num_users/2$16$49","access-variable/num_users(16, 49)",1,5518,1
+"/phylanx/access-variable$40$Y/2$53$56","access-variable/Y(53, 56)",30,58085,1
+"/phylanx/access-variable$41$c_u/2$53$60","access-variable/c_u(53, 60)",30,43763,1
+"/phylanx/access-variable$42$I_i/2$53$66","access-variable/I_i(53, 66)",30,37838,1
+"/phylanx/access-variable$43$p_u/2$53$83","access-variable/p_u(53, 83)",30,58343,1
+"/phylanx/access-variable$44$u/2$54$49","access-variable/u(54, 49)",30,64991,1
+"/phylanx/access-variable$45$u/2$54$52","access-variable/u(54, 52)",30,40232,1
+"/phylanx/access-variable$46$X/2$54$41","access-variable/X(54, 41)",0,0,1
+"/phylanx/access-variable$47$A/2$54$80","access-variable/A(54, 80)",30,61023,1
+"/phylanx/access-variable$48$b/2$54$84","access-variable/b(54, 84)",30,56500,1
+"/phylanx/access-variable$49$u/2$55$35","access-variable/u(55, 35)",0,0,1
+"/phylanx/access-variable$5$num_users/2$16$60","access-variable/num_users(16, 60)",1,2650,1
+"/phylanx/access-variable$50$u/2$55$38","access-variable/u(55, 38)",30,45801,1
+"/phylanx/access-variable$51$u/2$58$27","access-variable/u(58, 27)",0,0,1
+"/phylanx/access-variable$52$i/2$59$27","access-variable/i(59, 27)",303,407694,1
+"/phylanx/access-variable$53$num_items/2$59$31","access-variable/num_items(59, 31)",303,326527,1
+"/phylanx/access-variable$54$conf_i/2$61$35","access-variable/conf_i(61, 35)",0,0,1
+"/phylanx/access-variable$55$conf/2$61$56","access-variable/conf(61, 56)",300,401075,1
+"/phylanx/access-variable$56$i/2$61$62","access-variable/i(61, 62)",300,416124,1
+"/phylanx/access-variable$57$c_i/2$62$35","access-variable/c_i(62, 35)",0,0,1
+"/phylanx/access-variable$58$conf_i/2$62$45","access-variable/conf_i(62, 45)",300,401749,1
+"/phylanx/access-variable$59$p_i/2$63$35","access-variable/p_i(63, 35)",0,0,1
+"/phylanx/access-variable$6$num_items/2$17$49","access-variable/num_items(17, 49)",1,4676,1
+"/phylanx/access-variable$60$conf_i/2$63$45","access-variable/conf_i(63, 45)",300,521818,1
+"/phylanx/access-variable$61$A/2$64$35","access-variable/A(64, 35)",0,0,1
+"/phylanx/access-variable$62$X/2$64$56","access-variable/X(64, 56)",300,413894,1
+"/phylanx/access-variable$63$c_i/2$64$59","access-variable/c_i(64, 59)",300,334176,1
+"/phylanx/access-variable$64$X/2$64$65","access-variable/X(64, 65)",300,315977,1
+"/phylanx/access-variable$65$XtX/2$64$70","access-variable/XtX(64, 70)",300,323261,1
+"/phylanx/access-variable$66$b/2$65$35","access-variable/b(65, 35)",0,0,1
+"/phylanx/access-variable$67$X/2$65$56","access-variable/X(65, 56)",300,382815,1
+"/phylanx/access-variable$68$c_i/2$65$60","access-variable/c_i(65, 60)",300,325731,1
+"/phylanx/access-variable$69$I_u/2$65$66","access-variable/I_u(65, 66)",300,304526,1
+"/phylanx/access-variable$7$num_users/2$18$49","access-variable/num_users(18, 49)",1,6188,1
+"/phylanx/access-variable$70$p_i/2$65$83","access-variable/p_i(65, 83)",300,363853,1
+"/phylanx/access-variable$71$i/2$66$49","access-variable/i(66, 49)",300,542415,1
+"/phylanx/access-variable$72$i/2$66$52","access-variable/i(66, 52)",300,309978,1
+"/phylanx/access-variable$73$Y/2$66$41","access-variable/Y(66, 41)",0,0,1
+"/phylanx/access-variable$74$A/2$66$80","access-variable/A(66, 80)",300,371699,1
+"/phylanx/access-variable$75$b/2$66$84","access-variable/b(66, 84)",300,384003,1
+"/phylanx/access-variable$76$i/2$67$35","access-variable/i(67, 35)",0,0,1
+"/phylanx/access-variable$77$i/2$67$38","access-variable/i(67, 38)",300,348239,1
+"/phylanx/access-variable$78$i/2$70$27","access-variable/i(70, 27)",0,0,1
+"/phylanx/access-variable$79$k/2$71$27","access-variable/k(71, 27)",0,0,1
+"/phylanx/access-variable$8$num_users/2$21$40","access-variable/num_users(21, 40)",1,5625,1
+"/phylanx/access-variable$80$k/2$71$30","access-variable/k(71, 30)",3,5294,1
+"/phylanx/access-variable$81$X/2$74$18","access-variable/X(74, 18)",1,2395,1
+"/phylanx/access-variable$82$Y/2$74$21","access-variable/Y(74, 21)",1,1461,1
+"/phylanx/access-variable$9$num_items/2$22$40","access-variable/num_items(22, 40)",1,4443,1
+"/phylanx/block$0/2$7$9","block(7, 9)",1,239767265,-1
+"/phylanx/block$1/2$36$17","block(36, 17)",3,304261408,0
+"/phylanx/block$2/2$38$29","block(38, 29)",0,0,-1
+"/phylanx/block$3/2$48$25","block(48, 25)",30,29459478,0
+"/phylanx/block$4/2$60$25","block(60, 25)",300,183305792,0
+"/phylanx/constant$0/2$12$28","constant(12, 28)",1,207961,-1
+"/phylanx/constant$1/2$13$28","constant(13, 28)",1,97565,-1
+"/phylanx/constant$2/2$15$25","constant(15, 25)",1,160120,-1
+"/phylanx/constant$3/2$16$25","constant(16, 25)",1,115559,-1
+"/phylanx/constant$4/2$17$25","constant(17, 25)",1,116985,-1
+"/phylanx/constant$5/2$18$25","constant(18, 25)",1,89722,-1
+"/phylanx/constant$6/2$30$25","constant(30, 25)",1,123767,-1
+"/phylanx/constant$7/2$31$25","constant(31, 25)",1,99032,-1
+"/phylanx/constant$8/2$32$23","constant(32, 23)",1,122057,-1
+"/phylanx/constant$9/2$33$23","constant(33, 23)",1,84876,-1
+"/phylanx/cout$0/2$39$37","cout(39, 37)",0,0,-1
+"/phylanx/cout$1/2$40$37","cout(40, 37)",0,0,-1
+"/phylanx/cout$2/2$41$37","cout(41, 37)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,8931,-1
+"/phylanx/define-variable$1$num_users/2$8$20","define-variable/num_users(8, 20)",1,187896,-1
+"/phylanx/define-variable$10$X/2$21$20","define-variable/X(21, 20)",1,320293,-1
+"/phylanx/define-variable$11$Y/2$22$20","define-variable/Y(22, 20)",1,305998,-1
+"/phylanx/define-variable$12$I_f/2$23$20","define-variable/I_f(23, 20)",1,117117,-1
+"/phylanx/define-variable$13$I_i/2$24$20","define-variable/I_i(24, 20)",1,140388,-1
+"/phylanx/define-variable$14$I_u/2$25$20","define-variable/I_u(25, 20)",1,92942,-1
+"/phylanx/define-variable$15$k/2$26$20","define-variable/k(26, 20)",1,14331,-1
+"/phylanx/define-variable$16$i/2$27$20","define-variable/i(27, 20)",1,9585,-1
+"/phylanx/define-variable$17$u/2$28$20","define-variable/u(28, 20)",1,9082,-1
+"/phylanx/define-variable$18$XtX/2$30$20","define-variable/XtX(30, 20)",1,172698,-1
+"/phylanx/define-variable$19$YtY/2$31$20","define-variable/YtY(31, 20)",1,138332,-1
+"/phylanx/define-variable$2$num_items/2$9$20","define-variable/num_items(9, 20)",1,66312,-1
+"/phylanx/define-variable$20$A/2$32$20","define-variable/A(32, 20)",1,176178,-1
+"/phylanx/define-variable$21$b/2$33$20","define-variable/b(33, 20)",1,129057,-1
+"/phylanx/define-variable$22$als_explicit/2$5$12","define-variable/als_explicit(5, 12)",1,547,-1
+"/phylanx/define-variable$3$conf/2$10$20","define-variable/conf(10, 20)",1,265348,-1
+"/phylanx/define-variable$4$conf_u/2$12$20","define-variable/conf_u(12, 20)",1,262817,-1
+"/phylanx/define-variable$5$conf_i/2$13$20","define-variable/conf_i(13, 20)",1,139859,-1
+"/phylanx/define-variable$6$c_u/2$15$20","define-variable/c_u(15, 20)",1,209468,-1
+"/phylanx/define-variable$7$c_i/2$16$20","define-variable/c_i(16, 20)",1,195698,-1
+"/phylanx/define-variable$8$p_u/2$17$20","define-variable/p_u(17, 20)",1,172666,-1
+"/phylanx/define-variable$9$p_i/2$18$20","define-variable/p_i(18, 20)",1,131750,-1
+"/phylanx/diag$0/2$50$40","diag(50, 40)",30,755732,1
+"/phylanx/diag$1/2$62$40","diag(62, 40)",300,3868165,1
+"/phylanx/dot$0/2$44$32","dot(44, 32)",3,562806,1
+"/phylanx/dot$1/2$45$32","dot(45, 32)",3,306319,1
+"/phylanx/dot$10/2$65$42","dot(65, 42)",300,15842135,1
+"/phylanx/dot$11/2$66$68","dot(66, 68)",300,12348008,1
+"/phylanx/dot$2/2$52$38","dot(52, 38)",30,3105657,1
+"/phylanx/dot$3/2$52$42","dot(52, 42)",30,2158759,1
+"/phylanx/dot$4/2$53$38","dot(53, 38)",30,5038783,1
+"/phylanx/dot$5/2$53$42","dot(53, 42)",30,3789182,1
+"/phylanx/dot$6/2$54$68","dot(54, 68)",30,2096077,1
+"/phylanx/dot$7/2$64$38","dot(64, 38)",300,17031472,1
+"/phylanx/dot$8/2$64$42","dot(64, 42)",300,10504435,1
+"/phylanx/dot$9/2$65$38","dot(65, 38)",300,24117860,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,270722194,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,270908851,1
+"/phylanx/function$1$als_explicit/2$5$12","function/als_explicit(5, 12)",1,239873487,1
+"/phylanx/identity$0/2$23$25","identity(23, 25)",1,57576,-1
+"/phylanx/identity$1/2$24$25","identity(24, 25)",1,80619,-1
+"/phylanx/identity$2/2$25$25","identity(25, 25)",1,36785,-1
+"/phylanx/if$0/2$37$21","if(37, 21)",3,95067,1
+"/phylanx/inverse$0/2$54$72","inverse(54, 72)",30,962469,1
+"/phylanx/inverse$1/2$66$72","inverse(66, 72)",300,5727329,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,270877307,-1
+"/phylanx/lambda$1/2$5$12","lambda(5, 12)",1,239828899,-1
+"/phylanx/list$0/2$54$44","list(54, 44)",30,1427058,1
+"/phylanx/list$1/2$66$44","list(66, 44)",300,11540806,1
+"/phylanx/list$2/2$74$13","list(74, 13)",1,30977,-1
+"/phylanx/make_list$0/0$6$40","make_list(6, 40)",1,66830,-1
+"/phylanx/make_list$1/0$7$15","make_list(7, 15)",1,23381,-1
+"/phylanx/make_list$10/2$30$39","make_list(30, 39)",1,43976,-1
+"/phylanx/make_list$11/2$31$39","make_list(31, 39)",1,51821,-1
+"/phylanx/make_list$12/2$32$37","make_list(32, 37)",1,47763,-1
+"/phylanx/make_list$13/2$33$37","make_list(33, 37)",1,38206,-1
+"/phylanx/make_list$2/2$12$42","make_list(12, 42)",1,49858,-1
+"/phylanx/make_list$3/2$13$42","make_list(13, 42)",1,44913,-1
+"/phylanx/make_list$4/2$15$39","make_list(15, 39)",1,52369,-1
+"/phylanx/make_list$5/2$16$39","make_list(16, 39)",1,59138,-1
+"/phylanx/make_list$6/2$17$39","make_list(17, 39)",1,34545,-1
+"/phylanx/make_list$7/2$18$39","make_list(18, 39)",1,42878,-1
+"/phylanx/make_list$8/2$21$30","make_list(21, 30)",1,58871,-1
+"/phylanx/make_list$9/2$22$30","make_list(22, 30)",1,49516,-1
+"/phylanx/random$0/2$21$23","random(21, 23)",1,247777,-1
+"/phylanx/random$1/2$22$23","random(22, 23)",1,254808,-1
+"/phylanx/set_seed$0/2$20$13","set_seed(20, 13)",1,280457,-1
+"/phylanx/shape$0/2$8$31","shape(8, 31)",1,77203,-1
+"/phylanx/shape$1/2$9$31","shape(9, 31)",1,23468,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,270794595,-1
+"/phylanx/slice_column$0/2$61$43","slice_column(61, 43)",300,8400768,1
+"/phylanx/slice_row$0/2$49$43","slice_row(49, 43)",30,1011757,1
+"/phylanx/store$0/2$44$21","store(44, 21)",3,848069,-1
+"/phylanx/store$1/2$45$21","store(45, 21)",3,571692,1
+"/phylanx/store$10/2$61$29","store(61, 29)",300,18831155,1
+"/phylanx/store$11/2$62$29","store(62, 29)",300,12478478,1
+"/phylanx/store$12/2$63$29","store(63, 29)",300,13234310,1
+"/phylanx/store$13/2$64$29","store(64, 29)",300,32236732,1
+"/phylanx/store$14/2$65$29","store(65, 29)",300,32797544,1
+"/phylanx/store$15/2$66$29","store(66, 29)",300,38721852,1
+"/phylanx/store$16/2$67$29","store(67, 29)",300,14035857,1
+"/phylanx/store$17/2$70$21","store(70, 21)",3,147204,1
+"/phylanx/store$18/2$71$21","store(71, 21)",3,69959792,0
+"/phylanx/store$2/2$49$29","store(49, 29)",30,2261126,1
+"/phylanx/store$3/2$50$29","store(50, 29)",30,2066806,1
+"/phylanx/store$4/2$51$29","store(51, 29)",30,1761697,1
+"/phylanx/store$5/2$52$29","store(52, 29)",30,5049775,1
+"/phylanx/store$6/2$53$29","store(53, 29)",30,6196206,1
+"/phylanx/store$7/2$54$29","store(54, 29)",30,5202437,1
+"/phylanx/store$8/2$55$29","store(55, 29)",30,3556247,1
+"/phylanx/store$9/2$58$21","store(58, 21)",3,104575,1
+"/phylanx/transpose$0/2$44$36","transpose(44, 36)",3,117770,1
+"/phylanx/transpose$1/2$45$36","transpose(45, 36)",3,73129,1
+"/phylanx/transpose$2/2$52$46","transpose(52, 46)",30,553192,1
+"/phylanx/transpose$3/2$53$46","transpose(53, 46)",30,514911,1
+"/phylanx/transpose$4/2$53$73","transpose(53, 73)",30,405936,1
+"/phylanx/transpose$5/2$64$46","transpose(64, 46)",300,4417574,1
+"/phylanx/transpose$6/2$65$46","transpose(65, 46)",300,3643906,1
+"/phylanx/transpose$7/2$65$73","transpose(65, 73)",300,2918284,1
+"/phylanx/variable$0$num_users/2$8$20","variable/num_users(8, 20)",39,27748,1
+"/phylanx/variable$1$num_items/2$9$20","variable/num_items(9, 20)",309,137120,1
+"/phylanx/variable$10$Y/2$22$20","variable/Y(22, 20)",97,86821,1
+"/phylanx/variable$11$I_f/2$23$20","variable/I_f(23, 20)",6,5844,1
+"/phylanx/variable$12$I_i/2$24$20","variable/I_i(24, 20)",30,17868,1
+"/phylanx/variable$13$I_u/2$25$20","variable/I_u(25, 20)",300,143571,1
+"/phylanx/variable$14$k/2$26$20","variable/k(26, 20)",7,6418,1
+"/phylanx/variable$15$i/2$27$20","variable/i(27, 20)",1503,941785,1
+"/phylanx/variable$16$u/2$28$20","variable/u(28, 20)",153,115620,1
+"/phylanx/variable$17$XtX/2$30$20","variable/XtX(30, 20)",300,153233,1
+"/phylanx/variable$18$YtY/2$31$20","variable/YtY(31, 20)",30,19979,1
+"/phylanx/variable$19$A/2$32$20","variable/A(32, 20)",330,210217,1
+"/phylanx/variable$2$conf/2$10$20","variable/conf(10, 20)",330,235341,1
+"/phylanx/variable$20$b/2$33$20","variable/b(33, 20)",330,225291,1
+"/phylanx/variable$3$conf_u/2$12$20","variable/conf_u(12, 20)",60,51928,1
+"/phylanx/variable$4$conf_i/2$13$20","variable/conf_i(13, 20)",600,391880,1
+"/phylanx/variable$5$c_u/2$15$20","variable/c_u(15, 20)",60,44096,1
+"/phylanx/variable$6$c_i/2$16$20","variable/c_i(16, 20)",600,326704,1
+"/phylanx/variable$7$p_u/2$17$20","variable/p_u(17, 20)",30,31446,1
+"/phylanx/variable$8$p_i/2$18$20","variable/p_i(18, 20)",300,197884,1
+"/phylanx/variable$9$X/2$21$20","variable/X(21, 20)",907,568336,1
+"/phylanx/while$0/2$35$13","while(35, 13)",1,234950895,-1
+"/phylanx/while$1/2$47$21","while(47, 21)",3,29671984,0
+"/phylanx/while$2/2$59$21","while(59, 21)",3,202386232,0
\ No newline at end of file
diff --git a/static/weekly-data/2019-01-24-als-tree.txt b/static/weekly-data/2019-01-24-als-tree.txt
new file mode 100644
index 0000000..fa3fbd7
--- /dev/null
+++ b/static/weekly-data/2019-01-24-als-tree.txt
@@ -0,0 +1 @@
+(((((((/phylanx/access-argument$5$ratings/2$8$37) /phylanx/shape$0/2$8$31) /phylanx/variable$0$num_users/2$8$20) /phylanx/define-variable$1$num_users/2$8$20,(((/phylanx/access-argument$6$ratings/2$9$37) /phylanx/shape$1/2$9$31) /phylanx/variable$1$num_items/2$9$20) /phylanx/define-variable$2$num_items/2$9$20,(((/phylanx/access-argument$7$alpha/2$10$26,/phylanx/access-argument$8$ratings/2$10$34) /phylanx/__mul$0/2$10$26) /phylanx/variable$2$conf/2$10$20) /phylanx/define-variable$3$conf/2$10$20,((((/phylanx/access-variable$0$num_items/2$12$52) /phylanx/make_list$2/2$12$42) /phylanx/constant$0/2$12$28) /phylanx/variable$3$conf_u/2$12$20) /phylanx/define-variable$4$conf_u/2$12$20,((((/phylanx/access-variable$1$num_users/2$13$52) /phylanx/make_list$3/2$13$42) /phylanx/constant$1/2$13$28) /phylanx/variable$4$conf_i/2$13$20) /phylanx/define-variable$5$conf_i/2$13$20,((((/phylanx/access-variable$2$num_items/2$15$49,/phylanx/access-variable$3$num_items/2$15$60) /phylanx/make_list$4/2$15$39) /phylanx/constant$2/2$15$25) /phylanx/variable$5$c_u/2$15$20) /phylanx/define-variable$6$c_u/2$15$20,((((/phylanx/access-variable$4$num_users/2$16$49,/phylanx/access-variable$5$num_users/2$16$60) /phylanx/make_list$5/2$16$39) /phylanx/constant$3/2$16$25) /phylanx/variable$6$c_i/2$16$20) /phylanx/define-variable$7$c_i/2$16$20,((((/phylanx/access-variable$6$num_items/2$17$49) /phylanx/make_list$6/2$17$39) /phylanx/constant$4/2$17$25) /phylanx/variable$7$p_u/2$17$20) /phylanx/define-variable$8$p_u/2$17$20,((((/phylanx/access-variable$7$num_users/2$18$49) /phylanx/make_list$7/2$18$39) /phylanx/constant$5/2$18$25) /phylanx/variable$8$p_i/2$18$20) /phylanx/define-variable$9$p_i/2$18$20,/phylanx/set_seed$0/2$20$13,((((/phylanx/access-variable$8$num_users/2$21$40,/phylanx/access-argument$9$num_factors/2$21$51) /phylanx/make_list$8/2$21$30) /phylanx/random$0/2$21$23) /phylanx/variable$9$X/2$21$20) /phylanx/define-variable$10$X/2$21$20,((((/phylanx/access-variable$9$num_items/2$22$40,/phylanx/access-argument$10$num_factors/2$22$51) /phylanx/make_list$9/2$22$30) /phylanx/random$1/2$22$23) /phylanx/variable$10$Y/2$22$20) /phylanx/define-variable$11$Y/2$22$20,(((/phylanx/access-argument$11$num_factors/2$23$34) /phylanx/identity$0/2$23$25) /phylanx/variable$11$I_f/2$23$20) /phylanx/define-variable$12$I_f/2$23$20,(((/phylanx/access-variable$10$num_items/2$24$34) /phylanx/identity$1/2$24$25) /phylanx/variable$12$I_i/2$24$20) /phylanx/define-variable$13$I_i/2$24$20,(((/phylanx/access-variable$11$num_users/2$25$34) /phylanx/identity$2/2$25$25) /phylanx/variable$13$I_u/2$25$20) /phylanx/define-variable$14$I_u/2$25$20,(/phylanx/variable$14$k/2$26$20) /phylanx/define-variable$15$k/2$26$20,(/phylanx/variable$15$i/2$27$20) /phylanx/define-variable$16$i/2$27$20,(/phylanx/variable$16$u/2$28$20) /phylanx/define-variable$17$u/2$28$20,((((/phylanx/access-argument$12$num_factors/2$30$49,/phylanx/access-argument$13$num_factors/2$30$62) /phylanx/make_list$10/2$30$39) /phylanx/constant$6/2$30$25) /phylanx/variable$17$XtX/2$30$20) /phylanx/define-variable$18$XtX/2$30$20,((((/phylanx/access-argument$14$num_factors/2$31$49,/phylanx/access-argument$15$num_factors/2$31$62) /phylanx/make_list$11/2$31$39) /phylanx/constant$7/2$31$25) /phylanx/variable$18$YtY/2$31$20) /phylanx/define-variable$19$YtY/2$31$20,((((/phylanx/access-argument$16$num_factors/2$32$47,/phylanx/access-argument$17$num_factors/2$32$60) /phylanx/make_list$12/2$32$37) /phylanx/constant$8/2$32$23) /phylanx/variable$19$A/2$32$20) /phylanx/define-variable$20$A/2$32$20,((((/phylanx/access-argument$18$num_factors/2$33$47) /phylanx/make_list$13/2$33$37) /phylanx/constant$9/2$33$23) /phylanx/variable$20$b/2$33$20) /phylanx/define-variable$21$b/2$33$20,((/phylanx/access-variable$12$k/2$35$19,/phylanx/access-argument$19$iterations/2$35$23) /phylanx/__lt$0/2$35$19,((/phylanx/access-argument$20$enable_output/2$37$24,((/phylanx/access-variable$13$k/2$39$56,/phylanx/access-variable$14$u/2$39$59) /phylanx/cout$0/2$39$37,(/phylanx/access-variable$15$X/2$40$48) /phylanx/cout$1/2$40$37,(/phylanx/access-variable$16$Y/2$41$48) /phylanx/cout$2/2$41$37) /phylanx/block$2/2$38$29) /phylanx/if$0/2$37$21,(/phylanx/access-variable$17$YtY/2$44$27,(((/phylanx/access-variable$18$Y/2$44$46) /phylanx/transpose$0/2$44$36,/phylanx/access-variable$19$Y/2$44$50) /phylanx/dot$0/2$44$32,(/phylanx/access-argument$21$regularization/2$44$55,/phylanx/access-variable$20$I_f/2$44$72) /phylanx/__mul$1/2$44$55) /phylanx/__add$0/2$44$32) /phylanx/store$0/2$44$21,(/phylanx/access-variable$21$XtX/2$45$27,(((/phylanx/access-variable$22$X/2$45$46) /phylanx/transpose$1/2$45$36,/phylanx/access-variable$23$X/2$45$50) /phylanx/dot$1/2$45$32,(/phylanx/access-argument$22$regularization/2$45$55,/phylanx/access-variable$24$I_f/2$45$72) /phylanx/__mul$2/2$45$55) /phylanx/__add$1/2$45$32) /phylanx/store$1/2$45$21,((/phylanx/access-variable$25$u/2$47$27,/phylanx/access-variable$26$num_users/2$47$31) /phylanx/__lt$1/2$47$27,((/phylanx/access-variable$27$conf_u/2$49$35,(/phylanx/access-variable$28$conf/2$49$53,/phylanx/access-variable$29$u/2$49$59) /phylanx/slice_row$0/2$49$43) /phylanx/store$2/2$49$29,(/phylanx/access-variable$30$c_u/2$50$35,(/phylanx/access-variable$31$conf_u/2$50$45) /phylanx/diag$0/2$50$40) /phylanx/store$3/2$50$29,(/phylanx/access-variable$32$p_u/2$51$35,(/phylanx/access-variable$33$conf_u/2$51$45) /phylanx/__ne$0/2$51$40) /phylanx/store$4/2$51$29,(/phylanx/access-variable$34$A/2$52$35,((((/phylanx/access-variable$35$Y/2$52$56) /phylanx/transpose$2/2$52$46,/phylanx/access-variable$36$c_u/2$52$60) /phylanx/dot$3/2$52$42,/phylanx/access-variable$37$Y/2$52$66) /phylanx/dot$2/2$52$38,/phylanx/access-variable$38$YtY/2$52$70) /phylanx/__add$2/2$52$38) /phylanx/store$5/2$52$29,(/phylanx/access-variable$39$b/2$53$35,(((/phylanx/access-variable$40$Y/2$53$56) /phylanx/transpose$3/2$53$46,(/phylanx/access-variable$41$c_u/2$53$60,/phylanx/access-variable$42$I_i/2$53$66) /phylanx/__add$3/2$53$60) /phylanx/dot$5/2$53$42,(/phylanx/access-variable$43$p_u/2$53$83) /phylanx/transpose$4/2$53$73) /phylanx/dot$4/2$53$38) /phylanx/store$6/2$53$29,(/phylanx/access-variable$46$X/2$54$41,((/phylanx/access-variable$47$A/2$54$80) /phylanx/inverse$0/2$54$72,/phylanx/access-variable$48$b/2$54$84) /phylanx/dot$6/2$54$68) /phylanx/store$7/2$54$29,(/phylanx/access-variable$49$u/2$55$35,(/phylanx/access-variable$50$u/2$55$38) /phylanx/__add$5/2$55$38) /phylanx/store$8/2$55$29) /phylanx/block$3/2$48$25) /phylanx/while$1/2$47$21,(/phylanx/access-variable$51$u/2$58$27) /phylanx/store$9/2$58$21,((/phylanx/access-variable$52$i/2$59$27,/phylanx/access-variable$53$num_items/2$59$31) /phylanx/__lt$2/2$59$27,((/phylanx/access-variable$54$conf_i/2$61$35,(/phylanx/access-variable$55$conf/2$61$56,/phylanx/access-variable$56$i/2$61$62) /phylanx/slice_column$0/2$61$43) /phylanx/store$10/2$61$29,(/phylanx/access-variable$57$c_i/2$62$35,(/phylanx/access-variable$58$conf_i/2$62$45) /phylanx/diag$1/2$62$40) /phylanx/store$11/2$62$29,(/phylanx/access-variable$59$p_i/2$63$35,(/phylanx/access-variable$60$conf_i/2$63$45) /phylanx/__ne$1/2$63$40) /phylanx/store$12/2$63$29,(/phylanx/access-variable$61$A/2$64$35,((((/phylanx/access-variable$62$X/2$64$56) /phylanx/transpose$5/2$64$46,/phylanx/access-variable$63$c_i/2$64$59) /phylanx/dot$8/2$64$42,/phylanx/access-variable$64$X/2$64$65) /phylanx/dot$7/2$64$38,/phylanx/access-variable$65$XtX/2$64$70) /phylanx/__add$6/2$64$38) /phylanx/store$13/2$64$29,(/phylanx/access-variable$66$b/2$65$35,(((/phylanx/access-variable$67$X/2$65$56) /phylanx/transpose$6/2$65$46,(/phylanx/access-variable$68$c_i/2$65$60,/phylanx/access-variable$69$I_u/2$65$66) /phylanx/__add$7/2$65$60) /phylanx/dot$10/2$65$42,(/phylanx/access-variable$70$p_i/2$65$83) /phylanx/transpose$7/2$65$73) /phylanx/dot$9/2$65$38) /phylanx/store$14/2$65$29,(/phylanx/access-variable$73$Y/2$66$41,((/phylanx/access-variable$74$A/2$66$80) /phylanx/inverse$1/2$66$72,/phylanx/access-variable$75$b/2$66$84) /phylanx/dot$11/2$66$68) /phylanx/store$15/2$66$29,(/phylanx/access-variable$76$i/2$67$35,(/phylanx/access-variable$77$i/2$67$38) /phylanx/__add$9/2$67$38) /phylanx/store$16/2$67$29) /phylanx/block$4/2$60$25) /phylanx/while$2/2$59$21,(/phylanx/access-variable$78$i/2$70$27) /phylanx/store$17/2$70$21,(/phylanx/access-variable$79$k/2$71$27,(/phylanx/access-variable$80$k/2$71$30) /phylanx/__add$10/2$71$30) /phylanx/store$18/2$71$21) /phylanx/block$1/2$36$17) /phylanx/while$0/2$35$13,(/phylanx/access-variable$81$X/2$74$18,/phylanx/access-variable$82$Y/2$74$21) /phylanx/list$2/2$74$13) /phylanx/block$0/2$7$9) /phylanx/lambda$1/2$5$12) /phylanx/function$1$als_explicit/2$5$12) als;
\ No newline at end of file
diff --git a/static/weekly-data/2019-01-24-lra-perfdata.csv b/static/weekly-data/2019-01-24-lra-perfdata.csv
new file mode 100644
index 0000000..4f87669
--- /dev/null
+++ b/static/weekly-data/2019-01-24-lra-perfdata.csv
@@ -0,0 +1,84 @@
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$19$40","add(19, 40)",750,118742121,1
+"/phylanx/__add$1/2$21$33","add(21, 33)",750,8487579,1
+"/phylanx/__div$0/2$19$33","div(19, 33)",750,127945040,1
+"/phylanx/__lt$0/2$15$17","lt(15, 17)",751,13600494,1
+"/phylanx/__minus$0/2$19$51","minus(19, 51)",750,88024838,1
+"/phylanx/__mul$0/2$20$47","mul(20, 47)",750,46729234,1
+"/phylanx/__sub$0/2$20$36","sub(20, 36)",750,60652761,1
+"/phylanx/__sub$1/2$20$67","sub(20, 67)",750,14631252,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,932,1
+"/phylanx/access-argument$1$row_start/0$7$25","access-argument/row_start(7, 25)",1,3796,1
+"/phylanx/access-argument$10$x/2$11$38","access-argument/x(11, 38)",1,930,1
+"/phylanx/access-argument$11$x/2$12$46","access-argument/x(12, 46)",1,1219,1
+"/phylanx/access-argument$12$iterations/2$15$24","access-argument/iterations(15, 24)",751,401360,1
+"/phylanx/access-argument$13$enable_output/2$17$24","access-argument/enable_output(17, 24)",750,534745,1
+"/phylanx/access-argument$14$x/2$19$55","access-argument/x(19, 55)",750,1484015,1
+"/phylanx/access-argument$15$alpha/2$20$47","access-argument/alpha(20, 47)",750,422117,1
+"/phylanx/access-argument$16$y/2$20$74","access-argument/y(20, 74)",750,284108,1
+"/phylanx/access-argument$2$row_stop/0$7$36","access-argument/row_stop(7, 36)",1,522,1
+"/phylanx/access-argument$3$col_start/0$8$25","access-argument/col_start(8, 25)",1,585,1
+"/phylanx/access-argument$4$col_stop/0$8$36","access-argument/col_stop(8, 36)",1,297,1
+"/phylanx/access-argument$5$filepath/1$6$29","access-argument/filepath(6, 29)",1,543,1
+"/phylanx/access-argument$6$row_start/1$6$50","access-argument/row_start(6, 50)",1,687,1
+"/phylanx/access-argument$7$row_stop/1$6$61","access-argument/row_stop(6, 61)",1,336,1
+"/phylanx/access-argument$8$col_stop/1$6$72","access-argument/col_stop(6, 72)",1,504,1
+"/phylanx/access-argument$9$x/2$10$49","access-argument/x(10, 49)",1,1031,1
+"/phylanx/access-function$0$read_x/0$10$5","access-function/read_x(10, 5)",1,574,1
+"/phylanx/access-function$1$read_y/1$8$5","access-function/read_y(8, 5)",1,202,1
+"/phylanx/access-function$2$lra_explicit/2$27$5","access-function/lra_explicit(27, 5)",1,228,1
+"/phylanx/access-variable$0$step/2$15$17","access-variable/step(15, 17)",751,887093,1
+"/phylanx/access-variable$1$step/2$17$54","access-variable/step(17, 54)",0,0,1
+"/phylanx/access-variable$10$step/2$21$33","access-variable/step(21, 33)",750,793558,1
+"/phylanx/access-variable$11$weights/2$24$13","access-variable/weights(24, 13)",1,2642,1
+"/phylanx/access-variable$2$weights/2$17$66","access-variable/weights(17, 66)",0,0,1
+"/phylanx/access-variable$3$pred/2$19$27","access-variable/pred(19, 27)",0,0,1
+"/phylanx/access-variable$4$weights/2$19$58","access-variable/weights(19, 58)",750,875551,1
+"/phylanx/access-variable$5$weights/2$20$27","access-variable/weights(20, 27)",0,0,1
+"/phylanx/access-variable$6$weights/2$20$36","access-variable/weights(20, 36)",750,898678,1
+"/phylanx/access-variable$7$transx/2$20$59","access-variable/transx(20, 59)",750,1104207,1
+"/phylanx/access-variable$8$pred/2$20$67","access-variable/pred(20, 67)",750,944135,1
+"/phylanx/access-variable$9$step/2$21$27","access-variable/step(21, 27)",0,0,1
+"/phylanx/block$0/0$1$1","block(1, 1)",1,37304,-1
+"/phylanx/block$1/1$1$1","block(1, 1)",1,4195,-1
+"/phylanx/block$2/2$1$1","block(1, 1)",1,3777,-1
+"/phylanx/block$3/2$9$9","block(9, 9)",1,352015832,-1
+"/phylanx/block$4/2$16$17","block(16, 17)",750,308667382,-1
+"/phylanx/constant$0/2$10$29","constant(10, 29)",1,127869,-1
+"/phylanx/constant$1/2$12$26","constant(12, 26)",1,50808,-1
+"/phylanx/cout$0/2$17$39","cout(17, 39)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,8715,-1
+"/phylanx/define-variable$1$read_y/1$5$12","define-variable/read_y(5, 12)",1,631,-1
+"/phylanx/define-variable$2$weights/2$10$20","define-variable/weights(10, 20)",1,182602,-1
+"/phylanx/define-variable$3$transx/2$11$20","define-variable/transx(11, 20)",1,167544,-1
+"/phylanx/define-variable$4$pred/2$12$20","define-variable/pred(12, 20)",1,72779,-1
+"/phylanx/define-variable$5$step/2$13$20","define-variable/step(13, 20)",1,8394,-1
+"/phylanx/define-variable$6$lra_explicit/2$8$12","define-variable/lra_explicit(8, 12)",1,488,-1
+"/phylanx/dot$0/2$19$51","dot(19, 51)",750,75723627,1
+"/phylanx/dot$1/2$20$55","dot(20, 55)",750,32859405,1
+"/phylanx/exp$0/2$19$46","exp(19, 46)",750,108372703,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,3293083,-1
+"/phylanx/file_read_csv$1/1$6$15","file_read_csv(6, 15)",1,4612501,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,3488165,1
+"/phylanx/function$1$read_y/1$5$12","function/read_y(5, 12)",1,4717963,1
+"/phylanx/function$2$lra_explicit/2$8$12","function/lra_explicit(8, 12)",1,352076732,1
+"/phylanx/if$0/2$17$21","if(17, 21)",750,12531795,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,3459176,-1
+"/phylanx/lambda$1/1$5$12","lambda(5, 12)",1,4700573,-1
+"/phylanx/lambda$2/2$8$12","lambda(8, 12)",1,352056387,-1
+"/phylanx/make_list$0/0$7$15","make_list(7, 15)",1,66963,-1
+"/phylanx/make_list$1/0$8$15","make_list(8, 15)",1,23981,-1
+"/phylanx/make_list$2/1$6$40","make_list(6, 40)",1,28856,-1
+"/phylanx/shape$0/2$10$43","shape(10, 43)",1,52583,-1
+"/phylanx/shape$1/2$12$40","shape(12, 40)",1,22842,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,3378858,-1
+"/phylanx/slice$1/1$6$9","slice(6, 9)",1,4657638,-1
+"/phylanx/store$0/2$19$21","store(19, 21)",750,154774213,1
+"/phylanx/store$1/2$20$21","store(20, 21)",750,83620598,1
+"/phylanx/store$2/2$21$21","store(21, 21)",750,29442039,1
+"/phylanx/transpose$0/2$11$28","transpose(11, 28)",1,131966,-1
+"/phylanx/variable$0$weights/2$10$20","variable/weights(10, 20)",1501,862561,1
+"/phylanx/variable$1$transx/2$11$20","variable/transx(11, 20)",750,721975,1
+"/phylanx/variable$2$pred/2$12$20","variable/pred(12, 20)",750,374734,1
+"/phylanx/variable$3$step/2$13$20","variable/step(13, 20)",1501,873592,1
+"/phylanx/while$0/2$14$13","while(14, 13)",1,351423998,-1
\ No newline at end of file
diff --git a/static/weekly-data/2019-01-24-lra-tree.txt b/static/weekly-data/2019-01-24-lra-tree.txt
new file mode 100644
index 0000000..fa46a62
--- /dev/null
+++ b/static/weekly-data/2019-01-24-lra-tree.txt
@@ -0,0 +1 @@
+((((((((/phylanx/access-argument$9$x/2$10$49) /phylanx/shape$0/2$10$43) /phylanx/constant$0/2$10$29) /phylanx/variable$0$weights/2$10$20) /phylanx/define-variable$2$weights/2$10$20,(((/phylanx/access-argument$10$x/2$11$38) /phylanx/transpose$0/2$11$28) /phylanx/variable$1$transx/2$11$20) /phylanx/define-variable$3$transx/2$11$20,((((/phylanx/access-argument$11$x/2$12$46) /phylanx/shape$1/2$12$40) /phylanx/constant$1/2$12$26) /phylanx/variable$2$pred/2$12$20) /phylanx/define-variable$4$pred/2$12$20,(/phylanx/variable$3$step/2$13$20) /phylanx/define-variable$5$step/2$13$20,((/phylanx/access-variable$0$step/2$15$17,/phylanx/access-argument$12$iterations/2$15$24) /phylanx/__lt$0/2$15$17,((/phylanx/access-argument$13$enable_output/2$17$24,(/phylanx/access-variable$1$step/2$17$54,/phylanx/access-variable$2$weights/2$17$66) /phylanx/cout$0/2$17$39) /phylanx/if$0/2$17$21,(/phylanx/access-variable$3$pred/2$19$27,(((((/phylanx/access-argument$14$x/2$19$55,/phylanx/access-variable$4$weights/2$19$58) /phylanx/dot$0/2$19$51) /phylanx/__minus$0/2$19$51) /phylanx/exp$0/2$19$46) /phylanx/__add$0/2$19$40) /phylanx/__div$0/2$19$33) /phylanx/store$0/2$19$21,(/phylanx/access-variable$5$weights/2$20$27,(/phylanx/access-variable$6$weights/2$20$36,(/phylanx/access-argument$15$alpha/2$20$47,(/phylanx/access-variable$7$transx/2$20$59,(/phylanx/access-variable$8$pred/2$20$67,/phylanx/access-argument$16$y/2$20$74) /phylanx/__sub$1/2$20$67) /phylanx/dot$1/2$20$55) /phylanx/__mul$0/2$20$47) /phylanx/__sub$0/2$20$36) /phylanx/store$1/2$20$21,(/phylanx/access-variable$9$step/2$21$27,(/phylanx/access-variable$10$step/2$21$33) /phylanx/__add$1/2$21$33) /phylanx/store$2/2$21$21) /phylanx/block$4/2$16$17) /phylanx/while$0/2$14$13,/phylanx/access-variable$11$weights/2$24$13) /phylanx/block$3/2$9$9) /phylanx/lambda$2/2$8$12) /phylanx/function$2$lra_explicit/2$8$12) lra;
\ No newline at end of file
diff --git a/static/weekly-data/2019-01-31-als-perfdata.csv b/static/weekly-data/2019-01-31-als-perfdata.csv
new file mode 100644
index 0000000..75f00e8
--- /dev/null
+++ b/static/weekly-data/2019-01-31-als-perfdata.csv
@@ -0,0 +1,270 @@
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$44$32","add(44, 32)",3,634015,1
+"/phylanx/__add$1/2$45$32","add(45, 32)",3,376121,1
+"/phylanx/__add$10/2$71$30","add(71, 30)",3,58071,1
+"/phylanx/__add$2/2$52$38","add(52, 38)",30,3703667,1
+"/phylanx/__add$3/2$53$60","add(53, 60)",30,1457394,1
+"/phylanx/__add$4/2$54$52","add(54, 52)",30,432380,1
+"/phylanx/__add$5/2$55$38","add(55, 38)",30,463720,1
+"/phylanx/__add$6/2$64$38","add(64, 38)",300,19256959,1
+"/phylanx/__add$7/2$65$60","add(65, 60)",300,4883447,1
+"/phylanx/__add$8/2$66$52","add(66, 52)",300,3165427,1
+"/phylanx/__add$9/2$67$38","add(67, 38)",300,3528923,1
+"/phylanx/__lt$0/2$35$19","lt(35, 19)",4,229253,1
+"/phylanx/__lt$1/2$47$27","lt(47, 27)",33,784855,1
+"/phylanx/__lt$2/2$59$27","lt(59, 27)",303,5384375,1
+"/phylanx/__mul$0/2$10$26","mul(10, 26)",1,213501,-1
+"/phylanx/__mul$1/2$44$55","mul(44, 55)",3,99418,1
+"/phylanx/__mul$2/2$45$55","mul(45, 55)",3,90143,1
+"/phylanx/__ne$0/2$51$40","ne(51, 40)",30,641914,1
+"/phylanx/__ne$1/2$63$40","ne(63, 40)",300,4134049,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,786,1
+"/phylanx/access-argument$1$row_start/0$6$50","access-argument/row_start(6, 50)",1,5048,1
+"/phylanx/access-argument$10$num_factors/2$22$51","access-argument/num_factors(22, 51)",1,1023,1
+"/phylanx/access-argument$11$num_factors/2$23$34","access-argument/num_factors(23, 34)",1,5097,1
+"/phylanx/access-argument$12$num_factors/2$30$49","access-argument/num_factors(30, 49)",1,1247,1
+"/phylanx/access-argument$13$num_factors/2$30$62","access-argument/num_factors(30, 62)",1,417,1
+"/phylanx/access-argument$14$num_factors/2$31$49","access-argument/num_factors(31, 49)",1,947,1
+"/phylanx/access-argument$15$num_factors/2$31$62","access-argument/num_factors(31, 62)",1,397,1
+"/phylanx/access-argument$16$num_factors/2$32$47","access-argument/num_factors(32, 47)",1,1027,1
+"/phylanx/access-argument$17$num_factors/2$32$60","access-argument/num_factors(32, 60)",1,373,1
+"/phylanx/access-argument$18$num_factors/2$33$47","access-argument/num_factors(33, 47)",1,913,1
+"/phylanx/access-argument$19$iterations/2$35$23","access-argument/iterations(35, 23)",4,3199,1
+"/phylanx/access-argument$2$row_stop/0$6$62","access-argument/row_stop(6, 62)",1,328,1
+"/phylanx/access-argument$20$enable_output/2$37$24","access-argument/enable_output(37, 24)",3,2589,1
+"/phylanx/access-argument$21$regularization/2$44$55","access-argument/regularization(44, 55)",3,1970,1
+"/phylanx/access-argument$22$regularization/2$45$55","access-argument/regularization(45, 55)",3,3169,1
+"/phylanx/access-argument$3$col_start/0$7$25","access-argument/col_start(7, 25)",1,752,1
+"/phylanx/access-argument$4$col_stop/0$7$37","access-argument/col_stop(7, 37)",1,222,1
+"/phylanx/access-argument$5$ratings/2$8$37","access-argument/ratings(8, 37)",1,1811,1
+"/phylanx/access-argument$6$ratings/2$9$37","access-argument/ratings(9, 37)",1,1016,1
+"/phylanx/access-argument$7$alpha/2$10$26","access-argument/alpha(10, 26)",1,1153,1
+"/phylanx/access-argument$8$ratings/2$10$34","access-argument/ratings(10, 34)",1,607,1
+"/phylanx/access-argument$9$num_factors/2$21$51","access-argument/num_factors(21, 51)",1,1170,1
+"/phylanx/access-function$0$read_x/1$9$5","access-function/read_x(9, 5)",1,395,1
+"/phylanx/access-function$1$als_explicit/3$77$5","access-function/als_explicit(77, 5)",1,145,1
+"/phylanx/access-variable$0$num_items/2$12$52","access-variable/num_items(12, 52)",1,5144,1
+"/phylanx/access-variable$1$num_users/2$13$52","access-variable/num_users(13, 52)",1,3897,1
+"/phylanx/access-variable$10$num_items/2$24$34","access-variable/num_items(24, 34)",1,9320,1
+"/phylanx/access-variable$11$num_users/2$25$34","access-variable/num_users(25, 34)",1,7993,1
+"/phylanx/access-variable$12$k/2$35$19","access-variable/k(35, 19)",4,12805,1
+"/phylanx/access-variable$13$k/2$39$56","access-variable/k(39, 56)",0,0,1
+"/phylanx/access-variable$14$u/2$39$59","access-variable/u(39, 59)",0,0,1
+"/phylanx/access-variable$15$X/2$40$48","access-variable/X(40, 48)",0,0,1
+"/phylanx/access-variable$16$Y/2$41$48","access-variable/Y(41, 48)",0,0,1
+"/phylanx/access-variable$17$YtY/2$44$27","access-variable/YtY(44, 27)",0,0,1
+"/phylanx/access-variable$18$Y/2$44$46","access-variable/Y(44, 46)",3,7157,1
+"/phylanx/access-variable$19$Y/2$44$50","access-variable/Y(44, 50)",3,5908,1
+"/phylanx/access-variable$2$num_items/2$15$49","access-variable/num_items(15, 49)",1,4467,1
+"/phylanx/access-variable$20$I_f/2$44$72","access-variable/I_f(44, 72)",3,6885,1
+"/phylanx/access-variable$21$XtX/2$45$27","access-variable/XtX(45, 27)",0,0,1
+"/phylanx/access-variable$22$X/2$45$46","access-variable/X(45, 46)",3,7733,1
+"/phylanx/access-variable$23$X/2$45$50","access-variable/X(45, 50)",3,5991,1
+"/phylanx/access-variable$24$I_f/2$45$72","access-variable/I_f(45, 72)",3,5542,1
+"/phylanx/access-variable$25$u/2$47$27","access-variable/u(47, 27)",33,64910,1
+"/phylanx/access-variable$26$num_users/2$47$31","access-variable/num_users(47, 31)",33,47388,1
+"/phylanx/access-variable$27$conf_u/2$49$35","access-variable/conf_u(49, 35)",0,0,1
+"/phylanx/access-variable$28$conf/2$49$53","access-variable/conf(49, 53)",30,51649,1
+"/phylanx/access-variable$29$u/2$49$59","access-variable/u(49, 59)",30,48083,1
+"/phylanx/access-variable$3$num_items/2$15$60","access-variable/num_items(15, 60)",1,2100,1
+"/phylanx/access-variable$30$c_u/2$50$35","access-variable/c_u(50, 35)",0,0,1
+"/phylanx/access-variable$31$conf_u/2$50$45","access-variable/conf_u(50, 45)",30,56076,1
+"/phylanx/access-variable$32$p_u/2$51$35","access-variable/p_u(51, 35)",0,0,1
+"/phylanx/access-variable$33$conf_u/2$51$45","access-variable/conf_u(51, 45)",30,65588,1
+"/phylanx/access-variable$34$A/2$52$35","access-variable/A(52, 35)",0,0,1
+"/phylanx/access-variable$35$Y/2$52$56","access-variable/Y(52, 56)",30,63197,1
+"/phylanx/access-variable$36$c_u/2$52$60","access-variable/c_u(52, 60)",30,43321,1
+"/phylanx/access-variable$37$Y/2$52$66","access-variable/Y(52, 66)",30,41131,1
+"/phylanx/access-variable$38$YtY/2$52$70","access-variable/YtY(52, 70)",30,39178,1
+"/phylanx/access-variable$39$b/2$53$35","access-variable/b(53, 35)",0,0,1
+"/phylanx/access-variable$4$num_users/2$16$49","access-variable/num_users(16, 49)",1,3794,1
+"/phylanx/access-variable$40$Y/2$53$56","access-variable/Y(53, 56)",30,51890,1
+"/phylanx/access-variable$41$c_u/2$53$60","access-variable/c_u(53, 60)",30,40334,1
+"/phylanx/access-variable$42$I_i/2$53$66","access-variable/I_i(53, 66)",30,35166,1
+"/phylanx/access-variable$43$p_u/2$53$83","access-variable/p_u(53, 83)",30,50392,1
+"/phylanx/access-variable$44$u/2$54$49","access-variable/u(54, 49)",30,68342,1
+"/phylanx/access-variable$45$u/2$54$52","access-variable/u(54, 52)",30,35276,1
+"/phylanx/access-variable$46$X/2$54$41","access-variable/X(54, 41)",0,0,1
+"/phylanx/access-variable$47$A/2$54$80","access-variable/A(54, 80)",30,51947,1
+"/phylanx/access-variable$48$b/2$54$84","access-variable/b(54, 84)",30,41047,1
+"/phylanx/access-variable$49$u/2$55$35","access-variable/u(55, 35)",0,0,1
+"/phylanx/access-variable$5$num_users/2$16$60","access-variable/num_users(16, 60)",1,1890,1
+"/phylanx/access-variable$50$u/2$55$38","access-variable/u(55, 38)",30,48892,1
+"/phylanx/access-variable$51$u/2$58$27","access-variable/u(58, 27)",0,0,1
+"/phylanx/access-variable$52$i/2$59$27","access-variable/i(59, 27)",303,376733,1
+"/phylanx/access-variable$53$num_items/2$59$31","access-variable/num_items(59, 31)",303,311394,1
+"/phylanx/access-variable$54$conf_i/2$61$35","access-variable/conf_i(61, 35)",0,0,1
+"/phylanx/access-variable$55$conf/2$61$56","access-variable/conf(61, 56)",300,388532,1
+"/phylanx/access-variable$56$i/2$61$62","access-variable/i(61, 62)",300,392944,1
+"/phylanx/access-variable$57$c_i/2$62$35","access-variable/c_i(62, 35)",0,0,1
+"/phylanx/access-variable$58$conf_i/2$62$45","access-variable/conf_i(62, 45)",300,404582,1
+"/phylanx/access-variable$59$p_i/2$63$35","access-variable/p_i(63, 35)",0,0,1
+"/phylanx/access-variable$6$num_items/2$17$49","access-variable/num_items(17, 49)",1,4540,1
+"/phylanx/access-variable$60$conf_i/2$63$45","access-variable/conf_i(63, 45)",300,479915,1
+"/phylanx/access-variable$61$A/2$64$35","access-variable/A(64, 35)",0,0,1
+"/phylanx/access-variable$62$X/2$64$56","access-variable/X(64, 56)",300,354657,1
+"/phylanx/access-variable$63$c_i/2$64$59","access-variable/c_i(64, 59)",300,309505,1
+"/phylanx/access-variable$64$X/2$64$65","access-variable/X(64, 65)",300,289127,1
+"/phylanx/access-variable$65$XtX/2$64$70","access-variable/XtX(64, 70)",300,296023,1
+"/phylanx/access-variable$66$b/2$65$35","access-variable/b(65, 35)",0,0,1
+"/phylanx/access-variable$67$X/2$65$56","access-variable/X(65, 56)",300,324579,1
+"/phylanx/access-variable$68$c_i/2$65$60","access-variable/c_i(65, 60)",300,301575,1
+"/phylanx/access-variable$69$I_u/2$65$66","access-variable/I_u(65, 66)",300,267359,1
+"/phylanx/access-variable$7$num_users/2$18$49","access-variable/num_users(18, 49)",1,3796,1
+"/phylanx/access-variable$70$p_i/2$65$83","access-variable/p_i(65, 83)",300,335576,1
+"/phylanx/access-variable$71$i/2$66$49","access-variable/i(66, 49)",300,555875,1
+"/phylanx/access-variable$72$i/2$66$52","access-variable/i(66, 52)",300,280770,1
+"/phylanx/access-variable$73$Y/2$66$41","access-variable/Y(66, 41)",0,0,1
+"/phylanx/access-variable$74$A/2$66$80","access-variable/A(66, 80)",300,320979,1
+"/phylanx/access-variable$75$b/2$66$84","access-variable/b(66, 84)",300,307134,1
+"/phylanx/access-variable$76$i/2$67$35","access-variable/i(67, 35)",0,0,1
+"/phylanx/access-variable$77$i/2$67$38","access-variable/i(67, 38)",300,358329,1
+"/phylanx/access-variable$78$i/2$70$27","access-variable/i(70, 27)",0,0,1
+"/phylanx/access-variable$79$k/2$71$27","access-variable/k(71, 27)",0,0,1
+"/phylanx/access-variable$8$num_users/2$21$40","access-variable/num_users(21, 40)",1,4553,1
+"/phylanx/access-variable$80$k/2$71$30","access-variable/k(71, 30)",3,5604,1
+"/phylanx/access-variable$81$X/2$74$18","access-variable/X(74, 18)",1,1809,1
+"/phylanx/access-variable$82$Y/2$74$21","access-variable/Y(74, 21)",1,1160,1
+"/phylanx/access-variable$9$num_items/2$22$40","access-variable/num_items(22, 40)",1,4146,1
+"/phylanx/block$0/2$7$9","block(7, 9)",1,199788404,-1
+"/phylanx/block$1/2$36$17","block(36, 17)",3,255239780,0
+"/phylanx/block$2/2$38$29","block(38, 29)",0,0,-1
+"/phylanx/block$3/2$48$25","block(48, 25)",30,25393715,0
+"/phylanx/block$4/2$60$25","block(60, 25)",300,150495629,0
+"/phylanx/constant$0/2$12$28","constant(12, 28)",1,161534,-1
+"/phylanx/constant$1/2$13$28","constant(13, 28)",1,91434,-1
+"/phylanx/constant$2/2$15$25","constant(15, 25)",1,133353,-1
+"/phylanx/constant$3/2$16$25","constant(16, 25)",1,101304,-1
+"/phylanx/constant$4/2$17$25","constant(17, 25)",1,82894,-1
+"/phylanx/constant$5/2$18$25","constant(18, 25)",1,81570,-1
+"/phylanx/constant$6/2$30$25","constant(30, 25)",1,95184,-1
+"/phylanx/constant$7/2$31$25","constant(31, 25)",1,90743,-1
+"/phylanx/constant$8/2$32$23","constant(32, 23)",1,87900,-1
+"/phylanx/constant$9/2$33$23","constant(33, 23)",1,77161,-1
+"/phylanx/cout$0/2$39$37","cout(39, 37)",0,0,-1
+"/phylanx/cout$1/2$40$37","cout(40, 37)",0,0,-1
+"/phylanx/cout$2/2$41$37","cout(41, 37)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,7129,-1
+"/phylanx/define-variable$1$num_users/2$8$20","define-variable/num_users(8, 20)",1,198859,-1
+"/phylanx/define-variable$10$X/2$21$20","define-variable/X(21, 20)",1,271388,-1
+"/phylanx/define-variable$11$Y/2$22$20","define-variable/Y(22, 20)",1,283311,-1
+"/phylanx/define-variable$12$I_f/2$23$20","define-variable/I_f(23, 20)",1,97188,-1
+"/phylanx/define-variable$13$I_i/2$24$20","define-variable/I_i(24, 20)",1,108180,-1
+"/phylanx/define-variable$14$I_u/2$25$20","define-variable/I_u(25, 20)",1,77815,-1
+"/phylanx/define-variable$15$k/2$26$20","define-variable/k(26, 20)",1,12883,-1
+"/phylanx/define-variable$16$i/2$27$20","define-variable/i(27, 20)",1,6380,-1
+"/phylanx/define-variable$17$u/2$28$20","define-variable/u(28, 20)",1,6193,-1
+"/phylanx/define-variable$18$XtX/2$30$20","define-variable/XtX(30, 20)",1,133358,-1
+"/phylanx/define-variable$19$YtY/2$31$20","define-variable/YtY(31, 20)",1,126963,-1
+"/phylanx/define-variable$2$num_items/2$9$20","define-variable/num_items(9, 20)",1,79983,-1
+"/phylanx/define-variable$20$A/2$32$20","define-variable/A(32, 20)",1,124351,-1
+"/phylanx/define-variable$21$b/2$33$20","define-variable/b(33, 20)",1,112298,-1
+"/phylanx/define-variable$22$als_explicit/2$5$12","define-variable/als_explicit(5, 12)",1,243,-1
+"/phylanx/define-variable$3$conf/2$10$20","define-variable/conf(10, 20)",1,267954,-1
+"/phylanx/define-variable$4$conf_u/2$12$20","define-variable/conf_u(12, 20)",1,201301,-1
+"/phylanx/define-variable$5$conf_i/2$13$20","define-variable/conf_i(13, 20)",1,132526,-1
+"/phylanx/define-variable$6$c_u/2$15$20","define-variable/c_u(15, 20)",1,170717,-1
+"/phylanx/define-variable$7$c_i/2$16$20","define-variable/c_i(16, 20)",1,140271,-1
+"/phylanx/define-variable$8$p_u/2$17$20","define-variable/p_u(17, 20)",1,114575,-1
+"/phylanx/define-variable$9$p_i/2$18$20","define-variable/p_i(18, 20)",1,118343,-1
+"/phylanx/diag$0/2$50$40","diag(50, 40)",30,759067,1
+"/phylanx/diag$1/2$62$40","diag(62, 40)",300,3330773,1
+"/phylanx/dot$0/2$44$32","dot(44, 32)",3,492623,1
+"/phylanx/dot$1/2$45$32","dot(45, 32)",3,257651,1
+"/phylanx/dot$10/2$65$42","dot(65, 42)",300,12320019,1
+"/phylanx/dot$11/2$66$68","dot(66, 68)",300,11453442,1
+"/phylanx/dot$2/2$52$38","dot(52, 38)",30,3006246,1
+"/phylanx/dot$3/2$52$42","dot(52, 42)",30,2200319,1
+"/phylanx/dot$4/2$53$38","dot(53, 38)",30,4375881,1
+"/phylanx/dot$5/2$53$42","dot(53, 42)",30,3502197,1
+"/phylanx/dot$6/2$54$68","dot(54, 68)",30,2083672,1
+"/phylanx/dot$7/2$64$38","dot(64, 38)",300,13771864,1
+"/phylanx/dot$8/2$64$42","dot(64, 42)",300,8578494,1
+"/phylanx/dot$9/2$65$38","dot(65, 38)",300,18748929,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,225825596,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,226006445,1
+"/phylanx/function$1$als_explicit/2$5$12","function/als_explicit(5, 12)",1,199880195,1
+"/phylanx/identity$0/2$23$25","identity(23, 25)",1,48547,-1
+"/phylanx/identity$1/2$24$25","identity(24, 25)",1,64424,-1
+"/phylanx/identity$2/2$25$25","identity(25, 25)",1,35947,-1
+"/phylanx/if$0/2$37$21","if(37, 21)",3,87876,1
+"/phylanx/inverse$0/2$54$72","inverse(54, 72)",30,1131454,1
+"/phylanx/inverse$1/2$66$72","inverse(66, 72)",300,6533532,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,225977385,-1
+"/phylanx/lambda$1/2$5$12","lambda(5, 12)",1,199844444,-1
+"/phylanx/list$0/2$54$44","list(54, 44)",30,1253211,1
+"/phylanx/list$1/2$66$44","list(66, 44)",300,9700584,1
+"/phylanx/list$2/2$74$13","list(74, 13)",1,20052,-1
+"/phylanx/make_list$0/0$6$40","make_list(6, 40)",1,77232,-1
+"/phylanx/make_list$1/0$7$15","make_list(7, 15)",1,27122,-1
+"/phylanx/make_list$10/2$30$39","make_list(30, 39)",1,37427,-1
+"/phylanx/make_list$11/2$31$39","make_list(31, 39)",1,34503,-1
+"/phylanx/make_list$12/2$32$37","make_list(32, 37)",1,34547,-1
+"/phylanx/make_list$13/2$33$37","make_list(33, 37)",1,23664,-1
+"/phylanx/make_list$2/2$12$42","make_list(12, 42)",1,36900,-1
+"/phylanx/make_list$3/2$13$42","make_list(13, 42)",1,30603,-1
+"/phylanx/make_list$4/2$15$39","make_list(15, 39)",1,43650,-1
+"/phylanx/make_list$5/2$16$39","make_list(16, 39)",1,40813,-1
+"/phylanx/make_list$6/2$17$39","make_list(17, 39)",1,27957,-1
+"/phylanx/make_list$7/2$18$39","make_list(18, 39)",1,27980,-1
+"/phylanx/make_list$8/2$21$30","make_list(21, 30)",1,41653,-1
+"/phylanx/make_list$9/2$22$30","make_list(22, 30)",1,41237,-1
+"/phylanx/random$0/2$21$23","random(21, 23)",1,227200,-1
+"/phylanx/random$1/2$22$23","random(22, 23)",1,251671,-1
+"/phylanx/set_seed$0/2$20$13","set_seed(20, 13)",1,267634,-1
+"/phylanx/shape$0/2$8$31","shape(8, 31)",1,86238,-1
+"/phylanx/shape$1/2$9$31","shape(9, 31)",1,35558,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,225879611,-1
+"/phylanx/slice_column$0/2$61$43","slice_column(61, 43)",300,7435967,1
+"/phylanx/slice_row$0/2$49$43","slice_row(49, 43)",30,916492,1
+"/phylanx/store$0/2$44$21","store(44, 21)",3,730665,1
+"/phylanx/store$1/2$45$21","store(45, 21)",3,470533,1
+"/phylanx/store$10/2$61$29","store(61, 29)",300,16671689,1
+"/phylanx/store$11/2$62$29","store(62, 29)",300,9948535,1
+"/phylanx/store$12/2$63$29","store(63, 29)",300,10599468,1
+"/phylanx/store$13/2$64$29","store(64, 29)",300,26224841,1
+"/phylanx/store$14/2$65$29","store(65, 29)",300,25219914,1
+"/phylanx/store$15/2$66$29","store(66, 29)",300,33367203,1
+"/phylanx/store$16/2$67$29","store(67, 29)",300,11635628,1
+"/phylanx/store$17/2$70$21","store(70, 21)",3,96797,1
+"/phylanx/store$18/2$71$21","store(71, 21)",3,60168772,0
+"/phylanx/store$2/2$49$29","store(49, 29)",30,2053068,1
+"/phylanx/store$3/2$50$29","store(50, 29)",30,1819043,1
+"/phylanx/store$4/2$51$29","store(51, 29)",30,1472500,1
+"/phylanx/store$5/2$52$29","store(52, 29)",30,4588992,1
+"/phylanx/store$6/2$53$29","store(53, 29)",30,5254291,1
+"/phylanx/store$7/2$54$29","store(54, 29)",30,4766627,1
+"/phylanx/store$8/2$55$29","store(55, 29)",30,2941032,1
+"/phylanx/store$9/2$58$21","store(58, 21)",3,98363,1
+"/phylanx/transpose$0/2$44$36","transpose(44, 36)",3,93740,1
+"/phylanx/transpose$1/2$45$36","transpose(45, 36)",3,64780,1
+"/phylanx/transpose$2/2$52$46","transpose(52, 46)",30,521857,1
+"/phylanx/transpose$3/2$53$46","transpose(53, 46)",30,398843,1
+"/phylanx/transpose$4/2$53$73","transpose(53, 73)",30,321898,1
+"/phylanx/transpose$5/2$64$46","transpose(64, 46)",300,3699517,1
+"/phylanx/transpose$6/2$65$46","transpose(65, 46)",300,2792767,1
+"/phylanx/transpose$7/2$65$73","transpose(65, 73)",300,2320674,1
+"/phylanx/variable$0$num_users/2$8$20","variable/num_users(8, 20)",39,19219,1
+"/phylanx/variable$1$num_items/2$9$20","variable/num_items(9, 20)",309,95962,1
+"/phylanx/variable$10$Y/2$22$20","variable/Y(22, 20)",97,69188,1
+"/phylanx/variable$11$I_f/2$23$20","variable/I_f(23, 20)",6,4214,1
+"/phylanx/variable$12$I_i/2$24$20","variable/I_i(24, 20)",30,12405,1
+"/phylanx/variable$13$I_u/2$25$20","variable/I_u(25, 20)",300,85050,1
+"/phylanx/variable$14$k/2$26$20","variable/k(26, 20)",7,5307,1
+"/phylanx/variable$15$i/2$27$20","variable/i(27, 20)",1503,752563,1
+"/phylanx/variable$16$u/2$28$20","variable/u(28, 20)",153,100953,1
+"/phylanx/variable$17$XtX/2$30$20","variable/XtX(30, 20)",300,88419,1
+"/phylanx/variable$18$YtY/2$31$20","variable/YtY(31, 20)",30,12924,1
+"/phylanx/variable$19$A/2$32$20","variable/A(32, 20)",330,131511,1
+"/phylanx/variable$2$conf/2$10$20","variable/conf(10, 20)",330,183215,1
+"/phylanx/variable$20$b/2$33$20","variable/b(33, 20)",330,126898,1
+"/phylanx/variable$3$conf_u/2$12$20","variable/conf_u(12, 20)",60,39159,1
+"/phylanx/variable$4$conf_i/2$13$20","variable/conf_i(13, 20)",600,278141,1
+"/phylanx/variable$5$c_u/2$15$20","variable/c_u(15, 20)",60,31627,1
+"/phylanx/variable$6$c_i/2$16$20","variable/c_i(16, 20)",600,212571,1
+"/phylanx/variable$7$p_u/2$17$20","variable/p_u(17, 20)",30,21393,1
+"/phylanx/variable$8$p_i/2$18$20","variable/p_i(18, 20)",300,142276,1
+"/phylanx/variable$9$X/2$21$20","variable/X(21, 20)",907,361253,1
+"/phylanx/while$0/2$35$13","while(35, 13)",1,195690566,-1
+"/phylanx/while$1/2$47$21","while(47, 21)",3,25962268,0
+"/phylanx/while$2/2$59$21","while(59, 21)",3,167225373,0
\ No newline at end of file
diff --git a/static/weekly-data/2019-01-31-als-tree.txt b/static/weekly-data/2019-01-31-als-tree.txt
new file mode 100644
index 0000000..fa3fbd7
--- /dev/null
+++ b/static/weekly-data/2019-01-31-als-tree.txt
@@ -0,0 +1 @@
+(((((((/phylanx/access-argument$5$ratings/2$8$37) /phylanx/shape$0/2$8$31) /phylanx/variable$0$num_users/2$8$20) /phylanx/define-variable$1$num_users/2$8$20,(((/phylanx/access-argument$6$ratings/2$9$37) /phylanx/shape$1/2$9$31) /phylanx/variable$1$num_items/2$9$20) /phylanx/define-variable$2$num_items/2$9$20,(((/phylanx/access-argument$7$alpha/2$10$26,/phylanx/access-argument$8$ratings/2$10$34) /phylanx/__mul$0/2$10$26) /phylanx/variable$2$conf/2$10$20) /phylanx/define-variable$3$conf/2$10$20,((((/phylanx/access-variable$0$num_items/2$12$52) /phylanx/make_list$2/2$12$42) /phylanx/constant$0/2$12$28) /phylanx/variable$3$conf_u/2$12$20) /phylanx/define-variable$4$conf_u/2$12$20,((((/phylanx/access-variable$1$num_users/2$13$52) /phylanx/make_list$3/2$13$42) /phylanx/constant$1/2$13$28) /phylanx/variable$4$conf_i/2$13$20) /phylanx/define-variable$5$conf_i/2$13$20,((((/phylanx/access-variable$2$num_items/2$15$49,/phylanx/access-variable$3$num_items/2$15$60) /phylanx/make_list$4/2$15$39) /phylanx/constant$2/2$15$25) /phylanx/variable$5$c_u/2$15$20) /phylanx/define-variable$6$c_u/2$15$20,((((/phylanx/access-variable$4$num_users/2$16$49,/phylanx/access-variable$5$num_users/2$16$60) /phylanx/make_list$5/2$16$39) /phylanx/constant$3/2$16$25) /phylanx/variable$6$c_i/2$16$20) /phylanx/define-variable$7$c_i/2$16$20,((((/phylanx/access-variable$6$num_items/2$17$49) /phylanx/make_list$6/2$17$39) /phylanx/constant$4/2$17$25) /phylanx/variable$7$p_u/2$17$20) /phylanx/define-variable$8$p_u/2$17$20,((((/phylanx/access-variable$7$num_users/2$18$49) /phylanx/make_list$7/2$18$39) /phylanx/constant$5/2$18$25) /phylanx/variable$8$p_i/2$18$20) /phylanx/define-variable$9$p_i/2$18$20,/phylanx/set_seed$0/2$20$13,((((/phylanx/access-variable$8$num_users/2$21$40,/phylanx/access-argument$9$num_factors/2$21$51) /phylanx/make_list$8/2$21$30) /phylanx/random$0/2$21$23) /phylanx/variable$9$X/2$21$20) /phylanx/define-variable$10$X/2$21$20,((((/phylanx/access-variable$9$num_items/2$22$40,/phylanx/access-argument$10$num_factors/2$22$51) /phylanx/make_list$9/2$22$30) /phylanx/random$1/2$22$23) /phylanx/variable$10$Y/2$22$20) /phylanx/define-variable$11$Y/2$22$20,(((/phylanx/access-argument$11$num_factors/2$23$34) /phylanx/identity$0/2$23$25) /phylanx/variable$11$I_f/2$23$20) /phylanx/define-variable$12$I_f/2$23$20,(((/phylanx/access-variable$10$num_items/2$24$34) /phylanx/identity$1/2$24$25) /phylanx/variable$12$I_i/2$24$20) /phylanx/define-variable$13$I_i/2$24$20,(((/phylanx/access-variable$11$num_users/2$25$34) /phylanx/identity$2/2$25$25) /phylanx/variable$13$I_u/2$25$20) /phylanx/define-variable$14$I_u/2$25$20,(/phylanx/variable$14$k/2$26$20) /phylanx/define-variable$15$k/2$26$20,(/phylanx/variable$15$i/2$27$20) /phylanx/define-variable$16$i/2$27$20,(/phylanx/variable$16$u/2$28$20) /phylanx/define-variable$17$u/2$28$20,((((/phylanx/access-argument$12$num_factors/2$30$49,/phylanx/access-argument$13$num_factors/2$30$62) /phylanx/make_list$10/2$30$39) /phylanx/constant$6/2$30$25) /phylanx/variable$17$XtX/2$30$20) /phylanx/define-variable$18$XtX/2$30$20,((((/phylanx/access-argument$14$num_factors/2$31$49,/phylanx/access-argument$15$num_factors/2$31$62) /phylanx/make_list$11/2$31$39) /phylanx/constant$7/2$31$25) /phylanx/variable$18$YtY/2$31$20) /phylanx/define-variable$19$YtY/2$31$20,((((/phylanx/access-argument$16$num_factors/2$32$47,/phylanx/access-argument$17$num_factors/2$32$60) /phylanx/make_list$12/2$32$37) /phylanx/constant$8/2$32$23) /phylanx/variable$19$A/2$32$20) /phylanx/define-variable$20$A/2$32$20,((((/phylanx/access-argument$18$num_factors/2$33$47) /phylanx/make_list$13/2$33$37) /phylanx/constant$9/2$33$23) /phylanx/variable$20$b/2$33$20) /phylanx/define-variable$21$b/2$33$20,((/phylanx/access-variable$12$k/2$35$19,/phylanx/access-argument$19$iterations/2$35$23) /phylanx/__lt$0/2$35$19,((/phylanx/access-argument$20$enable_output/2$37$24,((/phylanx/access-variable$13$k/2$39$56,/phylanx/access-variable$14$u/2$39$59) /phylanx/cout$0/2$39$37,(/phylanx/access-variable$15$X/2$40$48) /phylanx/cout$1/2$40$37,(/phylanx/access-variable$16$Y/2$41$48) /phylanx/cout$2/2$41$37) /phylanx/block$2/2$38$29) /phylanx/if$0/2$37$21,(/phylanx/access-variable$17$YtY/2$44$27,(((/phylanx/access-variable$18$Y/2$44$46) /phylanx/transpose$0/2$44$36,/phylanx/access-variable$19$Y/2$44$50) /phylanx/dot$0/2$44$32,(/phylanx/access-argument$21$regularization/2$44$55,/phylanx/access-variable$20$I_f/2$44$72) /phylanx/__mul$1/2$44$55) /phylanx/__add$0/2$44$32) /phylanx/store$0/2$44$21,(/phylanx/access-variable$21$XtX/2$45$27,(((/phylanx/access-variable$22$X/2$45$46) /phylanx/transpose$1/2$45$36,/phylanx/access-variable$23$X/2$45$50) /phylanx/dot$1/2$45$32,(/phylanx/access-argument$22$regularization/2$45$55,/phylanx/access-variable$24$I_f/2$45$72) /phylanx/__mul$2/2$45$55) /phylanx/__add$1/2$45$32) /phylanx/store$1/2$45$21,((/phylanx/access-variable$25$u/2$47$27,/phylanx/access-variable$26$num_users/2$47$31) /phylanx/__lt$1/2$47$27,((/phylanx/access-variable$27$conf_u/2$49$35,(/phylanx/access-variable$28$conf/2$49$53,/phylanx/access-variable$29$u/2$49$59) /phylanx/slice_row$0/2$49$43) /phylanx/store$2/2$49$29,(/phylanx/access-variable$30$c_u/2$50$35,(/phylanx/access-variable$31$conf_u/2$50$45) /phylanx/diag$0/2$50$40) /phylanx/store$3/2$50$29,(/phylanx/access-variable$32$p_u/2$51$35,(/phylanx/access-variable$33$conf_u/2$51$45) /phylanx/__ne$0/2$51$40) /phylanx/store$4/2$51$29,(/phylanx/access-variable$34$A/2$52$35,((((/phylanx/access-variable$35$Y/2$52$56) /phylanx/transpose$2/2$52$46,/phylanx/access-variable$36$c_u/2$52$60) /phylanx/dot$3/2$52$42,/phylanx/access-variable$37$Y/2$52$66) /phylanx/dot$2/2$52$38,/phylanx/access-variable$38$YtY/2$52$70) /phylanx/__add$2/2$52$38) /phylanx/store$5/2$52$29,(/phylanx/access-variable$39$b/2$53$35,(((/phylanx/access-variable$40$Y/2$53$56) /phylanx/transpose$3/2$53$46,(/phylanx/access-variable$41$c_u/2$53$60,/phylanx/access-variable$42$I_i/2$53$66) /phylanx/__add$3/2$53$60) /phylanx/dot$5/2$53$42,(/phylanx/access-variable$43$p_u/2$53$83) /phylanx/transpose$4/2$53$73) /phylanx/dot$4/2$53$38) /phylanx/store$6/2$53$29,(/phylanx/access-variable$46$X/2$54$41,((/phylanx/access-variable$47$A/2$54$80) /phylanx/inverse$0/2$54$72,/phylanx/access-variable$48$b/2$54$84) /phylanx/dot$6/2$54$68) /phylanx/store$7/2$54$29,(/phylanx/access-variable$49$u/2$55$35,(/phylanx/access-variable$50$u/2$55$38) /phylanx/__add$5/2$55$38) /phylanx/store$8/2$55$29) /phylanx/block$3/2$48$25) /phylanx/while$1/2$47$21,(/phylanx/access-variable$51$u/2$58$27) /phylanx/store$9/2$58$21,((/phylanx/access-variable$52$i/2$59$27,/phylanx/access-variable$53$num_items/2$59$31) /phylanx/__lt$2/2$59$27,((/phylanx/access-variable$54$conf_i/2$61$35,(/phylanx/access-variable$55$conf/2$61$56,/phylanx/access-variable$56$i/2$61$62) /phylanx/slice_column$0/2$61$43) /phylanx/store$10/2$61$29,(/phylanx/access-variable$57$c_i/2$62$35,(/phylanx/access-variable$58$conf_i/2$62$45) /phylanx/diag$1/2$62$40) /phylanx/store$11/2$62$29,(/phylanx/access-variable$59$p_i/2$63$35,(/phylanx/access-variable$60$conf_i/2$63$45) /phylanx/__ne$1/2$63$40) /phylanx/store$12/2$63$29,(/phylanx/access-variable$61$A/2$64$35,((((/phylanx/access-variable$62$X/2$64$56) /phylanx/transpose$5/2$64$46,/phylanx/access-variable$63$c_i/2$64$59) /phylanx/dot$8/2$64$42,/phylanx/access-variable$64$X/2$64$65) /phylanx/dot$7/2$64$38,/phylanx/access-variable$65$XtX/2$64$70) /phylanx/__add$6/2$64$38) /phylanx/store$13/2$64$29,(/phylanx/access-variable$66$b/2$65$35,(((/phylanx/access-variable$67$X/2$65$56) /phylanx/transpose$6/2$65$46,(/phylanx/access-variable$68$c_i/2$65$60,/phylanx/access-variable$69$I_u/2$65$66) /phylanx/__add$7/2$65$60) /phylanx/dot$10/2$65$42,(/phylanx/access-variable$70$p_i/2$65$83) /phylanx/transpose$7/2$65$73) /phylanx/dot$9/2$65$38) /phylanx/store$14/2$65$29,(/phylanx/access-variable$73$Y/2$66$41,((/phylanx/access-variable$74$A/2$66$80) /phylanx/inverse$1/2$66$72,/phylanx/access-variable$75$b/2$66$84) /phylanx/dot$11/2$66$68) /phylanx/store$15/2$66$29,(/phylanx/access-variable$76$i/2$67$35,(/phylanx/access-variable$77$i/2$67$38) /phylanx/__add$9/2$67$38) /phylanx/store$16/2$67$29) /phylanx/block$4/2$60$25) /phylanx/while$2/2$59$21,(/phylanx/access-variable$78$i/2$70$27) /phylanx/store$17/2$70$21,(/phylanx/access-variable$79$k/2$71$27,(/phylanx/access-variable$80$k/2$71$30) /phylanx/__add$10/2$71$30) /phylanx/store$18/2$71$21) /phylanx/block$1/2$36$17) /phylanx/while$0/2$35$13,(/phylanx/access-variable$81$X/2$74$18,/phylanx/access-variable$82$Y/2$74$21) /phylanx/list$2/2$74$13) /phylanx/block$0/2$7$9) /phylanx/lambda$1/2$5$12) /phylanx/function$1$als_explicit/2$5$12) als;
\ No newline at end of file
diff --git a/static/weekly-data/2019-01-31-lra-perfdata.csv b/static/weekly-data/2019-01-31-lra-perfdata.csv
new file mode 100644
index 0000000..8483251
--- /dev/null
+++ b/static/weekly-data/2019-01-31-lra-perfdata.csv
@@ -0,0 +1,84 @@
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$19$40","add(19, 40)",750,101324038,1
+"/phylanx/__add$1/2$21$33","add(21, 33)",750,23825474,1
+"/phylanx/__div$0/2$19$33","div(19, 33)",750,107660492,1
+"/phylanx/__lt$0/2$15$17","lt(15, 17)",751,10581949,1
+"/phylanx/__minus$0/2$19$51","minus(19, 51)",750,77192115,1
+"/phylanx/__mul$0/2$20$47","mul(20, 47)",750,38988463,1
+"/phylanx/__sub$0/2$20$36","sub(20, 36)",750,48919754,1
+"/phylanx/__sub$1/2$20$67","sub(20, 67)",750,14142534,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,830,1
+"/phylanx/access-argument$1$row_start/0$7$25","access-argument/row_start(7, 25)",1,5420,1
+"/phylanx/access-argument$10$x/2$11$38","access-argument/x(11, 38)",1,1356,1
+"/phylanx/access-argument$11$x/2$12$46","access-argument/x(12, 46)",1,1345,1
+"/phylanx/access-argument$12$iterations/2$15$24","access-argument/iterations(15, 24)",751,398499,1
+"/phylanx/access-argument$13$enable_output/2$17$24","access-argument/enable_output(17, 24)",750,472652,1
+"/phylanx/access-argument$14$x/2$19$55","access-argument/x(19, 55)",750,1201923,1
+"/phylanx/access-argument$15$alpha/2$20$47","access-argument/alpha(20, 47)",750,413316,1
+"/phylanx/access-argument$16$y/2$20$74","access-argument/y(20, 74)",750,189968,1
+"/phylanx/access-argument$2$row_stop/0$7$36","access-argument/row_stop(7, 36)",1,472,1
+"/phylanx/access-argument$3$col_start/0$8$25","access-argument/col_start(8, 25)",1,704,1
+"/phylanx/access-argument$4$col_stop/0$8$36","access-argument/col_stop(8, 36)",1,284,1
+"/phylanx/access-argument$5$filepath/1$6$29","access-argument/filepath(6, 29)",1,313,1
+"/phylanx/access-argument$6$row_start/1$6$50","access-argument/row_start(6, 50)",1,620,1
+"/phylanx/access-argument$7$row_stop/1$6$61","access-argument/row_stop(6, 61)",1,213,1
+"/phylanx/access-argument$8$col_stop/1$6$72","access-argument/col_stop(6, 72)",1,716,1
+"/phylanx/access-argument$9$x/2$10$49","access-argument/x(10, 49)",1,876,1
+"/phylanx/access-function$0$read_x/0$10$5","access-function/read_x(10, 5)",1,431,1
+"/phylanx/access-function$1$read_y/1$8$5","access-function/read_y(8, 5)",1,165,1
+"/phylanx/access-function$2$lra_explicit/2$27$5","access-function/lra_explicit(27, 5)",1,155,1
+"/phylanx/access-variable$0$step/2$15$17","access-variable/step(15, 17)",751,808964,1
+"/phylanx/access-variable$1$step/2$17$54","access-variable/step(17, 54)",0,0,1
+"/phylanx/access-variable$10$step/2$21$33","access-variable/step(21, 33)",750,723557,1
+"/phylanx/access-variable$11$weights/2$24$13","access-variable/weights(24, 13)",1,3913,1
+"/phylanx/access-variable$2$weights/2$17$66","access-variable/weights(17, 66)",0,0,1
+"/phylanx/access-variable$3$pred/2$19$27","access-variable/pred(19, 27)",0,0,1
+"/phylanx/access-variable$4$weights/2$19$58","access-variable/weights(19, 58)",750,788997,1
+"/phylanx/access-variable$5$weights/2$20$27","access-variable/weights(20, 27)",0,0,1
+"/phylanx/access-variable$6$weights/2$20$36","access-variable/weights(20, 36)",750,832101,1
+"/phylanx/access-variable$7$transx/2$20$59","access-variable/transx(20, 59)",750,1065337,1
+"/phylanx/access-variable$8$pred/2$20$67","access-variable/pred(20, 67)",750,778825,1
+"/phylanx/access-variable$9$step/2$21$27","access-variable/step(21, 27)",0,0,1
+"/phylanx/block$0/0$1$1","block(1, 1)",1,40760,-1
+"/phylanx/block$1/1$1$1","block(1, 1)",1,4103,-1
+"/phylanx/block$2/2$1$1","block(1, 1)",1,2911,-1
+"/phylanx/block$3/2$9$9","block(9, 9)",1,280813656,-1
+"/phylanx/block$4/2$16$17","block(16, 17)",750,264714560,-1
+"/phylanx/constant$0/2$10$29","constant(10, 29)",1,111055,-1
+"/phylanx/constant$1/2$12$26","constant(12, 26)",1,67848,-1
+"/phylanx/cout$0/2$17$39","cout(17, 39)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,8410,-1
+"/phylanx/define-variable$1$read_y/1$5$12","define-variable/read_y(5, 12)",1,531,-1
+"/phylanx/define-variable$2$weights/2$10$20","define-variable/weights(10, 20)",1,163058,-1
+"/phylanx/define-variable$3$transx/2$11$20","define-variable/transx(11, 20)",1,99887,-1
+"/phylanx/define-variable$4$pred/2$12$20","define-variable/pred(12, 20)",1,92713,-1
+"/phylanx/define-variable$5$step/2$13$20","define-variable/step(13, 20)",1,5871,-1
+"/phylanx/define-variable$6$lra_explicit/2$8$12","define-variable/lra_explicit(8, 12)",1,300,-1
+"/phylanx/dot$0/2$19$51","dot(19, 51)",750,67598604,1
+"/phylanx/dot$1/2$20$55","dot(20, 55)",750,28983401,1
+"/phylanx/exp$0/2$19$46","exp(19, 46)",750,94319225,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,19665553,-1
+"/phylanx/file_read_csv$1/1$6$15","file_read_csv(6, 15)",1,3808634,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,19865043,1
+"/phylanx/function$1$read_y/1$5$12","function/read_y(5, 12)",1,3914730,1
+"/phylanx/function$2$lra_explicit/2$8$12","function/lra_explicit(8, 12)",1,280862335,1
+"/phylanx/if$0/2$17$21","if(17, 21)",750,9595603,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,19837139,-1
+"/phylanx/lambda$1/1$5$12","lambda(5, 12)",1,3895683,-1
+"/phylanx/lambda$2/2$8$12","lambda(8, 12)",1,280844368,-1
+"/phylanx/make_list$0/0$7$15","make_list(7, 15)",1,84035,-1
+"/phylanx/make_list$1/0$8$15","make_list(8, 15)",1,58095,-1
+"/phylanx/make_list$2/1$6$40","make_list(6, 40)",1,28222,-1
+"/phylanx/shape$0/2$10$43","shape(10, 43)",1,38038,-1
+"/phylanx/shape$1/2$12$40","shape(12, 40)",1,29554,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,19731606,-1
+"/phylanx/slice$1/1$6$9","slice(6, 9)",1,3870392,-1
+"/phylanx/store$0/2$19$21","store(19, 21)",750,128476353,1
+"/phylanx/store$1/2$20$21","store(20, 21)",750,65631457,1
+"/phylanx/store$2/2$21$21","store(21, 21)",750,39518846,1
+"/phylanx/transpose$0/2$11$28","transpose(11, 28)",1,75129,-1
+"/phylanx/variable$0$weights/2$10$20","variable/weights(10, 20)",1501,685611,1
+"/phylanx/variable$1$transx/2$11$20","variable/transx(11, 20)",750,662190,1
+"/phylanx/variable$2$pred/2$12$20","variable/pred(12, 20)",750,209177,1
+"/phylanx/variable$3$step/2$13$20","variable/step(13, 20)",1501,670149,1
+"/phylanx/while$0/2$14$13","while(14, 13)",1,280292036,-1
\ No newline at end of file
diff --git a/static/weekly-data/2019-01-31-lra-tree.txt b/static/weekly-data/2019-01-31-lra-tree.txt
new file mode 100644
index 0000000..fa46a62
--- /dev/null
+++ b/static/weekly-data/2019-01-31-lra-tree.txt
@@ -0,0 +1 @@
+((((((((/phylanx/access-argument$9$x/2$10$49) /phylanx/shape$0/2$10$43) /phylanx/constant$0/2$10$29) /phylanx/variable$0$weights/2$10$20) /phylanx/define-variable$2$weights/2$10$20,(((/phylanx/access-argument$10$x/2$11$38) /phylanx/transpose$0/2$11$28) /phylanx/variable$1$transx/2$11$20) /phylanx/define-variable$3$transx/2$11$20,((((/phylanx/access-argument$11$x/2$12$46) /phylanx/shape$1/2$12$40) /phylanx/constant$1/2$12$26) /phylanx/variable$2$pred/2$12$20) /phylanx/define-variable$4$pred/2$12$20,(/phylanx/variable$3$step/2$13$20) /phylanx/define-variable$5$step/2$13$20,((/phylanx/access-variable$0$step/2$15$17,/phylanx/access-argument$12$iterations/2$15$24) /phylanx/__lt$0/2$15$17,((/phylanx/access-argument$13$enable_output/2$17$24,(/phylanx/access-variable$1$step/2$17$54,/phylanx/access-variable$2$weights/2$17$66) /phylanx/cout$0/2$17$39) /phylanx/if$0/2$17$21,(/phylanx/access-variable$3$pred/2$19$27,(((((/phylanx/access-argument$14$x/2$19$55,/phylanx/access-variable$4$weights/2$19$58) /phylanx/dot$0/2$19$51) /phylanx/__minus$0/2$19$51) /phylanx/exp$0/2$19$46) /phylanx/__add$0/2$19$40) /phylanx/__div$0/2$19$33) /phylanx/store$0/2$19$21,(/phylanx/access-variable$5$weights/2$20$27,(/phylanx/access-variable$6$weights/2$20$36,(/phylanx/access-argument$15$alpha/2$20$47,(/phylanx/access-variable$7$transx/2$20$59,(/phylanx/access-variable$8$pred/2$20$67,/phylanx/access-argument$16$y/2$20$74) /phylanx/__sub$1/2$20$67) /phylanx/dot$1/2$20$55) /phylanx/__mul$0/2$20$47) /phylanx/__sub$0/2$20$36) /phylanx/store$1/2$20$21,(/phylanx/access-variable$9$step/2$21$27,(/phylanx/access-variable$10$step/2$21$33) /phylanx/__add$1/2$21$33) /phylanx/store$2/2$21$21) /phylanx/block$4/2$16$17) /phylanx/while$0/2$14$13,/phylanx/access-variable$11$weights/2$24$13) /phylanx/block$3/2$9$9) /phylanx/lambda$2/2$8$12) /phylanx/function$2$lra_explicit/2$8$12) lra;
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-07-als-performance.csv b/static/weekly-data/2019-02-07-als-performance.csv
new file mode 100644
index 0000000..c1d3f0b
--- /dev/null
+++ b/static/weekly-data/2019-02-07-als-performance.csv
@@ -0,0 +1,269 @@
+"/phylanx/__add$0/2$44$32","add(44, 32)",3,636270,1
+"/phylanx/__add$1/2$45$32","add(45, 32)",3,374789,1
+"/phylanx/__add$10/2$71$30","add(71, 30)",3,51934,1
+"/phylanx/__add$2/2$52$38","add(52, 38)",30,3629250,1
+"/phylanx/__add$3/2$53$60","add(53, 60)",30,1385527,1
+"/phylanx/__add$4/2$54$52","add(54, 52)",30,437066,1
+"/phylanx/__add$5/2$55$38","add(55, 38)",30,419743,1
+"/phylanx/__add$6/2$64$38","add(64, 38)",300,18507392,1
+"/phylanx/__add$7/2$65$60","add(65, 60)",300,4580895,1
+"/phylanx/__add$8/2$66$52","add(66, 52)",300,3086352,1
+"/phylanx/__add$9/2$67$38","add(67, 38)",300,3357497,1
+"/phylanx/__lt$0/2$35$19","lt(35, 19)",4,215819,1
+"/phylanx/__lt$1/2$47$27","lt(47, 27)",33,718980,1
+"/phylanx/__lt$2/2$59$27","lt(59, 27)",303,5076543,1
+"/phylanx/__mul$0/2$10$26","mul(10, 26)",1,203637,-1
+"/phylanx/__mul$1/2$44$55","mul(44, 55)",3,92665,1
+"/phylanx/__mul$2/2$45$55","mul(45, 55)",3,92199,1
+"/phylanx/__ne$0/2$51$40","ne(51, 40)",30,630430,1
+"/phylanx/__ne$1/2$63$40","ne(63, 40)",300,4069597,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,929,1
+"/phylanx/access-argument$1$row_start/0$6$50","access-argument/row_start(6, 50)",1,2128,1
+"/phylanx/access-argument$10$num_factors/2$22$51","access-argument/num_factors(22, 51)",1,837,1
+"/phylanx/access-argument$11$num_factors/2$23$34","access-argument/num_factors(23, 34)",1,5693,1
+"/phylanx/access-argument$12$num_factors/2$30$49","access-argument/num_factors(30, 49)",1,1240,1
+"/phylanx/access-argument$13$num_factors/2$30$62","access-argument/num_factors(30, 62)",1,310,1
+"/phylanx/access-argument$14$num_factors/2$31$49","access-argument/num_factors(31, 49)",1,950,1
+"/phylanx/access-argument$15$num_factors/2$31$62","access-argument/num_factors(31, 62)",1,397,1
+"/phylanx/access-argument$16$num_factors/2$32$47","access-argument/num_factors(32, 47)",1,863,1
+"/phylanx/access-argument$17$num_factors/2$32$60","access-argument/num_factors(32, 60)",1,353,1
+"/phylanx/access-argument$18$num_factors/2$33$47","access-argument/num_factors(33, 47)",1,940,1
+"/phylanx/access-argument$19$iterations/2$35$23","access-argument/iterations(35, 23)",4,3161,1
+"/phylanx/access-argument$2$row_stop/0$6$62","access-argument/row_stop(6, 62)",1,183,1
+"/phylanx/access-argument$20$enable_output/2$37$24","access-argument/enable_output(37, 24)",3,2711,1
+"/phylanx/access-argument$21$regularization/2$44$55","access-argument/regularization(44, 55)",3,1827,1
+"/phylanx/access-argument$22$regularization/2$45$55","access-argument/regularization(45, 55)",3,2697,1
+"/phylanx/access-argument$3$col_start/0$7$25","access-argument/col_start(7, 25)",1,303,1
+"/phylanx/access-argument$4$col_stop/0$7$37","access-argument/col_stop(7, 37)",1,112,1
+"/phylanx/access-argument$5$ratings/2$8$37","access-argument/ratings(8, 37)",1,1637,1
+"/phylanx/access-argument$6$ratings/2$9$37","access-argument/ratings(9, 37)",1,1187,1
+"/phylanx/access-argument$7$alpha/2$10$26","access-argument/alpha(10, 26)",1,773,1
+"/phylanx/access-argument$8$ratings/2$10$34","access-argument/ratings(10, 34)",1,536,1
+"/phylanx/access-argument$9$num_factors/2$21$51","access-argument/num_factors(21, 51)",1,1207,1
+"/phylanx/access-function$0$read_x/1$9$5","access-function/read_x(9, 5)",1,632,1
+"/phylanx/access-function$1$als_explicit/3$77$5","access-function/als_explicit(77, 5)",1,196,1
+"/phylanx/access-variable$0$num_items/2$12$52","access-variable/num_items(12, 52)",1,8780,1
+"/phylanx/access-variable$1$num_users/2$13$52","access-variable/num_users(13, 52)",1,3466,1
+"/phylanx/access-variable$10$num_items/2$24$34","access-variable/num_items(24, 34)",1,8530,1
+"/phylanx/access-variable$11$num_users/2$25$34","access-variable/num_users(25, 34)",1,8146,1
+"/phylanx/access-variable$12$k/2$35$19","access-variable/k(35, 19)",4,12159,1
+"/phylanx/access-variable$13$k/2$39$56","access-variable/k(39, 56)",0,0,1
+"/phylanx/access-variable$14$u/2$39$59","access-variable/u(39, 59)",0,0,1
+"/phylanx/access-variable$15$X/2$40$48","access-variable/X(40, 48)",0,0,1
+"/phylanx/access-variable$16$Y/2$41$48","access-variable/Y(41, 48)",0,0,1
+"/phylanx/access-variable$17$YtY/2$44$27","access-variable/YtY(44, 27)",0,0,1
+"/phylanx/access-variable$18$Y/2$44$46","access-variable/Y(44, 46)",3,7016,1
+"/phylanx/access-variable$19$Y/2$44$50","access-variable/Y(44, 50)",3,6531,1
+"/phylanx/access-variable$2$num_items/2$15$49","access-variable/num_items(15, 49)",1,3830,1
+"/phylanx/access-variable$20$I_f/2$44$72","access-variable/I_f(44, 72)",3,7278,1
+"/phylanx/access-variable$21$XtX/2$45$27","access-variable/XtX(45, 27)",0,0,1
+"/phylanx/access-variable$22$X/2$45$46","access-variable/X(45, 46)",3,6892,1
+"/phylanx/access-variable$23$X/2$45$50","access-variable/X(45, 50)",3,6024,1
+"/phylanx/access-variable$24$I_f/2$45$72","access-variable/I_f(45, 72)",3,5254,1
+"/phylanx/access-variable$25$u/2$47$27","access-variable/u(47, 27)",33,54271,1
+"/phylanx/access-variable$26$num_users/2$47$31","access-variable/num_users(47, 31)",33,41750,1
+"/phylanx/access-variable$27$conf_u/2$49$35","access-variable/conf_u(49, 35)",0,0,1
+"/phylanx/access-variable$28$conf/2$49$53","access-variable/conf(49, 53)",30,50760,1
+"/phylanx/access-variable$29$u/2$49$59","access-variable/u(49, 59)",30,46385,1
+"/phylanx/access-variable$3$num_items/2$15$60","access-variable/num_items(15, 60)",1,2026,1
+"/phylanx/access-variable$30$c_u/2$50$35","access-variable/c_u(50, 35)",0,0,1
+"/phylanx/access-variable$31$conf_u/2$50$45","access-variable/conf_u(50, 45)",30,53398,1
+"/phylanx/access-variable$32$p_u/2$51$35","access-variable/p_u(51, 35)",0,0,1
+"/phylanx/access-variable$33$conf_u/2$51$45","access-variable/conf_u(51, 45)",30,64569,1
+"/phylanx/access-variable$34$A/2$52$35","access-variable/A(52, 35)",0,0,1
+"/phylanx/access-variable$35$Y/2$52$56","access-variable/Y(52, 56)",30,50994,1
+"/phylanx/access-variable$36$c_u/2$52$60","access-variable/c_u(52, 60)",30,45996,1
+"/phylanx/access-variable$37$Y/2$52$66","access-variable/Y(52, 66)",30,42859,1
+"/phylanx/access-variable$38$YtY/2$52$70","access-variable/YtY(52, 70)",30,39657,1
+"/phylanx/access-variable$39$b/2$53$35","access-variable/b(53, 35)",0,0,1
+"/phylanx/access-variable$4$num_users/2$16$49","access-variable/num_users(16, 49)",1,10094,1
+"/phylanx/access-variable$40$Y/2$53$56","access-variable/Y(53, 56)",30,44760,1
+"/phylanx/access-variable$41$c_u/2$53$60","access-variable/c_u(53, 60)",30,44470,1
+"/phylanx/access-variable$42$I_i/2$53$66","access-variable/I_i(53, 66)",30,35053,1
+"/phylanx/access-variable$43$p_u/2$53$83","access-variable/p_u(53, 83)",30,46816,1
+"/phylanx/access-variable$44$u/2$54$49","access-variable/u(54, 49)",30,68109,1
+"/phylanx/access-variable$45$u/2$54$52","access-variable/u(54, 52)",30,48274,1
+"/phylanx/access-variable$46$X/2$54$41","access-variable/X(54, 41)",0,0,1
+"/phylanx/access-variable$47$A/2$54$80","access-variable/A(54, 80)",30,50537,1
+"/phylanx/access-variable$48$b/2$54$84","access-variable/b(54, 84)",30,41285,1
+"/phylanx/access-variable$49$u/2$55$35","access-variable/u(55, 35)",0,0,1
+"/phylanx/access-variable$5$num_users/2$16$60","access-variable/num_users(16, 60)",1,2140,1
+"/phylanx/access-variable$50$u/2$55$38","access-variable/u(55, 38)",30,47078,1
+"/phylanx/access-variable$51$u/2$58$27","access-variable/u(58, 27)",0,0,1
+"/phylanx/access-variable$52$i/2$59$27","access-variable/i(59, 27)",303,333273,1
+"/phylanx/access-variable$53$num_items/2$59$31","access-variable/num_items(59, 31)",303,302735,1
+"/phylanx/access-variable$54$conf_i/2$61$35","access-variable/conf_i(61, 35)",0,0,1
+"/phylanx/access-variable$55$conf/2$61$56","access-variable/conf(61, 56)",300,392328,1
+"/phylanx/access-variable$56$i/2$61$62","access-variable/i(61, 62)",300,381077,1
+"/phylanx/access-variable$57$c_i/2$62$35","access-variable/c_i(62, 35)",0,0,1
+"/phylanx/access-variable$58$conf_i/2$62$45","access-variable/conf_i(62, 45)",300,415580,1
+"/phylanx/access-variable$59$p_i/2$63$35","access-variable/p_i(63, 35)",0,0,1
+"/phylanx/access-variable$6$num_items/2$17$49","access-variable/num_items(17, 49)",1,3617,1
+"/phylanx/access-variable$60$conf_i/2$63$45","access-variable/conf_i(63, 45)",300,479160,1
+"/phylanx/access-variable$61$A/2$64$35","access-variable/A(64, 35)",0,0,1
+"/phylanx/access-variable$62$X/2$64$56","access-variable/X(64, 56)",300,386611,1
+"/phylanx/access-variable$63$c_i/2$64$59","access-variable/c_i(64, 59)",300,310641,1
+"/phylanx/access-variable$64$X/2$64$65","access-variable/X(64, 65)",300,293656,1
+"/phylanx/access-variable$65$XtX/2$64$70","access-variable/XtX(64, 70)",300,272514,1
+"/phylanx/access-variable$66$b/2$65$35","access-variable/b(65, 35)",0,0,1
+"/phylanx/access-variable$67$X/2$65$56","access-variable/X(65, 56)",300,341269,1
+"/phylanx/access-variable$68$c_i/2$65$60","access-variable/c_i(65, 60)",300,293390,1
+"/phylanx/access-variable$69$I_u/2$65$66","access-variable/I_u(65, 66)",300,257978,1
+"/phylanx/access-variable$7$num_users/2$18$49","access-variable/num_users(18, 49)",1,4603,1
+"/phylanx/access-variable$70$p_i/2$65$83","access-variable/p_i(65, 83)",300,336186,1
+"/phylanx/access-variable$71$i/2$66$49","access-variable/i(66, 49)",300,486082,1
+"/phylanx/access-variable$72$i/2$66$52","access-variable/i(66, 52)",300,262828,1
+"/phylanx/access-variable$73$Y/2$66$41","access-variable/Y(66, 41)",0,0,1
+"/phylanx/access-variable$74$A/2$66$80","access-variable/A(66, 80)",300,344708,1
+"/phylanx/access-variable$75$b/2$66$84","access-variable/b(66, 84)",300,332385,1
+"/phylanx/access-variable$76$i/2$67$35","access-variable/i(67, 35)",0,0,1
+"/phylanx/access-variable$77$i/2$67$38","access-variable/i(67, 38)",300,388146,1
+"/phylanx/access-variable$78$i/2$70$27","access-variable/i(70, 27)",0,0,1
+"/phylanx/access-variable$79$k/2$71$27","access-variable/k(71, 27)",0,0,1
+"/phylanx/access-variable$8$num_users/2$21$40","access-variable/num_users(21, 40)",1,4180,1
+"/phylanx/access-variable$80$k/2$71$30","access-variable/k(71, 30)",3,6147,1
+"/phylanx/access-variable$81$X/2$74$18","access-variable/X(74, 18)",1,2146,1
+"/phylanx/access-variable$82$Y/2$74$21","access-variable/Y(74, 21)",1,1168,1
+"/phylanx/access-variable$9$num_items/2$22$40","access-variable/num_items(22, 40)",1,3780,1
+"/phylanx/block$0/2$7$9","block(7, 9)",1,192762516,-1
+"/phylanx/block$1/2$36$17","block(36, 17)",3,246115703,0
+"/phylanx/block$2/2$38$29","block(38, 29)",0,0,-1
+"/phylanx/block$3/2$48$25","block(48, 25)",30,24105884,0
+"/phylanx/block$4/2$60$25","block(60, 25)",300,145286448,-1
+"/phylanx/constant$0/2$12$28","constant(12, 28)",1,183860,-1
+"/phylanx/constant$1/2$13$28","constant(13, 28)",1,83623,-1
+"/phylanx/constant$2/2$15$25","constant(15, 25)",1,132627,-1
+"/phylanx/constant$3/2$16$25","constant(16, 25)",1,91620,-1
+"/phylanx/constant$4/2$17$25","constant(17, 25)",1,86823,-1
+"/phylanx/constant$5/2$18$25","constant(18, 25)",1,73846,-1
+"/phylanx/constant$6/2$30$25","constant(30, 25)",1,94853,-1
+"/phylanx/constant$7/2$31$25","constant(31, 25)",1,85836,-1
+"/phylanx/constant$8/2$32$23","constant(32, 23)",1,82407,-1
+"/phylanx/constant$9/2$33$23","constant(33, 23)",1,73947,-1
+"/phylanx/cout$0/2$39$37","cout(39, 37)",0,0,-1
+"/phylanx/cout$1/2$40$37","cout(40, 37)",0,0,-1
+"/phylanx/cout$2/2$41$37","cout(41, 37)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,10320,-1
+"/phylanx/define-variable$1$num_users/2$8$20","define-variable/num_users(8, 20)",1,194868,-1
+"/phylanx/define-variable$10$X/2$21$20","define-variable/X(21, 20)",1,281900,-1
+"/phylanx/define-variable$11$Y/2$22$20","define-variable/Y(22, 20)",1,275717,-1
+"/phylanx/define-variable$12$I_f/2$23$20","define-variable/I_f(23, 20)",1,105120,-1
+"/phylanx/define-variable$13$I_i/2$24$20","define-variable/I_i(24, 20)",1,106540,-1
+"/phylanx/define-variable$14$I_u/2$25$20","define-variable/I_u(25, 20)",1,64697,-1
+"/phylanx/define-variable$15$k/2$26$20","define-variable/k(26, 20)",1,9826,-1
+"/phylanx/define-variable$16$i/2$27$20","define-variable/i(27, 20)",1,5437,-1
+"/phylanx/define-variable$17$u/2$28$20","define-variable/u(28, 20)",1,5434,-1
+"/phylanx/define-variable$18$XtX/2$30$20","define-variable/XtX(30, 20)",1,134663,-1
+"/phylanx/define-variable$19$YtY/2$31$20","define-variable/YtY(31, 20)",1,114997,-1
+"/phylanx/define-variable$2$num_items/2$9$20","define-variable/num_items(9, 20)",1,91520,-1
+"/phylanx/define-variable$20$A/2$32$20","define-variable/A(32, 20)",1,112450,-1
+"/phylanx/define-variable$21$b/2$33$20","define-variable/b(33, 20)",1,107330,-1
+"/phylanx/define-variable$22$als_explicit/2$5$12","define-variable/als_explicit(5, 12)",1,392,-1
+"/phylanx/define-variable$3$conf/2$10$20","define-variable/conf(10, 20)",1,268340,-1
+"/phylanx/define-variable$4$conf_u/2$12$20","define-variable/conf_u(12, 20)",1,224583,-1
+"/phylanx/define-variable$5$conf_i/2$13$20","define-variable/conf_i(13, 20)",1,123857,-1
+"/phylanx/define-variable$6$c_u/2$15$20","define-variable/c_u(15, 20)",1,163694,-1
+"/phylanx/define-variable$7$c_i/2$16$20","define-variable/c_i(16, 20)",1,121677,-1
+"/phylanx/define-variable$8$p_u/2$17$20","define-variable/p_u(17, 20)",1,123303,-1
+"/phylanx/define-variable$9$p_i/2$18$20","define-variable/p_i(18, 20)",1,103670,-1
+"/phylanx/diag$0/2$50$40","diag(50, 40)",30,736844,1
+"/phylanx/diag$1/2$62$40","diag(62, 40)",300,3288042,1
+"/phylanx/dot$0/2$44$32","dot(44, 32)",3,493079,1
+"/phylanx/dot$1/2$45$32","dot(45, 32)",3,254069,1
+"/phylanx/dot$10/2$65$42","dot(65, 42)",300,11774860,1
+"/phylanx/dot$11/2$66$68","dot(66, 68)",300,10948372,1
+"/phylanx/dot$2/2$52$38","dot(52, 38)",30,2989109,1
+"/phylanx/dot$3/2$52$42","dot(52, 42)",30,2266203,1
+"/phylanx/dot$4/2$53$38","dot(53, 38)",30,4188506,1
+"/phylanx/dot$5/2$53$42","dot(53, 42)",30,3392852,1
+"/phylanx/dot$6/2$54$68","dot(54, 68)",30,1898082,1
+"/phylanx/dot$7/2$64$38","dot(64, 38)",300,13447047,1
+"/phylanx/dot$8/2$64$42","dot(64, 42)",300,8385357,1
+"/phylanx/dot$9/2$65$38","dot(65, 38)",300,17907544,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,227591867,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,227762851,1
+"/phylanx/function$1$als_explicit/2$5$12","function/als_explicit(5, 12)",1,192863199,1
+"/phylanx/identity$0/2$23$25","identity(23, 25)",1,44357,-1
+"/phylanx/identity$1/2$24$25","identity(24, 25)",1,67050,-1
+"/phylanx/identity$2/2$25$25","identity(25, 25)",1,27867,-1
+"/phylanx/if$0/2$37$21","if(37, 21)",3,75928,1
+"/phylanx/inverse$0/2$54$72","inverse(54, 72)",30,1051426,1
+"/phylanx/inverse$1/2$66$72","inverse(66, 72)",300,6294184,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,227727929,-1
+"/phylanx/lambda$1/2$5$12","lambda(5, 12)",1,192827666,-1
+"/phylanx/list$0/2$54$44","list(54, 44)",30,1214513,1
+"/phylanx/list$1/2$66$44","list(66, 44)",300,9126613,1
+"/phylanx/list$2/2$74$13","list(74, 13)",1,19798,-1
+"/phylanx/make_list$0/0$6$40","make_list(6, 40)",1,59170,-1
+"/phylanx/make_list$1/0$7$15","make_list(7, 15)",1,11648,-1
+"/phylanx/make_list$10/2$30$39","make_list(30, 39)",1,34274,-1
+"/phylanx/make_list$11/2$31$39","make_list(31, 39)",1,28560,-1
+"/phylanx/make_list$12/2$32$37","make_list(32, 37)",1,27264,-1
+"/phylanx/make_list$13/2$33$37","make_list(33, 37)",1,18860,-1
+"/phylanx/make_list$2/2$12$42","make_list(12, 42)",1,39550,-1
+"/phylanx/make_list$3/2$13$42","make_list(13, 42)",1,24217,-1
+"/phylanx/make_list$4/2$15$39","make_list(15, 39)",1,40720,-1
+"/phylanx/make_list$5/2$16$39","make_list(16, 39)",1,45580,-1
+"/phylanx/make_list$6/2$17$39","make_list(17, 39)",1,27323,-1
+"/phylanx/make_list$7/2$18$39","make_list(18, 39)",1,35506,-1
+"/phylanx/make_list$8/2$21$30","make_list(21, 30)",1,39184,-1
+"/phylanx/make_list$9/2$22$30","make_list(22, 30)",1,32436,-1
+"/phylanx/random$0/2$21$23","random(21, 23)",1,247570,-1
+"/phylanx/random$1/2$22$23","random(22, 23)",1,243460,-1
+"/phylanx/set_seed$0/2$20$13","set_seed(20, 13)",1,251820,-1
+"/phylanx/shape$0/2$8$31","shape(8, 31)",1,72171,-1
+"/phylanx/shape$1/2$9$31","shape(9, 31)",1,28823,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,227659309,-1
+"/phylanx/slice_column$0/2$61$43","slice_column(61, 43)",300,7104584,1
+"/phylanx/slice_row$0/2$49$43","slice_row(49, 43)",30,881394,1
+"/phylanx/store$0/2$44$21","store(44, 21)",3,718396,1
+"/phylanx/store$1/2$45$21","store(45, 21)",3,470405,1
+"/phylanx/store$10/2$61$29","store(61, 29)",300,15998021,1
+"/phylanx/store$11/2$62$29","store(62, 29)",300,9449073,1
+"/phylanx/store$12/2$63$29","store(63, 29)",300,10174227,1
+"/phylanx/store$13/2$64$29","store(64, 29)",300,25371416,1
+"/phylanx/store$14/2$65$29","store(65, 29)",300,24610978,1
+"/phylanx/store$15/2$66$29","store(66, 29)",300,32300207,1
+"/phylanx/store$16/2$67$29","store(67, 29)",300,11038544,1
+"/phylanx/store$17/2$70$21","store(70, 21)",3,144226,1
+"/phylanx/store$18/2$71$21","store(71, 21)",3,58008279,0
+"/phylanx/store$2/2$49$29","store(49, 29)",30,1947280,1
+"/phylanx/store$3/2$50$29","store(50, 29)",30,1592056,1
+"/phylanx/store$4/2$51$29","store(51, 29)",30,1455978,1
+"/phylanx/store$5/2$52$29","store(52, 29)",30,4429607,1
+"/phylanx/store$6/2$53$29","store(53, 29)",30,4980211,1
+"/phylanx/store$7/2$54$29","store(54, 29)",30,4468810,1
+"/phylanx/store$8/2$55$29","store(55, 29)",30,2768021,1
+"/phylanx/store$9/2$58$21","store(58, 21)",3,91562,1
+"/phylanx/transpose$0/2$44$36","transpose(44, 36)",3,97485,1
+"/phylanx/transpose$1/2$45$36","transpose(45, 36)",3,52554,1
+"/phylanx/transpose$2/2$52$46","transpose(52, 46)",30,509569,1
+"/phylanx/transpose$3/2$53$46","transpose(53, 46)",30,374418,1
+"/phylanx/transpose$4/2$53$73","transpose(53, 73)",30,307280,1
+"/phylanx/transpose$5/2$64$46","transpose(64, 46)",300,3630184,1
+"/phylanx/transpose$6/2$65$46","transpose(65, 46)",300,2744791,1
+"/phylanx/transpose$7/2$65$73","transpose(65, 73)",300,2233285,1
+"/phylanx/variable$0$num_users/2$8$20","variable/num_users(8, 20)",39,17302,1
+"/phylanx/variable$1$num_items/2$9$20","variable/num_items(9, 20)",309,79485,1
+"/phylanx/variable$10$Y/2$22$20","variable/Y(22, 20)",97,61790,1
+"/phylanx/variable$11$I_f/2$23$20","variable/I_f(23, 20)",6,4560,1
+"/phylanx/variable$12$I_i/2$24$20","variable/I_i(24, 20)",30,11003,1
+"/phylanx/variable$13$I_u/2$25$20","variable/I_u(25, 20)",300,77449,1
+"/phylanx/variable$14$k/2$26$20","variable/k(26, 20)",7,5160,1
+"/phylanx/variable$15$i/2$27$20","variable/i(27, 20)",1503,611945,1
+"/phylanx/variable$16$u/2$28$20","variable/u(28, 20)",153,89560,1
+"/phylanx/variable$17$XtX/2$30$20","variable/XtX(30, 20)",300,83963,1
+"/phylanx/variable$18$YtY/2$31$20","variable/YtY(31, 20)",30,12313,1
+"/phylanx/variable$19$A/2$32$20","variable/A(32, 20)",330,143438,1
+"/phylanx/variable$2$conf/2$10$20","variable/conf(10, 20)",330,176409,1
+"/phylanx/variable$20$b/2$33$20","variable/b(33, 20)",330,135743,1
+"/phylanx/variable$3$conf_u/2$12$20","variable/conf_u(12, 20)",60,40080,1
+"/phylanx/variable$4$conf_i/2$13$20","variable/conf_i(13, 20)",600,299104,1
+"/phylanx/variable$5$c_u/2$15$20","variable/c_u(15, 20)",60,29098,1
+"/phylanx/variable$6$c_i/2$16$20","variable/c_i(16, 20)",600,206142,1
+"/phylanx/variable$7$p_u/2$17$20","variable/p_u(17, 20)",30,18739,1
+"/phylanx/variable$8$p_i/2$18$20","variable/p_i(18, 20)",300,142220,1
+"/phylanx/variable$9$X/2$21$20","variable/X(21, 20)",907,387227,1
+"/phylanx/while$0/2$35$13","while(35, 13)",1,188710367,-1
+"/phylanx/while$1/2$47$21","while(47, 21)",3,24596140,0
+"/phylanx/while$2/2$59$21","while(59, 21)",3,161637783,0
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-07-als-tree.txt b/static/weekly-data/2019-02-07-als-tree.txt
new file mode 100644
index 0000000..fa3fbd7
--- /dev/null
+++ b/static/weekly-data/2019-02-07-als-tree.txt
@@ -0,0 +1 @@
+(((((((/phylanx/access-argument$5$ratings/2$8$37) /phylanx/shape$0/2$8$31) /phylanx/variable$0$num_users/2$8$20) /phylanx/define-variable$1$num_users/2$8$20,(((/phylanx/access-argument$6$ratings/2$9$37) /phylanx/shape$1/2$9$31) /phylanx/variable$1$num_items/2$9$20) /phylanx/define-variable$2$num_items/2$9$20,(((/phylanx/access-argument$7$alpha/2$10$26,/phylanx/access-argument$8$ratings/2$10$34) /phylanx/__mul$0/2$10$26) /phylanx/variable$2$conf/2$10$20) /phylanx/define-variable$3$conf/2$10$20,((((/phylanx/access-variable$0$num_items/2$12$52) /phylanx/make_list$2/2$12$42) /phylanx/constant$0/2$12$28) /phylanx/variable$3$conf_u/2$12$20) /phylanx/define-variable$4$conf_u/2$12$20,((((/phylanx/access-variable$1$num_users/2$13$52) /phylanx/make_list$3/2$13$42) /phylanx/constant$1/2$13$28) /phylanx/variable$4$conf_i/2$13$20) /phylanx/define-variable$5$conf_i/2$13$20,((((/phylanx/access-variable$2$num_items/2$15$49,/phylanx/access-variable$3$num_items/2$15$60) /phylanx/make_list$4/2$15$39) /phylanx/constant$2/2$15$25) /phylanx/variable$5$c_u/2$15$20) /phylanx/define-variable$6$c_u/2$15$20,((((/phylanx/access-variable$4$num_users/2$16$49,/phylanx/access-variable$5$num_users/2$16$60) /phylanx/make_list$5/2$16$39) /phylanx/constant$3/2$16$25) /phylanx/variable$6$c_i/2$16$20) /phylanx/define-variable$7$c_i/2$16$20,((((/phylanx/access-variable$6$num_items/2$17$49) /phylanx/make_list$6/2$17$39) /phylanx/constant$4/2$17$25) /phylanx/variable$7$p_u/2$17$20) /phylanx/define-variable$8$p_u/2$17$20,((((/phylanx/access-variable$7$num_users/2$18$49) /phylanx/make_list$7/2$18$39) /phylanx/constant$5/2$18$25) /phylanx/variable$8$p_i/2$18$20) /phylanx/define-variable$9$p_i/2$18$20,/phylanx/set_seed$0/2$20$13,((((/phylanx/access-variable$8$num_users/2$21$40,/phylanx/access-argument$9$num_factors/2$21$51) /phylanx/make_list$8/2$21$30) /phylanx/random$0/2$21$23) /phylanx/variable$9$X/2$21$20) /phylanx/define-variable$10$X/2$21$20,((((/phylanx/access-variable$9$num_items/2$22$40,/phylanx/access-argument$10$num_factors/2$22$51) /phylanx/make_list$9/2$22$30) /phylanx/random$1/2$22$23) /phylanx/variable$10$Y/2$22$20) /phylanx/define-variable$11$Y/2$22$20,(((/phylanx/access-argument$11$num_factors/2$23$34) /phylanx/identity$0/2$23$25) /phylanx/variable$11$I_f/2$23$20) /phylanx/define-variable$12$I_f/2$23$20,(((/phylanx/access-variable$10$num_items/2$24$34) /phylanx/identity$1/2$24$25) /phylanx/variable$12$I_i/2$24$20) /phylanx/define-variable$13$I_i/2$24$20,(((/phylanx/access-variable$11$num_users/2$25$34) /phylanx/identity$2/2$25$25) /phylanx/variable$13$I_u/2$25$20) /phylanx/define-variable$14$I_u/2$25$20,(/phylanx/variable$14$k/2$26$20) /phylanx/define-variable$15$k/2$26$20,(/phylanx/variable$15$i/2$27$20) /phylanx/define-variable$16$i/2$27$20,(/phylanx/variable$16$u/2$28$20) /phylanx/define-variable$17$u/2$28$20,((((/phylanx/access-argument$12$num_factors/2$30$49,/phylanx/access-argument$13$num_factors/2$30$62) /phylanx/make_list$10/2$30$39) /phylanx/constant$6/2$30$25) /phylanx/variable$17$XtX/2$30$20) /phylanx/define-variable$18$XtX/2$30$20,((((/phylanx/access-argument$14$num_factors/2$31$49,/phylanx/access-argument$15$num_factors/2$31$62) /phylanx/make_list$11/2$31$39) /phylanx/constant$7/2$31$25) /phylanx/variable$18$YtY/2$31$20) /phylanx/define-variable$19$YtY/2$31$20,((((/phylanx/access-argument$16$num_factors/2$32$47,/phylanx/access-argument$17$num_factors/2$32$60) /phylanx/make_list$12/2$32$37) /phylanx/constant$8/2$32$23) /phylanx/variable$19$A/2$32$20) /phylanx/define-variable$20$A/2$32$20,((((/phylanx/access-argument$18$num_factors/2$33$47) /phylanx/make_list$13/2$33$37) /phylanx/constant$9/2$33$23) /phylanx/variable$20$b/2$33$20) /phylanx/define-variable$21$b/2$33$20,((/phylanx/access-variable$12$k/2$35$19,/phylanx/access-argument$19$iterations/2$35$23) /phylanx/__lt$0/2$35$19,((/phylanx/access-argument$20$enable_output/2$37$24,((/phylanx/access-variable$13$k/2$39$56,/phylanx/access-variable$14$u/2$39$59) /phylanx/cout$0/2$39$37,(/phylanx/access-variable$15$X/2$40$48) /phylanx/cout$1/2$40$37,(/phylanx/access-variable$16$Y/2$41$48) /phylanx/cout$2/2$41$37) /phylanx/block$2/2$38$29) /phylanx/if$0/2$37$21,(/phylanx/access-variable$17$YtY/2$44$27,(((/phylanx/access-variable$18$Y/2$44$46) /phylanx/transpose$0/2$44$36,/phylanx/access-variable$19$Y/2$44$50) /phylanx/dot$0/2$44$32,(/phylanx/access-argument$21$regularization/2$44$55,/phylanx/access-variable$20$I_f/2$44$72) /phylanx/__mul$1/2$44$55) /phylanx/__add$0/2$44$32) /phylanx/store$0/2$44$21,(/phylanx/access-variable$21$XtX/2$45$27,(((/phylanx/access-variable$22$X/2$45$46) /phylanx/transpose$1/2$45$36,/phylanx/access-variable$23$X/2$45$50) /phylanx/dot$1/2$45$32,(/phylanx/access-argument$22$regularization/2$45$55,/phylanx/access-variable$24$I_f/2$45$72) /phylanx/__mul$2/2$45$55) /phylanx/__add$1/2$45$32) /phylanx/store$1/2$45$21,((/phylanx/access-variable$25$u/2$47$27,/phylanx/access-variable$26$num_users/2$47$31) /phylanx/__lt$1/2$47$27,((/phylanx/access-variable$27$conf_u/2$49$35,(/phylanx/access-variable$28$conf/2$49$53,/phylanx/access-variable$29$u/2$49$59) /phylanx/slice_row$0/2$49$43) /phylanx/store$2/2$49$29,(/phylanx/access-variable$30$c_u/2$50$35,(/phylanx/access-variable$31$conf_u/2$50$45) /phylanx/diag$0/2$50$40) /phylanx/store$3/2$50$29,(/phylanx/access-variable$32$p_u/2$51$35,(/phylanx/access-variable$33$conf_u/2$51$45) /phylanx/__ne$0/2$51$40) /phylanx/store$4/2$51$29,(/phylanx/access-variable$34$A/2$52$35,((((/phylanx/access-variable$35$Y/2$52$56) /phylanx/transpose$2/2$52$46,/phylanx/access-variable$36$c_u/2$52$60) /phylanx/dot$3/2$52$42,/phylanx/access-variable$37$Y/2$52$66) /phylanx/dot$2/2$52$38,/phylanx/access-variable$38$YtY/2$52$70) /phylanx/__add$2/2$52$38) /phylanx/store$5/2$52$29,(/phylanx/access-variable$39$b/2$53$35,(((/phylanx/access-variable$40$Y/2$53$56) /phylanx/transpose$3/2$53$46,(/phylanx/access-variable$41$c_u/2$53$60,/phylanx/access-variable$42$I_i/2$53$66) /phylanx/__add$3/2$53$60) /phylanx/dot$5/2$53$42,(/phylanx/access-variable$43$p_u/2$53$83) /phylanx/transpose$4/2$53$73) /phylanx/dot$4/2$53$38) /phylanx/store$6/2$53$29,(/phylanx/access-variable$46$X/2$54$41,((/phylanx/access-variable$47$A/2$54$80) /phylanx/inverse$0/2$54$72,/phylanx/access-variable$48$b/2$54$84) /phylanx/dot$6/2$54$68) /phylanx/store$7/2$54$29,(/phylanx/access-variable$49$u/2$55$35,(/phylanx/access-variable$50$u/2$55$38) /phylanx/__add$5/2$55$38) /phylanx/store$8/2$55$29) /phylanx/block$3/2$48$25) /phylanx/while$1/2$47$21,(/phylanx/access-variable$51$u/2$58$27) /phylanx/store$9/2$58$21,((/phylanx/access-variable$52$i/2$59$27,/phylanx/access-variable$53$num_items/2$59$31) /phylanx/__lt$2/2$59$27,((/phylanx/access-variable$54$conf_i/2$61$35,(/phylanx/access-variable$55$conf/2$61$56,/phylanx/access-variable$56$i/2$61$62) /phylanx/slice_column$0/2$61$43) /phylanx/store$10/2$61$29,(/phylanx/access-variable$57$c_i/2$62$35,(/phylanx/access-variable$58$conf_i/2$62$45) /phylanx/diag$1/2$62$40) /phylanx/store$11/2$62$29,(/phylanx/access-variable$59$p_i/2$63$35,(/phylanx/access-variable$60$conf_i/2$63$45) /phylanx/__ne$1/2$63$40) /phylanx/store$12/2$63$29,(/phylanx/access-variable$61$A/2$64$35,((((/phylanx/access-variable$62$X/2$64$56) /phylanx/transpose$5/2$64$46,/phylanx/access-variable$63$c_i/2$64$59) /phylanx/dot$8/2$64$42,/phylanx/access-variable$64$X/2$64$65) /phylanx/dot$7/2$64$38,/phylanx/access-variable$65$XtX/2$64$70) /phylanx/__add$6/2$64$38) /phylanx/store$13/2$64$29,(/phylanx/access-variable$66$b/2$65$35,(((/phylanx/access-variable$67$X/2$65$56) /phylanx/transpose$6/2$65$46,(/phylanx/access-variable$68$c_i/2$65$60,/phylanx/access-variable$69$I_u/2$65$66) /phylanx/__add$7/2$65$60) /phylanx/dot$10/2$65$42,(/phylanx/access-variable$70$p_i/2$65$83) /phylanx/transpose$7/2$65$73) /phylanx/dot$9/2$65$38) /phylanx/store$14/2$65$29,(/phylanx/access-variable$73$Y/2$66$41,((/phylanx/access-variable$74$A/2$66$80) /phylanx/inverse$1/2$66$72,/phylanx/access-variable$75$b/2$66$84) /phylanx/dot$11/2$66$68) /phylanx/store$15/2$66$29,(/phylanx/access-variable$76$i/2$67$35,(/phylanx/access-variable$77$i/2$67$38) /phylanx/__add$9/2$67$38) /phylanx/store$16/2$67$29) /phylanx/block$4/2$60$25) /phylanx/while$2/2$59$21,(/phylanx/access-variable$78$i/2$70$27) /phylanx/store$17/2$70$21,(/phylanx/access-variable$79$k/2$71$27,(/phylanx/access-variable$80$k/2$71$30) /phylanx/__add$10/2$71$30) /phylanx/store$18/2$71$21) /phylanx/block$1/2$36$17) /phylanx/while$0/2$35$13,(/phylanx/access-variable$81$X/2$74$18,/phylanx/access-variable$82$Y/2$74$21) /phylanx/list$2/2$74$13) /phylanx/block$0/2$7$9) /phylanx/lambda$1/2$5$12) /phylanx/function$1$als_explicit/2$5$12) als;
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-07-lra-performance.csv b/static/weekly-data/2019-02-07-lra-performance.csv
new file mode 100644
index 0000000..c8886c4
--- /dev/null
+++ b/static/weekly-data/2019-02-07-lra-performance.csv
@@ -0,0 +1,84 @@
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$19$40","add(19, 40)",750,101430372,1
+"/phylanx/__add$1/2$21$33","add(21, 33)",750,17284335,1
+"/phylanx/__div$0/2$19$33","div(19, 33)",750,108390709,1
+"/phylanx/__lt$0/2$15$17","lt(15, 17)",751,10852546,1
+"/phylanx/__minus$0/2$19$51","minus(19, 51)",750,73834402,1
+"/phylanx/__mul$0/2$20$47","mul(20, 47)",750,39237350,1
+"/phylanx/__sub$0/2$20$36","sub(20, 36)",750,49527151,1
+"/phylanx/__sub$1/2$20$67","sub(20, 67)",750,13098414,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,1057,1
+"/phylanx/access-argument$1$row_start/0$7$25","access-argument/row_start(7, 25)",1,2339,1
+"/phylanx/access-argument$10$x/2$11$38","access-argument/x(11, 38)",1,1014,1
+"/phylanx/access-argument$11$x/2$12$46","access-argument/x(12, 46)",1,1140,1
+"/phylanx/access-argument$12$iterations/2$15$24","access-argument/iterations(15, 24)",751,423260,1
+"/phylanx/access-argument$13$enable_output/2$17$24","access-argument/enable_output(17, 24)",750,516467,1
+"/phylanx/access-argument$14$x/2$19$55","access-argument/x(19, 55)",750,1318587,1
+"/phylanx/access-argument$15$alpha/2$20$47","access-argument/alpha(20, 47)",750,398996,1
+"/phylanx/access-argument$16$y/2$20$74","access-argument/y(20, 74)",750,194381,1
+"/phylanx/access-argument$2$row_stop/0$7$36","access-argument/row_stop(7, 36)",1,207,1
+"/phylanx/access-argument$3$col_start/0$8$25","access-argument/col_start(8, 25)",1,276,1
+"/phylanx/access-argument$4$col_stop/0$8$36","access-argument/col_stop(8, 36)",1,149,1
+"/phylanx/access-argument$5$filepath/1$6$29","access-argument/filepath(6, 29)",1,968,1
+"/phylanx/access-argument$6$row_start/1$6$50","access-argument/row_start(6, 50)",1,910,0
+"/phylanx/access-argument$7$row_stop/1$6$61","access-argument/row_stop(6, 61)",1,208,1
+"/phylanx/access-argument$8$col_stop/1$6$72","access-argument/col_stop(6, 72)",1,1183,1
+"/phylanx/access-argument$9$x/2$10$49","access-argument/x(10, 49)",1,1090,1
+"/phylanx/access-function$0$read_x/0$10$5","access-function/read_x(10, 5)",1,565,1
+"/phylanx/access-function$1$read_y/1$8$5","access-function/read_y(8, 5)",1,217,1
+"/phylanx/access-function$2$lra_explicit/2$27$5","access-function/lra_explicit(27, 5)",1,207,1
+"/phylanx/access-variable$0$step/2$15$17","access-variable/step(15, 17)",751,836386,1
+"/phylanx/access-variable$1$step/2$17$54","access-variable/step(17, 54)",0,0,1
+"/phylanx/access-variable$10$step/2$21$33","access-variable/step(21, 33)",750,809143,1
+"/phylanx/access-variable$11$weights/2$24$13","access-variable/weights(24, 13)",1,2389,1
+"/phylanx/access-variable$2$weights/2$17$66","access-variable/weights(17, 66)",0,0,1
+"/phylanx/access-variable$3$pred/2$19$27","access-variable/pred(19, 27)",0,0,1
+"/phylanx/access-variable$4$weights/2$19$58","access-variable/weights(19, 58)",750,815415,1
+"/phylanx/access-variable$5$weights/2$20$27","access-variable/weights(20, 27)",0,0,1
+"/phylanx/access-variable$6$weights/2$20$36","access-variable/weights(20, 36)",750,971590,1
+"/phylanx/access-variable$7$transx/2$20$59","access-variable/transx(20, 59)",750,1133122,1
+"/phylanx/access-variable$8$pred/2$20$67","access-variable/pred(20, 67)",750,878468,1
+"/phylanx/access-variable$9$step/2$21$27","access-variable/step(21, 27)",0,0,1
+"/phylanx/block$0/0$1$1","block(1, 1)",1,47851,-1
+"/phylanx/block$1/1$1$1","block(1, 1)",1,5669,-1
+"/phylanx/block$2/2$1$1","block(1, 1)",1,4196,-1
+"/phylanx/block$3/2$9$9","block(9, 9)",1,291223477,-1
+"/phylanx/block$4/2$16$17","block(16, 17)",750,266027340,1
+"/phylanx/constant$0/2$10$29","constant(10, 29)",1,123835,-1
+"/phylanx/constant$1/2$12$26","constant(12, 26)",1,62454,-1
+"/phylanx/cout$0/2$17$39","cout(17, 39)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,11920,-1
+"/phylanx/define-variable$1$read_y/1$5$12","define-variable/read_y(5, 12)",1,661,-1
+"/phylanx/define-variable$2$weights/2$10$20","define-variable/weights(10, 20)",1,187994,-1
+"/phylanx/define-variable$3$transx/2$11$20","define-variable/transx(11, 20)",1,182694,-1
+"/phylanx/define-variable$4$pred/2$12$20","define-variable/pred(12, 20)",1,99057,-1
+"/phylanx/define-variable$5$step/2$13$20","define-variable/step(13, 20)",1,8227,-1
+"/phylanx/define-variable$6$lra_explicit/2$8$12","define-variable/lra_explicit(8, 12)",1,459,-1
+"/phylanx/dot$0/2$19$51","dot(19, 51)",750,63838024,1
+"/phylanx/dot$1/2$20$55","dot(20, 55)",750,28647026,1
+"/phylanx/exp$0/2$19$46","exp(19, 46)",750,93389429,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,116989869,-1
+"/phylanx/file_read_csv$1/1$6$15","file_read_csv(6, 15)",1,3976523,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,117168952,1
+"/phylanx/function$1$read_y/1$5$12","function/read_y(5, 12)",1,4066383,1
+"/phylanx/function$2$lra_explicit/2$8$12","function/lra_explicit(8, 12)",1,291274767,1
+"/phylanx/if$0/2$17$21","if(17, 21)",750,9847649,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,117134140,-1
+"/phylanx/lambda$1/1$5$12","lambda(5, 12)",1,4045755,-1
+"/phylanx/lambda$2/2$8$12","lambda(8, 12)",1,291248731,-1
+"/phylanx/make_list$0/0$7$15","make_list(7, 15)",1,60950,-1
+"/phylanx/make_list$1/0$8$15","make_list(8, 15)",1,13164,-1
+"/phylanx/make_list$2/1$6$40","make_list(6, 40)",1,24688,-1
+"/phylanx/shape$0/2$10$43","shape(10, 43)",1,56568,-1
+"/phylanx/shape$1/2$12$40","shape(12, 40)",1,17516,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,117063134,-1
+"/phylanx/slice$1/1$6$9","slice(6, 9)",1,4014934,-1
+"/phylanx/store$0/2$19$21","store(19, 21)",750,131423433,1
+"/phylanx/store$1/2$20$21","store(20, 21)",750,68221860,1
+"/phylanx/store$2/2$21$21","store(21, 21)",750,34102142,1
+"/phylanx/transpose$0/2$11$28","transpose(11, 28)",1,136324,-1
+"/phylanx/variable$0$weights/2$10$20","variable/weights(10, 20)",1501,712632,1
+"/phylanx/variable$1$transx/2$11$20","variable/transx(11, 20)",750,675126,1
+"/phylanx/variable$2$pred/2$12$20","variable/pred(12, 20)",750,210220,1
+"/phylanx/variable$3$step/2$13$20","variable/step(13, 20)",1501,675594,1
+"/phylanx/while$0/2$14$13","while(14, 13)",1,290574306,-1
diff --git a/static/weekly-data/2019-02-07-lra-tree.txt b/static/weekly-data/2019-02-07-lra-tree.txt
new file mode 100644
index 0000000..fa46a62
--- /dev/null
+++ b/static/weekly-data/2019-02-07-lra-tree.txt
@@ -0,0 +1 @@
+((((((((/phylanx/access-argument$9$x/2$10$49) /phylanx/shape$0/2$10$43) /phylanx/constant$0/2$10$29) /phylanx/variable$0$weights/2$10$20) /phylanx/define-variable$2$weights/2$10$20,(((/phylanx/access-argument$10$x/2$11$38) /phylanx/transpose$0/2$11$28) /phylanx/variable$1$transx/2$11$20) /phylanx/define-variable$3$transx/2$11$20,((((/phylanx/access-argument$11$x/2$12$46) /phylanx/shape$1/2$12$40) /phylanx/constant$1/2$12$26) /phylanx/variable$2$pred/2$12$20) /phylanx/define-variable$4$pred/2$12$20,(/phylanx/variable$3$step/2$13$20) /phylanx/define-variable$5$step/2$13$20,((/phylanx/access-variable$0$step/2$15$17,/phylanx/access-argument$12$iterations/2$15$24) /phylanx/__lt$0/2$15$17,((/phylanx/access-argument$13$enable_output/2$17$24,(/phylanx/access-variable$1$step/2$17$54,/phylanx/access-variable$2$weights/2$17$66) /phylanx/cout$0/2$17$39) /phylanx/if$0/2$17$21,(/phylanx/access-variable$3$pred/2$19$27,(((((/phylanx/access-argument$14$x/2$19$55,/phylanx/access-variable$4$weights/2$19$58) /phylanx/dot$0/2$19$51) /phylanx/__minus$0/2$19$51) /phylanx/exp$0/2$19$46) /phylanx/__add$0/2$19$40) /phylanx/__div$0/2$19$33) /phylanx/store$0/2$19$21,(/phylanx/access-variable$5$weights/2$20$27,(/phylanx/access-variable$6$weights/2$20$36,(/phylanx/access-argument$15$alpha/2$20$47,(/phylanx/access-variable$7$transx/2$20$59,(/phylanx/access-variable$8$pred/2$20$67,/phylanx/access-argument$16$y/2$20$74) /phylanx/__sub$1/2$20$67) /phylanx/dot$1/2$20$55) /phylanx/__mul$0/2$20$47) /phylanx/__sub$0/2$20$36) /phylanx/store$1/2$20$21,(/phylanx/access-variable$9$step/2$21$27,(/phylanx/access-variable$10$step/2$21$33) /phylanx/__add$1/2$21$33) /phylanx/store$2/2$21$21) /phylanx/block$4/2$16$17) /phylanx/while$0/2$14$13,/phylanx/access-variable$11$weights/2$24$13) /phylanx/block$3/2$9$9) /phylanx/lambda$2/2$8$12) /phylanx/function$2$lra_explicit/2$8$12) lra;
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-21-als-performance.csv b/static/weekly-data/2019-02-21-als-performance.csv
new file mode 100644
index 0000000..33b2022
--- /dev/null
+++ b/static/weekly-data/2019-02-21-als-performance.csv
@@ -0,0 +1,271 @@
+Primitive Performance Counter Data in CSV:
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$44$32","add(44, 32)",3,639898,1
+"/phylanx/__add$1/2$45$32","add(45, 32)",3,357902,1
+"/phylanx/__add$10/2$71$30","add(71, 30)",3,53833,1
+"/phylanx/__add$2/2$52$38","add(52, 38)",30,3664175,1
+"/phylanx/__add$3/2$53$60","add(53, 60)",30,1452442,1
+"/phylanx/__add$4/2$54$52","add(54, 52)",30,444466,1
+"/phylanx/__add$5/2$55$38","add(55, 38)",30,467107,1
+"/phylanx/__add$6/2$64$38","add(64, 38)",300,19013613,1
+"/phylanx/__add$7/2$65$60","add(65, 60)",300,4672553,1
+"/phylanx/__add$8/2$66$52","add(66, 52)",300,3123142,1
+"/phylanx/__add$9/2$67$38","add(67, 38)",300,3416049,1
+"/phylanx/__lt$0/2$35$19","lt(35, 19)",4,226298,1
+"/phylanx/__lt$1/2$47$27","lt(47, 27)",33,771035,1
+"/phylanx/__lt$2/2$59$27","lt(59, 27)",303,5116963,1
+"/phylanx/__mul$0/2$10$26","mul(10, 26)",1,238817,-1
+"/phylanx/__mul$1/2$44$55","mul(44, 55)",3,96594,1
+"/phylanx/__mul$2/2$45$55","mul(45, 55)",3,89129,1
+"/phylanx/__ne$0/2$51$40","ne(51, 40)",30,612636,1
+"/phylanx/__ne$1/2$63$40","ne(63, 40)",300,4081186,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,689,1
+"/phylanx/access-argument$1$row_start/0$6$50","access-argument/row_start(6, 50)",1,4893,1
+"/phylanx/access-argument$10$num_factors/2$22$51","access-argument/num_factors(22, 51)",1,1077,1
+"/phylanx/access-argument$11$num_factors/2$23$34","access-argument/num_factors(23, 34)",1,5710,1
+"/phylanx/access-argument$12$num_factors/2$30$49","access-argument/num_factors(30, 49)",1,1067,1
+"/phylanx/access-argument$13$num_factors/2$30$62","access-argument/num_factors(30, 62)",1,397,1
+"/phylanx/access-argument$14$num_factors/2$31$49","access-argument/num_factors(31, 49)",1,1517,1
+"/phylanx/access-argument$15$num_factors/2$31$62","access-argument/num_factors(31, 62)",1,267,1
+"/phylanx/access-argument$16$num_factors/2$32$47","access-argument/num_factors(32, 47)",1,937,1
+"/phylanx/access-argument$17$num_factors/2$32$60","access-argument/num_factors(32, 60)",1,317,1
+"/phylanx/access-argument$18$num_factors/2$33$47","access-argument/num_factors(33, 47)",1,877,1
+"/phylanx/access-argument$19$iterations/2$35$23","access-argument/iterations(35, 23)",4,2494,1
+"/phylanx/access-argument$2$row_stop/0$6$62","access-argument/row_stop(6, 62)",1,386,1
+"/phylanx/access-argument$20$enable_output/2$37$24","access-argument/enable_output(37, 24)",3,2265,1
+"/phylanx/access-argument$21$regularization/2$44$55","access-argument/regularization(44, 55)",3,2286,1
+"/phylanx/access-argument$22$regularization/2$45$55","access-argument/regularization(45, 55)",3,2416,1
+"/phylanx/access-argument$3$col_start/0$7$25","access-argument/col_start(7, 25)",1,913,1
+"/phylanx/access-argument$4$col_stop/0$7$37","access-argument/col_stop(7, 37)",1,212,1
+"/phylanx/access-argument$5$ratings/2$8$37","access-argument/ratings(8, 37)",1,2629,1
+"/phylanx/access-argument$6$ratings/2$9$37","access-argument/ratings(9, 37)",1,1203,1
+"/phylanx/access-argument$7$alpha/2$10$26","access-argument/alpha(10, 26)",1,11274,1
+"/phylanx/access-argument$8$ratings/2$10$34","access-argument/ratings(10, 34)",1,886,1
+"/phylanx/access-argument$9$num_factors/2$21$51","access-argument/num_factors(21, 51)",1,983,1
+"/phylanx/access-function$0$read_x/1$9$5","access-function/read_x(9, 5)",1,331,1
+"/phylanx/access-function$1$als_explicit/3$77$5","access-function/als_explicit(77, 5)",1,116,1
+"/phylanx/access-variable$0$num_items/2$12$52","access-variable/num_items(12, 52)",1,9480,1
+"/phylanx/access-variable$1$num_users/2$13$52","access-variable/num_users(13, 52)",1,6777,1
+"/phylanx/access-variable$10$num_items/2$24$34","access-variable/num_items(24, 34)",1,8603,1
+"/phylanx/access-variable$11$num_users/2$25$34","access-variable/num_users(25, 34)",1,8790,1
+"/phylanx/access-variable$12$k/2$35$19","access-variable/k(35, 19)",4,12520,1
+"/phylanx/access-variable$13$k/2$39$56","access-variable/k(39, 56)",0,0,1
+"/phylanx/access-variable$14$u/2$39$59","access-variable/u(39, 59)",0,0,1
+"/phylanx/access-variable$15$X/2$40$48","access-variable/X(40, 48)",0,0,1
+"/phylanx/access-variable$16$Y/2$41$48","access-variable/Y(41, 48)",0,0,1
+"/phylanx/access-variable$17$YtY/2$44$27","access-variable/YtY(44, 27)",0,0,1
+"/phylanx/access-variable$18$Y/2$44$46","access-variable/Y(44, 46)",3,6592,1
+"/phylanx/access-variable$19$Y/2$44$50","access-variable/Y(44, 50)",3,6177,1
+"/phylanx/access-variable$2$num_items/2$15$49","access-variable/num_items(15, 49)",1,5537,1
+"/phylanx/access-variable$20$I_f/2$44$72","access-variable/I_f(44, 72)",3,6959,1
+"/phylanx/access-variable$21$XtX/2$45$27","access-variable/XtX(45, 27)",0,0,1
+"/phylanx/access-variable$22$X/2$45$46","access-variable/X(45, 46)",3,6298,1
+"/phylanx/access-variable$23$X/2$45$50","access-variable/X(45, 50)",3,6663,1
+"/phylanx/access-variable$24$I_f/2$45$72","access-variable/I_f(45, 72)",3,6106,1
+"/phylanx/access-variable$25$u/2$47$27","access-variable/u(47, 27)",33,60574,1
+"/phylanx/access-variable$26$num_users/2$47$31","access-variable/num_users(47, 31)",33,46280,1
+"/phylanx/access-variable$27$conf_u/2$49$35","access-variable/conf_u(49, 35)",0,0,1
+"/phylanx/access-variable$28$conf/2$49$53","access-variable/conf(49, 53)",30,54622,1
+"/phylanx/access-variable$29$u/2$49$59","access-variable/u(49, 59)",30,47523,1
+"/phylanx/access-variable$3$num_items/2$15$60","access-variable/num_items(15, 60)",1,2457,1
+"/phylanx/access-variable$30$c_u/2$50$35","access-variable/c_u(50, 35)",0,0,1
+"/phylanx/access-variable$31$conf_u/2$50$45","access-variable/conf_u(50, 45)",30,54123,1
+"/phylanx/access-variable$32$p_u/2$51$35","access-variable/p_u(51, 35)",0,0,1
+"/phylanx/access-variable$33$conf_u/2$51$45","access-variable/conf_u(51, 45)",30,71691,1
+"/phylanx/access-variable$34$A/2$52$35","access-variable/A(52, 35)",0,0,1
+"/phylanx/access-variable$35$Y/2$52$56","access-variable/Y(52, 56)",30,65845,1
+"/phylanx/access-variable$36$c_u/2$52$60","access-variable/c_u(52, 60)",30,42793,1
+"/phylanx/access-variable$37$Y/2$52$66","access-variable/Y(52, 66)",30,42468,1
+"/phylanx/access-variable$38$YtY/2$52$70","access-variable/YtY(52, 70)",30,38158,1
+"/phylanx/access-variable$39$b/2$53$35","access-variable/b(53, 35)",0,0,1
+"/phylanx/access-variable$4$num_users/2$16$49","access-variable/num_users(16, 49)",1,3883,1
+"/phylanx/access-variable$40$Y/2$53$56","access-variable/Y(53, 56)",30,49240,1
+"/phylanx/access-variable$41$c_u/2$53$60","access-variable/c_u(53, 60)",30,39262,1
+"/phylanx/access-variable$42$I_i/2$53$66","access-variable/I_i(53, 66)",30,36608,1
+"/phylanx/access-variable$43$p_u/2$53$83","access-variable/p_u(53, 83)",30,50594,1
+"/phylanx/access-variable$44$u/2$54$49","access-variable/u(54, 49)",30,68645,1
+"/phylanx/access-variable$45$u/2$54$52","access-variable/u(54, 52)",30,35247,1
+"/phylanx/access-variable$46$X/2$54$41","access-variable/X(54, 41)",0,0,1
+"/phylanx/access-variable$47$A/2$54$80","access-variable/A(54, 80)",30,89478,1
+"/phylanx/access-variable$48$b/2$54$84","access-variable/b(54, 84)",30,56094,1
+"/phylanx/access-variable$49$u/2$55$35","access-variable/u(55, 35)",0,0,1
+"/phylanx/access-variable$5$num_users/2$16$60","access-variable/num_users(16, 60)",1,2090,1
+"/phylanx/access-variable$50$u/2$55$38","access-variable/u(55, 38)",30,47070,1
+"/phylanx/access-variable$51$u/2$58$27","access-variable/u(58, 27)",0,0,1
+"/phylanx/access-variable$52$i/2$59$27","access-variable/i(59, 27)",303,364134,1
+"/phylanx/access-variable$53$num_items/2$59$31","access-variable/num_items(59, 31)",303,284370,1
+"/phylanx/access-variable$54$conf_i/2$61$35","access-variable/conf_i(61, 35)",0,0,1
+"/phylanx/access-variable$55$conf/2$61$56","access-variable/conf(61, 56)",300,432917,1
+"/phylanx/access-variable$56$i/2$61$62","access-variable/i(61, 62)",300,382855,1
+"/phylanx/access-variable$57$c_i/2$62$35","access-variable/c_i(62, 35)",0,0,1
+"/phylanx/access-variable$58$conf_i/2$62$45","access-variable/conf_i(62, 45)",300,404051,1
+"/phylanx/access-variable$59$p_i/2$63$35","access-variable/p_i(63, 35)",0,0,1
+"/phylanx/access-variable$6$num_items/2$17$49","access-variable/num_items(17, 49)",1,3663,1
+"/phylanx/access-variable$60$conf_i/2$63$45","access-variable/conf_i(63, 45)",300,491001,1
+"/phylanx/access-variable$61$A/2$64$35","access-variable/A(64, 35)",0,0,1
+"/phylanx/access-variable$62$X/2$64$56","access-variable/X(64, 56)",300,387771,1
+"/phylanx/access-variable$63$c_i/2$64$59","access-variable/c_i(64, 59)",300,313457,1
+"/phylanx/access-variable$64$X/2$64$65","access-variable/X(64, 65)",300,270516,1
+"/phylanx/access-variable$65$XtX/2$64$70","access-variable/XtX(64, 70)",300,264862,1
+"/phylanx/access-variable$66$b/2$65$35","access-variable/b(65, 35)",0,0,1
+"/phylanx/access-variable$67$X/2$65$56","access-variable/X(65, 56)",300,366457,1
+"/phylanx/access-variable$68$c_i/2$65$60","access-variable/c_i(65, 60)",300,283978,1
+"/phylanx/access-variable$69$I_u/2$65$66","access-variable/I_u(65, 66)",300,245976,1
+"/phylanx/access-variable$7$num_users/2$18$49","access-variable/num_users(18, 49)",1,3910,1
+"/phylanx/access-variable$70$p_i/2$65$83","access-variable/p_i(65, 83)",300,306688,1
+"/phylanx/access-variable$71$i/2$66$49","access-variable/i(66, 49)",300,481223,1
+"/phylanx/access-variable$72$i/2$66$52","access-variable/i(66, 52)",300,254851,1
+"/phylanx/access-variable$73$Y/2$66$41","access-variable/Y(66, 41)",0,0,1
+"/phylanx/access-variable$74$A/2$66$80","access-variable/A(66, 80)",300,330873,1
+"/phylanx/access-variable$75$b/2$66$84","access-variable/b(66, 84)",300,334558,1
+"/phylanx/access-variable$76$i/2$67$35","access-variable/i(67, 35)",0,0,1
+"/phylanx/access-variable$77$i/2$67$38","access-variable/i(67, 38)",300,370357,1
+"/phylanx/access-variable$78$i/2$70$27","access-variable/i(70, 27)",0,0,1
+"/phylanx/access-variable$79$k/2$71$27","access-variable/k(71, 27)",0,0,1
+"/phylanx/access-variable$8$num_users/2$21$40","access-variable/num_users(21, 40)",1,4730,1
+"/phylanx/access-variable$80$k/2$71$30","access-variable/k(71, 30)",3,5633,1
+"/phylanx/access-variable$81$X/2$74$18","access-variable/X(74, 18)",1,1996,1
+"/phylanx/access-variable$82$Y/2$74$21","access-variable/Y(74, 21)",1,1177,1
+"/phylanx/access-variable$9$num_items/2$22$40","access-variable/num_items(22, 40)",1,3967,1
+"/phylanx/block$0/2$7$9","block(7, 9)",1,197215871,-1
+"/phylanx/block$1/2$36$17","block(36, 17)",3,251696704,0
+"/phylanx/block$2/2$38$29","block(38, 29)",0,0,-1
+"/phylanx/block$3/2$48$25","block(48, 25)",30,28994932,0
+"/phylanx/block$4/2$60$25","block(60, 25)",300,145530660,-1
+"/phylanx/constant$0/2$12$28","constant(12, 28)",1,187144,-1
+"/phylanx/constant$1/2$13$28","constant(13, 28)",1,89177,-1
+"/phylanx/constant$2/2$15$25","constant(15, 25)",1,134811,-1
+"/phylanx/constant$3/2$16$25","constant(16, 25)",1,101724,-1
+"/phylanx/constant$4/2$17$25","constant(17, 25)",1,78170,-1
+"/phylanx/constant$5/2$18$25","constant(18, 25)",1,89937,-1
+"/phylanx/constant$6/2$30$25","constant(30, 25)",1,95620,-1
+"/phylanx/constant$7/2$31$25","constant(31, 25)",1,82903,-1
+"/phylanx/constant$8/2$32$23","constant(32, 23)",1,89476,-1
+"/phylanx/constant$9/2$33$23","constant(33, 23)",1,79327,-1
+"/phylanx/cout$0/2$39$37","cout(39, 37)",0,0,-1
+"/phylanx/cout$1/2$40$37","cout(40, 37)",0,0,-1
+"/phylanx/cout$2/2$41$37","cout(41, 37)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,8801,-1
+"/phylanx/define-variable$1$num_users/2$8$20","define-variable/num_users(8, 20)",1,184101,-1
+"/phylanx/define-variable$10$X/2$21$20","define-variable/X(21, 20)",1,271838,-1
+"/phylanx/define-variable$11$Y/2$22$20","define-variable/Y(22, 20)",1,295359,-1
+"/phylanx/define-variable$12$I_f/2$23$20","define-variable/I_f(23, 20)",1,110830,-1
+"/phylanx/define-variable$13$I_i/2$24$20","define-variable/I_i(24, 20)",1,112574,-1
+"/phylanx/define-variable$14$I_u/2$25$20","define-variable/I_u(25, 20)",1,78943,-1
+"/phylanx/define-variable$15$k/2$26$20","define-variable/k(26, 20)",1,8530,-1
+"/phylanx/define-variable$16$i/2$27$20","define-variable/i(27, 20)",1,5893,-1
+"/phylanx/define-variable$17$u/2$28$20","define-variable/u(28, 20)",1,5114,-1
+"/phylanx/define-variable$18$XtX/2$30$20","define-variable/XtX(30, 20)",1,132890,-1
+"/phylanx/define-variable$19$YtY/2$31$20","define-variable/YtY(31, 20)",1,112443,-1
+"/phylanx/define-variable$2$num_items/2$9$20","define-variable/num_items(9, 20)",1,63979,-1
+"/phylanx/define-variable$20$A/2$32$20","define-variable/A(32, 20)",1,129204,-1
+"/phylanx/define-variable$21$b/2$33$20","define-variable/b(33, 20)",1,118261,-1
+"/phylanx/define-variable$22$als_explicit/2$5$12","define-variable/als_explicit(5, 12)",1,358,-1
+"/phylanx/define-variable$3$conf/2$10$20","define-variable/conf(10, 20)",1,282384,-1
+"/phylanx/define-variable$4$conf_u/2$12$20","define-variable/conf_u(12, 20)",1,228135,-1
+"/phylanx/define-variable$5$conf_i/2$13$20","define-variable/conf_i(13, 20)",1,128026,-1
+"/phylanx/define-variable$6$c_u/2$15$20","define-variable/c_u(15, 20)",1,161968,-1
+"/phylanx/define-variable$7$c_i/2$16$20","define-variable/c_i(16, 20)",1,140214,-1
+"/phylanx/define-variable$8$p_u/2$17$20","define-variable/p_u(17, 20)",1,117454,-1
+"/phylanx/define-variable$9$p_i/2$18$20","define-variable/p_i(18, 20)",1,119360,-1
+"/phylanx/diag$0/2$50$40","diag(50, 40)",30,734221,1
+"/phylanx/diag$1/2$62$40","diag(62, 40)",300,3235558,1
+"/phylanx/dot$0/2$44$32","dot(44, 32)",3,500511,1
+"/phylanx/dot$1/2$45$32","dot(45, 32)",3,269026,1
+"/phylanx/dot$10/2$65$42","dot(65, 42)",300,12141216,1
+"/phylanx/dot$11/2$66$68","dot(66, 68)",300,11255308,1
+"/phylanx/dot$2/2$52$38","dot(52, 38)",30,2988837,1
+"/phylanx/dot$3/2$52$42","dot(52, 42)",30,2199336,1
+"/phylanx/dot$4/2$53$38","dot(53, 38)",30,4356893,1
+"/phylanx/dot$5/2$53$42","dot(53, 42)",30,3498259,1
+"/phylanx/dot$6/2$54$68","dot(54, 68)",30,6159798,1
+"/phylanx/dot$7/2$64$38","dot(64, 38)",300,13712077,1
+"/phylanx/dot$8/2$64$42","dot(64, 42)",300,8717642,1
+"/phylanx/dot$9/2$65$38","dot(65, 38)",300,18533998,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,228701413,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,228897698,1
+"/phylanx/function$1$als_explicit/2$5$12","function/als_explicit(5, 12)",1,197299771,1
+"/phylanx/identity$0/2$23$25","identity(23, 25)",1,48323,-1
+"/phylanx/identity$1/2$24$25","identity(24, 25)",1,67660,-1
+"/phylanx/identity$2/2$25$25","identity(25, 25)",1,29470,-1
+"/phylanx/if$0/2$37$21","if(37, 21)",3,79654,1
+"/phylanx/inverse$0/2$54$72","inverse(54, 72)",30,3881697,1
+"/phylanx/inverse$1/2$66$72","inverse(66, 72)",300,6303124,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,228865621,-1
+"/phylanx/lambda$1/2$5$12","lambda(5, 12)",1,197261690,-1
+"/phylanx/list$0/2$54$44","list(54, 44)",30,1241323,1
+"/phylanx/list$1/2$66$44","list(66, 44)",300,9355968,1
+"/phylanx/list$2/2$74$13","list(74, 13)",1,23895,-1
+"/phylanx/make_list$0/0$6$40","make_list(6, 40)",1,76892,-1
+"/phylanx/make_list$1/0$7$15","make_list(7, 15)",1,30402,-1
+"/phylanx/make_list$10/2$30$39","make_list(30, 39)",1,34884,-1
+"/phylanx/make_list$11/2$31$39","make_list(31, 39)",1,40903,-1
+"/phylanx/make_list$12/2$32$37","make_list(32, 37)",1,33510,-1
+"/phylanx/make_list$13/2$33$37","make_list(33, 37)",1,22867,-1
+"/phylanx/make_list$2/2$12$42","make_list(12, 42)",1,41141,-1
+"/phylanx/make_list$3/2$13$42","make_list(13, 42)",1,27034,-1
+"/phylanx/make_list$4/2$15$39","make_list(15, 39)",1,65213,-1
+"/phylanx/make_list$5/2$16$39","make_list(16, 39)",1,40990,-1
+"/phylanx/make_list$6/2$17$39","make_list(17, 39)",1,21320,-1
+"/phylanx/make_list$7/2$18$39","make_list(18, 39)",1,30910,-1
+"/phylanx/make_list$8/2$21$30","make_list(21, 30)",1,46763,-1
+"/phylanx/make_list$9/2$22$30","make_list(22, 30)",1,38664,-1
+"/phylanx/random$0/2$21$23","random(21, 23)",1,226589,-1
+"/phylanx/random$1/2$22$23","random(22, 23)",1,256004,-1
+"/phylanx/set_seed$0/2$20$13","set_seed(20, 13)",1,253728,-1
+"/phylanx/shape$0/2$8$31","shape(8, 31)",1,82415,-1
+"/phylanx/shape$1/2$9$31","shape(9, 31)",1,26965,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,228762068,-1
+"/phylanx/slice_column$0/2$61$43","slice_column(61, 43)",300,7118986,1
+"/phylanx/slice_row$0/2$49$43","slice_row(49, 43)",30,904481,1
+"/phylanx/store$0/2$44$21","store(44, 21)",3,723866,1
+"/phylanx/store$1/2$45$21","store(45, 21)",3,436595,1
+"/phylanx/store$10/2$61$29","store(61, 29)",300,15908312,1
+"/phylanx/store$11/2$62$29","store(62, 29)",300,9343315,1
+"/phylanx/store$12/2$63$29","store(63, 29)",300,10090704,1
+"/phylanx/store$13/2$64$29","store(64, 29)",300,25788553,1
+"/phylanx/store$14/2$65$29","store(65, 29)",300,24839457,1
+"/phylanx/store$15/2$66$29","store(66, 29)",300,32377309,1
+"/phylanx/store$16/2$67$29","store(67, 29)",300,11015049,1
+"/phylanx/store$17/2$70$21","store(70, 21)",3,131389,1
+"/phylanx/store$18/2$71$21","store(71, 21)",3,59159692,0
+"/phylanx/store$2/2$49$29","store(49, 29)",30,1963429,1
+"/phylanx/store$3/2$50$29","store(50, 29)",30,1761481,1
+"/phylanx/store$4/2$51$29","store(51, 29)",30,1448737,1
+"/phylanx/store$5/2$52$29","store(52, 29)",30,4516699,1
+"/phylanx/store$6/2$53$29","store(53, 29)",30,5245919,1
+"/phylanx/store$7/2$54$29","store(54, 29)",30,8205142,1
+"/phylanx/store$8/2$55$29","store(55, 29)",30,3124172,1
+"/phylanx/store$9/2$58$21","store(58, 21)",3,80841,1
+"/phylanx/transpose$0/2$44$36","transpose(44, 36)",3,91988,1
+"/phylanx/transpose$1/2$45$36","transpose(45, 36)",3,68185,1
+"/phylanx/transpose$2/2$52$46","transpose(52, 46)",30,510297,1
+"/phylanx/transpose$3/2$53$46","transpose(53, 46)",30,404696,1
+"/phylanx/transpose$4/2$53$73","transpose(53, 73)",30,311727,1
+"/phylanx/transpose$5/2$64$46","transpose(64, 46)",300,3790518,1
+"/phylanx/transpose$6/2$65$46","transpose(65, 46)",300,2856734,1
+"/phylanx/transpose$7/2$65$73","transpose(65, 73)",300,2271658,1
+"/phylanx/variable$0$num_users/2$8$20","variable/num_users(8, 20)",39,17225,1
+"/phylanx/variable$1$num_items/2$9$20","variable/num_items(9, 20)",309,76019,1
+"/phylanx/variable$10$Y/2$22$20","variable/Y(22, 20)",97,76146,1
+"/phylanx/variable$11$I_f/2$23$20","variable/I_f(23, 20)",6,4744,1
+"/phylanx/variable$12$I_i/2$24$20","variable/I_i(24, 20)",30,11830,1
+"/phylanx/variable$13$I_u/2$25$20","variable/I_u(25, 20)",300,73648,1
+"/phylanx/variable$14$k/2$26$20","variable/k(26, 20)",7,4773,1
+"/phylanx/variable$15$i/2$27$20","variable/i(27, 20)",1503,602445,1
+"/phylanx/variable$16$u/2$28$20","variable/u(28, 20)",153,87372,1
+"/phylanx/variable$17$XtX/2$30$20","variable/XtX(30, 20)",300,92416,1
+"/phylanx/variable$18$YtY/2$31$20","variable/YtY(31, 20)",30,13109,1
+"/phylanx/variable$19$A/2$32$20","variable/A(32, 20)",330,145738,1
+"/phylanx/variable$2$conf/2$10$20","variable/conf(10, 20)",330,199504,1
+"/phylanx/variable$20$b/2$33$20","variable/b(33, 20)",330,140250,1
+"/phylanx/variable$3$conf_u/2$12$20","variable/conf_u(12, 20)",60,42230,1
+"/phylanx/variable$4$conf_i/2$13$20","variable/conf_i(13, 20)",600,304335,1
+"/phylanx/variable$5$c_u/2$15$20","variable/c_u(15, 20)",60,29691,1
+"/phylanx/variable$6$c_i/2$16$20","variable/c_i(16, 20)",600,203236,1
+"/phylanx/variable$7$p_u/2$17$20","variable/p_u(17, 20)",30,22319,1
+"/phylanx/variable$8$p_i/2$18$20","variable/p_i(18, 20)",300,132587,1
+"/phylanx/variable$9$X/2$21$20","variable/X(21, 20)",907,410719,1
+"/phylanx/while$0/2$35$13","while(35, 13)",1,193153194,-1
+"/phylanx/while$1/2$47$21","while(47, 21)",3,29290908,0
+"/phylanx/while$2/2$59$21","while(59, 21)",3,161446816,0
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-21-als-tree.txt b/static/weekly-data/2019-02-21-als-tree.txt
new file mode 100644
index 0000000..fa3fbd7
--- /dev/null
+++ b/static/weekly-data/2019-02-21-als-tree.txt
@@ -0,0 +1 @@
+(((((((/phylanx/access-argument$5$ratings/2$8$37) /phylanx/shape$0/2$8$31) /phylanx/variable$0$num_users/2$8$20) /phylanx/define-variable$1$num_users/2$8$20,(((/phylanx/access-argument$6$ratings/2$9$37) /phylanx/shape$1/2$9$31) /phylanx/variable$1$num_items/2$9$20) /phylanx/define-variable$2$num_items/2$9$20,(((/phylanx/access-argument$7$alpha/2$10$26,/phylanx/access-argument$8$ratings/2$10$34) /phylanx/__mul$0/2$10$26) /phylanx/variable$2$conf/2$10$20) /phylanx/define-variable$3$conf/2$10$20,((((/phylanx/access-variable$0$num_items/2$12$52) /phylanx/make_list$2/2$12$42) /phylanx/constant$0/2$12$28) /phylanx/variable$3$conf_u/2$12$20) /phylanx/define-variable$4$conf_u/2$12$20,((((/phylanx/access-variable$1$num_users/2$13$52) /phylanx/make_list$3/2$13$42) /phylanx/constant$1/2$13$28) /phylanx/variable$4$conf_i/2$13$20) /phylanx/define-variable$5$conf_i/2$13$20,((((/phylanx/access-variable$2$num_items/2$15$49,/phylanx/access-variable$3$num_items/2$15$60) /phylanx/make_list$4/2$15$39) /phylanx/constant$2/2$15$25) /phylanx/variable$5$c_u/2$15$20) /phylanx/define-variable$6$c_u/2$15$20,((((/phylanx/access-variable$4$num_users/2$16$49,/phylanx/access-variable$5$num_users/2$16$60) /phylanx/make_list$5/2$16$39) /phylanx/constant$3/2$16$25) /phylanx/variable$6$c_i/2$16$20) /phylanx/define-variable$7$c_i/2$16$20,((((/phylanx/access-variable$6$num_items/2$17$49) /phylanx/make_list$6/2$17$39) /phylanx/constant$4/2$17$25) /phylanx/variable$7$p_u/2$17$20) /phylanx/define-variable$8$p_u/2$17$20,((((/phylanx/access-variable$7$num_users/2$18$49) /phylanx/make_list$7/2$18$39) /phylanx/constant$5/2$18$25) /phylanx/variable$8$p_i/2$18$20) /phylanx/define-variable$9$p_i/2$18$20,/phylanx/set_seed$0/2$20$13,((((/phylanx/access-variable$8$num_users/2$21$40,/phylanx/access-argument$9$num_factors/2$21$51) /phylanx/make_list$8/2$21$30) /phylanx/random$0/2$21$23) /phylanx/variable$9$X/2$21$20) /phylanx/define-variable$10$X/2$21$20,((((/phylanx/access-variable$9$num_items/2$22$40,/phylanx/access-argument$10$num_factors/2$22$51) /phylanx/make_list$9/2$22$30) /phylanx/random$1/2$22$23) /phylanx/variable$10$Y/2$22$20) /phylanx/define-variable$11$Y/2$22$20,(((/phylanx/access-argument$11$num_factors/2$23$34) /phylanx/identity$0/2$23$25) /phylanx/variable$11$I_f/2$23$20) /phylanx/define-variable$12$I_f/2$23$20,(((/phylanx/access-variable$10$num_items/2$24$34) /phylanx/identity$1/2$24$25) /phylanx/variable$12$I_i/2$24$20) /phylanx/define-variable$13$I_i/2$24$20,(((/phylanx/access-variable$11$num_users/2$25$34) /phylanx/identity$2/2$25$25) /phylanx/variable$13$I_u/2$25$20) /phylanx/define-variable$14$I_u/2$25$20,(/phylanx/variable$14$k/2$26$20) /phylanx/define-variable$15$k/2$26$20,(/phylanx/variable$15$i/2$27$20) /phylanx/define-variable$16$i/2$27$20,(/phylanx/variable$16$u/2$28$20) /phylanx/define-variable$17$u/2$28$20,((((/phylanx/access-argument$12$num_factors/2$30$49,/phylanx/access-argument$13$num_factors/2$30$62) /phylanx/make_list$10/2$30$39) /phylanx/constant$6/2$30$25) /phylanx/variable$17$XtX/2$30$20) /phylanx/define-variable$18$XtX/2$30$20,((((/phylanx/access-argument$14$num_factors/2$31$49,/phylanx/access-argument$15$num_factors/2$31$62) /phylanx/make_list$11/2$31$39) /phylanx/constant$7/2$31$25) /phylanx/variable$18$YtY/2$31$20) /phylanx/define-variable$19$YtY/2$31$20,((((/phylanx/access-argument$16$num_factors/2$32$47,/phylanx/access-argument$17$num_factors/2$32$60) /phylanx/make_list$12/2$32$37) /phylanx/constant$8/2$32$23) /phylanx/variable$19$A/2$32$20) /phylanx/define-variable$20$A/2$32$20,((((/phylanx/access-argument$18$num_factors/2$33$47) /phylanx/make_list$13/2$33$37) /phylanx/constant$9/2$33$23) /phylanx/variable$20$b/2$33$20) /phylanx/define-variable$21$b/2$33$20,((/phylanx/access-variable$12$k/2$35$19,/phylanx/access-argument$19$iterations/2$35$23) /phylanx/__lt$0/2$35$19,((/phylanx/access-argument$20$enable_output/2$37$24,((/phylanx/access-variable$13$k/2$39$56,/phylanx/access-variable$14$u/2$39$59) /phylanx/cout$0/2$39$37,(/phylanx/access-variable$15$X/2$40$48) /phylanx/cout$1/2$40$37,(/phylanx/access-variable$16$Y/2$41$48) /phylanx/cout$2/2$41$37) /phylanx/block$2/2$38$29) /phylanx/if$0/2$37$21,(/phylanx/access-variable$17$YtY/2$44$27,(((/phylanx/access-variable$18$Y/2$44$46) /phylanx/transpose$0/2$44$36,/phylanx/access-variable$19$Y/2$44$50) /phylanx/dot$0/2$44$32,(/phylanx/access-argument$21$regularization/2$44$55,/phylanx/access-variable$20$I_f/2$44$72) /phylanx/__mul$1/2$44$55) /phylanx/__add$0/2$44$32) /phylanx/store$0/2$44$21,(/phylanx/access-variable$21$XtX/2$45$27,(((/phylanx/access-variable$22$X/2$45$46) /phylanx/transpose$1/2$45$36,/phylanx/access-variable$23$X/2$45$50) /phylanx/dot$1/2$45$32,(/phylanx/access-argument$22$regularization/2$45$55,/phylanx/access-variable$24$I_f/2$45$72) /phylanx/__mul$2/2$45$55) /phylanx/__add$1/2$45$32) /phylanx/store$1/2$45$21,((/phylanx/access-variable$25$u/2$47$27,/phylanx/access-variable$26$num_users/2$47$31) /phylanx/__lt$1/2$47$27,((/phylanx/access-variable$27$conf_u/2$49$35,(/phylanx/access-variable$28$conf/2$49$53,/phylanx/access-variable$29$u/2$49$59) /phylanx/slice_row$0/2$49$43) /phylanx/store$2/2$49$29,(/phylanx/access-variable$30$c_u/2$50$35,(/phylanx/access-variable$31$conf_u/2$50$45) /phylanx/diag$0/2$50$40) /phylanx/store$3/2$50$29,(/phylanx/access-variable$32$p_u/2$51$35,(/phylanx/access-variable$33$conf_u/2$51$45) /phylanx/__ne$0/2$51$40) /phylanx/store$4/2$51$29,(/phylanx/access-variable$34$A/2$52$35,((((/phylanx/access-variable$35$Y/2$52$56) /phylanx/transpose$2/2$52$46,/phylanx/access-variable$36$c_u/2$52$60) /phylanx/dot$3/2$52$42,/phylanx/access-variable$37$Y/2$52$66) /phylanx/dot$2/2$52$38,/phylanx/access-variable$38$YtY/2$52$70) /phylanx/__add$2/2$52$38) /phylanx/store$5/2$52$29,(/phylanx/access-variable$39$b/2$53$35,(((/phylanx/access-variable$40$Y/2$53$56) /phylanx/transpose$3/2$53$46,(/phylanx/access-variable$41$c_u/2$53$60,/phylanx/access-variable$42$I_i/2$53$66) /phylanx/__add$3/2$53$60) /phylanx/dot$5/2$53$42,(/phylanx/access-variable$43$p_u/2$53$83) /phylanx/transpose$4/2$53$73) /phylanx/dot$4/2$53$38) /phylanx/store$6/2$53$29,(/phylanx/access-variable$46$X/2$54$41,((/phylanx/access-variable$47$A/2$54$80) /phylanx/inverse$0/2$54$72,/phylanx/access-variable$48$b/2$54$84) /phylanx/dot$6/2$54$68) /phylanx/store$7/2$54$29,(/phylanx/access-variable$49$u/2$55$35,(/phylanx/access-variable$50$u/2$55$38) /phylanx/__add$5/2$55$38) /phylanx/store$8/2$55$29) /phylanx/block$3/2$48$25) /phylanx/while$1/2$47$21,(/phylanx/access-variable$51$u/2$58$27) /phylanx/store$9/2$58$21,((/phylanx/access-variable$52$i/2$59$27,/phylanx/access-variable$53$num_items/2$59$31) /phylanx/__lt$2/2$59$27,((/phylanx/access-variable$54$conf_i/2$61$35,(/phylanx/access-variable$55$conf/2$61$56,/phylanx/access-variable$56$i/2$61$62) /phylanx/slice_column$0/2$61$43) /phylanx/store$10/2$61$29,(/phylanx/access-variable$57$c_i/2$62$35,(/phylanx/access-variable$58$conf_i/2$62$45) /phylanx/diag$1/2$62$40) /phylanx/store$11/2$62$29,(/phylanx/access-variable$59$p_i/2$63$35,(/phylanx/access-variable$60$conf_i/2$63$45) /phylanx/__ne$1/2$63$40) /phylanx/store$12/2$63$29,(/phylanx/access-variable$61$A/2$64$35,((((/phylanx/access-variable$62$X/2$64$56) /phylanx/transpose$5/2$64$46,/phylanx/access-variable$63$c_i/2$64$59) /phylanx/dot$8/2$64$42,/phylanx/access-variable$64$X/2$64$65) /phylanx/dot$7/2$64$38,/phylanx/access-variable$65$XtX/2$64$70) /phylanx/__add$6/2$64$38) /phylanx/store$13/2$64$29,(/phylanx/access-variable$66$b/2$65$35,(((/phylanx/access-variable$67$X/2$65$56) /phylanx/transpose$6/2$65$46,(/phylanx/access-variable$68$c_i/2$65$60,/phylanx/access-variable$69$I_u/2$65$66) /phylanx/__add$7/2$65$60) /phylanx/dot$10/2$65$42,(/phylanx/access-variable$70$p_i/2$65$83) /phylanx/transpose$7/2$65$73) /phylanx/dot$9/2$65$38) /phylanx/store$14/2$65$29,(/phylanx/access-variable$73$Y/2$66$41,((/phylanx/access-variable$74$A/2$66$80) /phylanx/inverse$1/2$66$72,/phylanx/access-variable$75$b/2$66$84) /phylanx/dot$11/2$66$68) /phylanx/store$15/2$66$29,(/phylanx/access-variable$76$i/2$67$35,(/phylanx/access-variable$77$i/2$67$38) /phylanx/__add$9/2$67$38) /phylanx/store$16/2$67$29) /phylanx/block$4/2$60$25) /phylanx/while$2/2$59$21,(/phylanx/access-variable$78$i/2$70$27) /phylanx/store$17/2$70$21,(/phylanx/access-variable$79$k/2$71$27,(/phylanx/access-variable$80$k/2$71$30) /phylanx/__add$10/2$71$30) /phylanx/store$18/2$71$21) /phylanx/block$1/2$36$17) /phylanx/while$0/2$35$13,(/phylanx/access-variable$81$X/2$74$18,/phylanx/access-variable$82$Y/2$74$21) /phylanx/list$2/2$74$13) /phylanx/block$0/2$7$9) /phylanx/lambda$1/2$5$12) /phylanx/function$1$als_explicit/2$5$12) als;
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-21-lra-performance.csv b/static/weekly-data/2019-02-21-lra-performance.csv
new file mode 100644
index 0000000..c317ac6
--- /dev/null
+++ b/static/weekly-data/2019-02-21-lra-performance.csv
@@ -0,0 +1,84 @@
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$19$40","add(19, 40)",750,107953142,1
+"/phylanx/__add$1/2$21$33","add(21, 33)",750,7334216,1
+"/phylanx/__div$0/2$19$33","div(19, 33)",750,116942816,1
+"/phylanx/__lt$0/2$15$17","lt(15, 17)",751,11103018,1
+"/phylanx/__minus$0/2$19$51","minus(19, 51)",750,74861593,1
+"/phylanx/__mul$0/2$20$47","mul(20, 47)",750,39210467,1
+"/phylanx/__sub$0/2$20$36","sub(20, 36)",750,49972127,1
+"/phylanx/__sub$1/2$20$67","sub(20, 67)",750,12065612,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,705,1
+"/phylanx/access-argument$1$row_start/0$7$25","access-argument/row_start(7, 25)",1,5633,1
+"/phylanx/access-argument$10$x/2$11$38","access-argument/x(11, 38)",1,1724,1
+"/phylanx/access-argument$11$x/2$12$46","access-argument/x(12, 46)",1,1954,1
+"/phylanx/access-argument$12$iterations/2$15$24","access-argument/iterations(15, 24)",751,390382,1
+"/phylanx/access-argument$13$enable_output/2$17$24","access-argument/enable_output(17, 24)",750,535597,1
+"/phylanx/access-argument$14$x/2$19$55","access-argument/x(19, 55)",750,1403275,1
+"/phylanx/access-argument$15$alpha/2$20$47","access-argument/alpha(20, 47)",750,396445,1
+"/phylanx/access-argument$16$y/2$20$74","access-argument/y(20, 74)",750,199456,1
+"/phylanx/access-argument$2$row_stop/0$7$36","access-argument/row_stop(7, 36)",1,424,1
+"/phylanx/access-argument$3$col_start/0$8$25","access-argument/col_start(8, 25)",1,577,1
+"/phylanx/access-argument$4$col_stop/0$8$36","access-argument/col_stop(8, 36)",1,175,1
+"/phylanx/access-argument$5$filepath/1$6$29","access-argument/filepath(6, 29)",1,997,1
+"/phylanx/access-argument$6$row_start/1$6$50","access-argument/row_start(6, 50)",1,1036,1
+"/phylanx/access-argument$7$row_stop/1$6$61","access-argument/row_stop(6, 61)",1,363,1
+"/phylanx/access-argument$8$col_stop/1$6$72","access-argument/col_stop(6, 72)",1,1013,1
+"/phylanx/access-argument$9$x/2$10$49","access-argument/x(10, 49)",1,2200,1
+"/phylanx/access-function$0$read_x/0$10$5","access-function/read_x(10, 5)",1,300,1
+"/phylanx/access-function$1$read_y/1$8$5","access-function/read_y(8, 5)",1,138,1
+"/phylanx/access-function$2$lra_explicit/2$27$5","access-function/lra_explicit(27, 5)",1,124,1
+"/phylanx/access-variable$0$step/2$15$17","access-variable/step(15, 17)",751,898258,1
+"/phylanx/access-variable$1$step/2$17$54","access-variable/step(17, 54)",0,0,1
+"/phylanx/access-variable$10$step/2$21$33","access-variable/step(21, 33)",750,862069,1
+"/phylanx/access-variable$11$weights/2$24$13","access-variable/weights(24, 13)",1,4584,1
+"/phylanx/access-variable$2$weights/2$17$66","access-variable/weights(17, 66)",0,0,1
+"/phylanx/access-variable$3$pred/2$19$27","access-variable/pred(19, 27)",0,0,1
+"/phylanx/access-variable$4$weights/2$19$58","access-variable/weights(19, 58)",750,962467,1
+"/phylanx/access-variable$5$weights/2$20$27","access-variable/weights(20, 27)",0,0,1
+"/phylanx/access-variable$6$weights/2$20$36","access-variable/weights(20, 36)",750,1065181,1
+"/phylanx/access-variable$7$transx/2$20$59","access-variable/transx(20, 59)",750,1134706,1
+"/phylanx/access-variable$8$pred/2$20$67","access-variable/pred(20, 67)",750,891515,1
+"/phylanx/access-variable$9$step/2$21$27","access-variable/step(21, 27)",0,0,1
+"/phylanx/block$0/0$1$1","block(1, 1)",1,31707,-1
+"/phylanx/block$1/1$1$1","block(1, 1)",1,3038,-1
+"/phylanx/block$2/2$1$1","block(1, 1)",1,2389,-1
+"/phylanx/block$3/2$9$9","block(9, 9)",1,307627987,-1
+"/phylanx/block$4/2$16$17","block(16, 17)",750,271102468,-1
+"/phylanx/constant$0/2$10$29","constant(10, 29)",1,203258,-1
+"/phylanx/constant$1/2$12$26","constant(12, 26)",1,98721,-1
+"/phylanx/cout$0/2$17$39","cout(17, 39)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,8310,-1
+"/phylanx/define-variable$1$read_y/1$5$12","define-variable/read_y(5, 12)",1,385,-1
+"/phylanx/define-variable$2$weights/2$10$20","define-variable/weights(10, 20)",1,287176,-1
+"/phylanx/define-variable$3$transx/2$11$20","define-variable/transx(11, 20)",1,153784,-1
+"/phylanx/define-variable$4$pred/2$12$20","define-variable/pred(12, 20)",1,142104,-1
+"/phylanx/define-variable$5$step/2$13$20","define-variable/step(13, 20)",1,10783,-1
+"/phylanx/define-variable$6$lra_explicit/2$8$12","define-variable/lra_explicit(8, 12)",1,276,-1
+"/phylanx/dot$0/2$19$51","dot(19, 51)",750,63693392,1
+"/phylanx/dot$1/2$20$55","dot(20, 55)",750,27819958,1
+"/phylanx/exp$0/2$19$46","exp(19, 46)",750,96875884,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,147790671,-1
+"/phylanx/file_read_csv$1/1$6$15","file_read_csv(6, 15)",1,4073709,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,147986495,1
+"/phylanx/function$1$read_y/1$5$12","function/read_y(5, 12)",1,4102782,1
+"/phylanx/function$2$lra_explicit/2$8$12","function/lra_explicit(8, 12)",1,307698044,1
+"/phylanx/if$0/2$17$21","if(17, 21)",750,10637063,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,147961489,-1
+"/phylanx/lambda$1/1$5$12","lambda(5, 12)",1,4086258,-1
+"/phylanx/lambda$2/2$8$12","lambda(8, 12)",1,307666934,-1
+"/phylanx/make_list$0/0$7$15","make_list(7, 15)",1,85431,-1
+"/phylanx/make_list$1/0$8$15","make_list(8, 15)",1,18519,-1
+"/phylanx/make_list$2/1$6$40","make_list(6, 40)",1,37798,-1
+"/phylanx/shape$0/2$10$43","shape(10, 43)",1,72117,-1
+"/phylanx/shape$1/2$12$40","shape(12, 40)",1,33754,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,147851318,-1
+"/phylanx/slice$1/1$6$9","slice(6, 9)",1,4067102,-1
+"/phylanx/store$0/2$19$21","store(19, 21)",750,141333493,1
+"/phylanx/store$1/2$20$21","store(20, 21)",750,69928096,1
+"/phylanx/store$2/2$21$21","store(21, 21)",750,24636089,1
+"/phylanx/transpose$0/2$11$28","transpose(11, 28)",1,109501,-1
+"/phylanx/variable$0$weights/2$10$20","variable/weights(10, 20)",1501,792844,1
+"/phylanx/variable$1$transx/2$11$20","variable/transx(11, 20)",750,699638,1
+"/phylanx/variable$2$pred/2$12$20","variable/pred(12, 20)",750,224993,1
+"/phylanx/variable$3$step/2$13$20","variable/step(13, 20)",1501,671741,1
+"/phylanx/while$0/2$14$13","while(14, 13)",1,306824792,-1
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-21-lra-tree.txt b/static/weekly-data/2019-02-21-lra-tree.txt
new file mode 100644
index 0000000..fa46a62
--- /dev/null
+++ b/static/weekly-data/2019-02-21-lra-tree.txt
@@ -0,0 +1 @@
+((((((((/phylanx/access-argument$9$x/2$10$49) /phylanx/shape$0/2$10$43) /phylanx/constant$0/2$10$29) /phylanx/variable$0$weights/2$10$20) /phylanx/define-variable$2$weights/2$10$20,(((/phylanx/access-argument$10$x/2$11$38) /phylanx/transpose$0/2$11$28) /phylanx/variable$1$transx/2$11$20) /phylanx/define-variable$3$transx/2$11$20,((((/phylanx/access-argument$11$x/2$12$46) /phylanx/shape$1/2$12$40) /phylanx/constant$1/2$12$26) /phylanx/variable$2$pred/2$12$20) /phylanx/define-variable$4$pred/2$12$20,(/phylanx/variable$3$step/2$13$20) /phylanx/define-variable$5$step/2$13$20,((/phylanx/access-variable$0$step/2$15$17,/phylanx/access-argument$12$iterations/2$15$24) /phylanx/__lt$0/2$15$17,((/phylanx/access-argument$13$enable_output/2$17$24,(/phylanx/access-variable$1$step/2$17$54,/phylanx/access-variable$2$weights/2$17$66) /phylanx/cout$0/2$17$39) /phylanx/if$0/2$17$21,(/phylanx/access-variable$3$pred/2$19$27,(((((/phylanx/access-argument$14$x/2$19$55,/phylanx/access-variable$4$weights/2$19$58) /phylanx/dot$0/2$19$51) /phylanx/__minus$0/2$19$51) /phylanx/exp$0/2$19$46) /phylanx/__add$0/2$19$40) /phylanx/__div$0/2$19$33) /phylanx/store$0/2$19$21,(/phylanx/access-variable$5$weights/2$20$27,(/phylanx/access-variable$6$weights/2$20$36,(/phylanx/access-argument$15$alpha/2$20$47,(/phylanx/access-variable$7$transx/2$20$59,(/phylanx/access-variable$8$pred/2$20$67,/phylanx/access-argument$16$y/2$20$74) /phylanx/__sub$1/2$20$67) /phylanx/dot$1/2$20$55) /phylanx/__mul$0/2$20$47) /phylanx/__sub$0/2$20$36) /phylanx/store$1/2$20$21,(/phylanx/access-variable$9$step/2$21$27,(/phylanx/access-variable$10$step/2$21$33) /phylanx/__add$1/2$21$33) /phylanx/store$2/2$21$21) /phylanx/block$4/2$16$17) /phylanx/while$0/2$14$13,/phylanx/access-variable$11$weights/2$24$13) /phylanx/block$3/2$9$9) /phylanx/lambda$2/2$8$12) /phylanx/function$2$lra_explicit/2$8$12) lra;
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-27-als-performance.csv b/static/weekly-data/2019-02-27-als-performance.csv
new file mode 100644
index 0000000..76ef56c
--- /dev/null
+++ b/static/weekly-data/2019-02-27-als-performance.csv
@@ -0,0 +1,270 @@
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$44$32","add(44, 32)",3,741895,1
+"/phylanx/__add$1/2$45$32","add(45, 32)",3,553704,1
+"/phylanx/__add$10/2$71$30","add(71, 30)",3,71918,1
+"/phylanx/__add$2/2$52$38","add(52, 38)",30,4110860,1
+"/phylanx/__add$3/2$53$60","add(53, 60)",30,1580969,1
+"/phylanx/__add$4/2$54$52","add(54, 52)",30,619086,1
+"/phylanx/__add$5/2$55$38","add(55, 38)",30,607902,1
+"/phylanx/__add$6/2$64$38","add(64, 38)",300,26945470,1
+"/phylanx/__add$7/2$65$60","add(65, 60)",300,8579472,1
+"/phylanx/__add$8/2$66$52","add(66, 52)",300,5514424,1
+"/phylanx/__add$9/2$67$38","add(67, 38)",300,5372952,1
+"/phylanx/__lt$0/2$35$19","lt(35, 19)",4,271950,1
+"/phylanx/__lt$1/2$47$27","lt(47, 27)",33,1088841,1
+"/phylanx/__lt$2/2$59$27","lt(59, 27)",303,8735614,1
+"/phylanx/__mul$0/2$10$26","mul(10, 26)",1,241463,-1
+"/phylanx/__mul$1/2$44$55","mul(44, 55)",3,155055,1
+"/phylanx/__mul$2/2$45$55","mul(45, 55)",3,140876,1
+"/phylanx/__ne$0/2$51$40","ne(51, 40)",30,741096,1
+"/phylanx/__ne$1/2$63$40","ne(63, 40)",300,5524048,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,757,1
+"/phylanx/access-argument$1$row_start/0$6$50","access-argument/row_start(6, 50)",1,2398,1
+"/phylanx/access-argument$10$num_factors/2$22$51","access-argument/num_factors(22, 51)",1,612,1
+"/phylanx/access-argument$11$num_factors/2$23$34","access-argument/num_factors(23, 34)",1,1991,1
+"/phylanx/access-argument$12$num_factors/2$30$49","access-argument/num_factors(30, 49)",1,778,1
+"/phylanx/access-argument$13$num_factors/2$30$62","access-argument/num_factors(30, 62)",1,338,1
+"/phylanx/access-argument$14$num_factors/2$31$49","access-argument/num_factors(31, 49)",1,1775,1
+"/phylanx/access-argument$15$num_factors/2$31$62","access-argument/num_factors(31, 62)",1,658,1
+"/phylanx/access-argument$16$num_factors/2$32$47","access-argument/num_factors(32, 47)",1,1500,1
+"/phylanx/access-argument$17$num_factors/2$32$60","access-argument/num_factors(32, 60)",1,560,1
+"/phylanx/access-argument$18$num_factors/2$33$47","access-argument/num_factors(33, 47)",1,1534,1
+"/phylanx/access-argument$19$iterations/2$35$23","access-argument/iterations(35, 23)",4,3175,1
+"/phylanx/access-argument$2$row_stop/0$6$62","access-argument/row_stop(6, 62)",1,544,1
+"/phylanx/access-argument$20$enable_output/2$37$24","access-argument/enable_output(37, 24)",3,2615,1
+"/phylanx/access-argument$21$regularization/2$44$55","access-argument/regularization(44, 55)",3,2829,1
+"/phylanx/access-argument$22$regularization/2$45$55","access-argument/regularization(45, 55)",3,2824,1
+"/phylanx/access-argument$3$col_start/0$7$25","access-argument/col_start(7, 25)",1,577,1
+"/phylanx/access-argument$4$col_stop/0$7$37","access-argument/col_stop(7, 37)",1,312,1
+"/phylanx/access-argument$5$ratings/2$8$37","access-argument/ratings(8, 37)",1,1910,1
+"/phylanx/access-argument$6$ratings/2$9$37","access-argument/ratings(9, 37)",1,1802,1
+"/phylanx/access-argument$7$alpha/2$10$26","access-argument/alpha(10, 26)",1,1619,1
+"/phylanx/access-argument$8$ratings/2$10$34","access-argument/ratings(10, 34)",1,875,1
+"/phylanx/access-argument$9$num_factors/2$21$51","access-argument/num_factors(21, 51)",1,1177,1
+"/phylanx/access-function$0$read_x/1$9$5","access-function/read_x(9, 5)",1,847,1
+"/phylanx/access-function$1$als_explicit/3$77$5","access-function/als_explicit(77, 5)",1,329,1
+"/phylanx/access-variable$0$num_items/2$12$52","access-variable/num_items(12, 52)",1,23294,1
+"/phylanx/access-variable$1$num_users/2$13$52","access-variable/num_users(13, 52)",1,27988,1
+"/phylanx/access-variable$10$num_items/2$24$34","access-variable/num_items(24, 34)",1,25864,1
+"/phylanx/access-variable$11$num_users/2$25$34","access-variable/num_users(25, 34)",1,34787,1
+"/phylanx/access-variable$12$k/2$35$19","access-variable/k(35, 19)",4,55684,1
+"/phylanx/access-variable$13$k/2$39$56","access-variable/k(39, 56)",0,0,1
+"/phylanx/access-variable$14$u/2$39$59","access-variable/u(39, 59)",0,0,1
+"/phylanx/access-variable$15$X/2$40$48","access-variable/X(40, 48)",0,0,1
+"/phylanx/access-variable$16$Y/2$41$48","access-variable/Y(41, 48)",0,0,1
+"/phylanx/access-variable$17$YtY/2$44$27","access-variable/YtY(44, 27)",0,0,1
+"/phylanx/access-variable$18$Y/2$44$46","access-variable/Y(44, 46)",3,54338,1
+"/phylanx/access-variable$19$Y/2$44$50","access-variable/Y(44, 50)",3,41409,1
+"/phylanx/access-variable$2$num_items/2$15$49","access-variable/num_items(15, 49)",1,29013,1
+"/phylanx/access-variable$20$I_f/2$44$72","access-variable/I_f(44, 72)",3,45758,1
+"/phylanx/access-variable$21$XtX/2$45$27","access-variable/XtX(45, 27)",0,0,1
+"/phylanx/access-variable$22$X/2$45$46","access-variable/X(45, 46)",3,47781,1
+"/phylanx/access-variable$23$X/2$45$50","access-variable/X(45, 50)",3,39047,1
+"/phylanx/access-variable$24$I_f/2$45$72","access-variable/I_f(45, 72)",3,36510,1
+"/phylanx/access-variable$25$u/2$47$27","access-variable/u(47, 27)",33,295930,1
+"/phylanx/access-variable$26$num_users/2$47$31","access-variable/num_users(47, 31)",33,230896,1
+"/phylanx/access-variable$27$conf_u/2$49$35","access-variable/conf_u(49, 35)",0,0,1
+"/phylanx/access-variable$28$conf/2$49$53","access-variable/conf(49, 53)",30,352384,1
+"/phylanx/access-variable$29$u/2$49$59","access-variable/u(49, 59)",30,218528,1
+"/phylanx/access-variable$3$num_items/2$15$60","access-variable/num_items(15, 60)",1,14339,1
+"/phylanx/access-variable$30$c_u/2$50$35","access-variable/c_u(50, 35)",0,0,1
+"/phylanx/access-variable$31$conf_u/2$50$45","access-variable/conf_u(50, 45)",30,266287,1
+"/phylanx/access-variable$32$p_u/2$51$35","access-variable/p_u(51, 35)",0,0,1
+"/phylanx/access-variable$33$conf_u/2$51$45","access-variable/conf_u(51, 45)",30,270648,1
+"/phylanx/access-variable$34$A/2$52$35","access-variable/A(52, 35)",0,0,1
+"/phylanx/access-variable$35$Y/2$52$56","access-variable/Y(52, 56)",30,336870,1
+"/phylanx/access-variable$36$c_u/2$52$60","access-variable/c_u(52, 60)",30,232238,1
+"/phylanx/access-variable$37$Y/2$52$66","access-variable/Y(52, 66)",30,243378,1
+"/phylanx/access-variable$38$YtY/2$52$70","access-variable/YtY(52, 70)",30,234403,1
+"/phylanx/access-variable$39$b/2$53$35","access-variable/b(53, 35)",0,0,1
+"/phylanx/access-variable$4$num_users/2$16$49","access-variable/num_users(16, 49)",1,25815,1
+"/phylanx/access-variable$40$Y/2$53$56","access-variable/Y(53, 56)",30,273387,1
+"/phylanx/access-variable$41$c_u/2$53$60","access-variable/c_u(53, 60)",30,244822,1
+"/phylanx/access-variable$42$I_i/2$53$66","access-variable/I_i(53, 66)",30,206698,1
+"/phylanx/access-variable$43$p_u/2$53$83","access-variable/p_u(53, 83)",30,261362,1
+"/phylanx/access-variable$44$u/2$54$49","access-variable/u(54, 49)",30,351039,1
+"/phylanx/access-variable$45$u/2$54$52","access-variable/u(54, 52)",30,273880,1
+"/phylanx/access-variable$46$X/2$54$41","access-variable/X(54, 41)",0,0,1
+"/phylanx/access-variable$47$A/2$54$80","access-variable/A(54, 80)",30,373496,1
+"/phylanx/access-variable$48$b/2$54$84","access-variable/b(54, 84)",30,372266,1
+"/phylanx/access-variable$49$u/2$55$35","access-variable/u(55, 35)",0,0,1
+"/phylanx/access-variable$5$num_users/2$16$60","access-variable/num_users(16, 60)",1,14769,1
+"/phylanx/access-variable$50$u/2$55$38","access-variable/u(55, 38)",30,293260,1
+"/phylanx/access-variable$51$u/2$58$27","access-variable/u(58, 27)",0,0,1
+"/phylanx/access-variable$52$i/2$59$27","access-variable/i(59, 27)",303,2192463,1
+"/phylanx/access-variable$53$num_items/2$59$31","access-variable/num_items(59, 31)",303,1935494,1
+"/phylanx/access-variable$54$conf_i/2$61$35","access-variable/conf_i(61, 35)",0,0,1
+"/phylanx/access-variable$55$conf/2$61$56","access-variable/conf(61, 56)",300,3156129,1
+"/phylanx/access-variable$56$i/2$61$62","access-variable/i(61, 62)",300,1999258,1
+"/phylanx/access-variable$57$c_i/2$62$35","access-variable/c_i(62, 35)",0,0,1
+"/phylanx/access-variable$58$conf_i/2$62$45","access-variable/conf_i(62, 45)",300,2383545,1
+"/phylanx/access-variable$59$p_i/2$63$35","access-variable/p_i(63, 35)",0,0,1
+"/phylanx/access-variable$6$num_items/2$17$49","access-variable/num_items(17, 49)",1,15400,1
+"/phylanx/access-variable$60$conf_i/2$63$45","access-variable/conf_i(63, 45)",300,2325634,1
+"/phylanx/access-variable$61$A/2$64$35","access-variable/A(64, 35)",0,0,1
+"/phylanx/access-variable$62$X/2$64$56","access-variable/X(64, 56)",300,2930637,1
+"/phylanx/access-variable$63$c_i/2$64$59","access-variable/c_i(64, 59)",300,2007158,1
+"/phylanx/access-variable$64$X/2$64$65","access-variable/X(64, 65)",300,1929780,1
+"/phylanx/access-variable$65$XtX/2$64$70","access-variable/XtX(64, 70)",300,1992143,1
+"/phylanx/access-variable$66$b/2$65$35","access-variable/b(65, 35)",0,0,1
+"/phylanx/access-variable$67$X/2$65$56","access-variable/X(65, 56)",300,2320407,1
+"/phylanx/access-variable$68$c_i/2$65$60","access-variable/c_i(65, 60)",300,2002863,1
+"/phylanx/access-variable$69$I_u/2$65$66","access-variable/I_u(65, 66)",300,1930160,1
+"/phylanx/access-variable$7$num_users/2$18$49","access-variable/num_users(18, 49)",1,30906,1
+"/phylanx/access-variable$70$p_i/2$65$83","access-variable/p_i(65, 83)",300,2061160,1
+"/phylanx/access-variable$71$i/2$66$49","access-variable/i(66, 49)",300,3129879,1
+"/phylanx/access-variable$72$i/2$66$52","access-variable/i(66, 52)",300,2625856,1
+"/phylanx/access-variable$73$Y/2$66$41","access-variable/Y(66, 41)",0,0,1
+"/phylanx/access-variable$74$A/2$66$80","access-variable/A(66, 80)",300,2235584,1
+"/phylanx/access-variable$75$b/2$66$84","access-variable/b(66, 84)",300,2112661,1
+"/phylanx/access-variable$76$i/2$67$35","access-variable/i(67, 35)",0,0,1
+"/phylanx/access-variable$77$i/2$67$38","access-variable/i(67, 38)",300,2323071,1
+"/phylanx/access-variable$78$i/2$70$27","access-variable/i(70, 27)",0,0,1
+"/phylanx/access-variable$79$k/2$71$27","access-variable/k(71, 27)",0,0,1
+"/phylanx/access-variable$8$num_users/2$21$40","access-variable/num_users(21, 40)",1,27407,1
+"/phylanx/access-variable$80$k/2$71$30","access-variable/k(71, 30)",3,35223,1
+"/phylanx/access-variable$81$X/2$74$18","access-variable/X(74, 18)",1,12136,1
+"/phylanx/access-variable$82$Y/2$74$21","access-variable/Y(74, 21)",1,7021,1
+"/phylanx/access-variable$9$num_items/2$22$40","access-variable/num_items(22, 40)",1,13937,1
+"/phylanx/block$0/2$7$9","block(7, 9)",1,414735427,-1
+"/phylanx/block$1/2$36$17","block(36, 17)",3,504761455,0
+"/phylanx/block$2/2$38$29","block(38, 29)",0,0,-1
+"/phylanx/block$3/2$48$25","block(48, 25)",30,151960292,0
+"/phylanx/block$4/2$60$25","block(60, 25)",300,231601454,0
+"/phylanx/constant$0/2$12$28","constant(12, 28)",1,125201,-1
+"/phylanx/constant$1/2$13$28","constant(13, 28)",1,127928,-1
+"/phylanx/constant$2/2$15$25","constant(15, 25)",1,178974,-1
+"/phylanx/constant$3/2$16$25","constant(16, 25)",1,167481,-1
+"/phylanx/constant$4/2$17$25","constant(17, 25)",1,75096,-1
+"/phylanx/constant$5/2$18$25","constant(18, 25)",1,110005,-1
+"/phylanx/constant$6/2$30$25","constant(30, 25)",1,95799,-1
+"/phylanx/constant$7/2$31$25","constant(31, 25)",1,104913,-1
+"/phylanx/constant$8/2$32$23","constant(32, 23)",1,131095,-1
+"/phylanx/constant$9/2$33$23","constant(33, 23)",1,130895,-1
+"/phylanx/cout$0/2$39$37","cout(39, 37)",0,0,-1
+"/phylanx/cout$1/2$40$37","cout(40, 37)",0,0,-1
+"/phylanx/cout$2/2$41$37","cout(41, 37)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,42501,-1
+"/phylanx/define-variable$1$num_users/2$8$20","define-variable/num_users(8, 20)",1,230662,-1
+"/phylanx/define-variable$10$X/2$21$20","define-variable/X(21, 20)",1,345201,-1
+"/phylanx/define-variable$11$Y/2$22$20","define-variable/Y(22, 20)",1,252496,-1
+"/phylanx/define-variable$12$I_f/2$23$20","define-variable/I_f(23, 20)",1,140165,-1
+"/phylanx/define-variable$13$I_i/2$24$20","define-variable/I_i(24, 20)",1,174902,-1
+"/phylanx/define-variable$14$I_u/2$25$20","define-variable/I_u(25, 20)",1,151307,-1
+"/phylanx/define-variable$15$k/2$26$20","define-variable/k(26, 20)",1,23635,-1
+"/phylanx/define-variable$16$i/2$27$20","define-variable/i(27, 20)",1,16977,-1
+"/phylanx/define-variable$17$u/2$28$20","define-variable/u(28, 20)",1,17073,-1
+"/phylanx/define-variable$18$XtX/2$30$20","define-variable/XtX(30, 20)",1,146074,-1
+"/phylanx/define-variable$19$YtY/2$31$20","define-variable/YtY(31, 20)",1,170616,-1
+"/phylanx/define-variable$2$num_items/2$9$20","define-variable/num_items(9, 20)",1,122847,-1
+"/phylanx/define-variable$20$A/2$32$20","define-variable/A(32, 20)",1,203786,-1
+"/phylanx/define-variable$21$b/2$33$20","define-variable/b(33, 20)",1,212561,-1
+"/phylanx/define-variable$22$als_explicit/2$5$12","define-variable/als_explicit(5, 12)",1,8000,-1
+"/phylanx/define-variable$3$conf/2$10$20","define-variable/conf(10, 20)",1,326801,-1
+"/phylanx/define-variable$4$conf_u/2$12$20","define-variable/conf_u(12, 20)",1,199039,-1
+"/phylanx/define-variable$5$conf_i/2$13$20","define-variable/conf_i(13, 20)",1,186164,-1
+"/phylanx/define-variable$6$c_u/2$15$20","define-variable/c_u(15, 20)",1,244264,-1
+"/phylanx/define-variable$7$c_i/2$16$20","define-variable/c_i(16, 20)",1,270986,-1
+"/phylanx/define-variable$8$p_u/2$17$20","define-variable/p_u(17, 20)",1,118030,-1
+"/phylanx/define-variable$9$p_i/2$18$20","define-variable/p_i(18, 20)",1,153984,-1
+"/phylanx/diag$0/2$50$40","diag(50, 40)",30,837945,1
+"/phylanx/diag$1/2$62$40","diag(62, 40)",300,5168187,1
+"/phylanx/dot$0/2$44$32","dot(44, 32)",3,522039,1
+"/phylanx/dot$1/2$45$32","dot(45, 32)",3,400674,1
+"/phylanx/dot$10/2$65$42","dot(65, 42)",300,18659402,1
+"/phylanx/dot$11/2$66$68","dot(66, 68)",300,14234101,1
+"/phylanx/dot$2/2$52$38","dot(52, 38)",30,3276804,1
+"/phylanx/dot$3/2$52$42","dot(52, 42)",30,2326095,1
+"/phylanx/dot$4/2$53$38","dot(53, 38)",30,4744073,1
+"/phylanx/dot$5/2$53$42","dot(53, 42)",30,3598645,1
+"/phylanx/dot$6/2$54$68","dot(54, 68)",30,124772306,0
+"/phylanx/dot$7/2$64$38","dot(64, 38)",300,19773319,1
+"/phylanx/dot$8/2$64$42","dot(64, 42)",300,13484655,1
+"/phylanx/dot$9/2$65$38","dot(65, 38)",300,27495052,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,555865666,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,9852,1
+"/phylanx/function$1$als_explicit/2$5$12","function/als_explicit(5, 12)",1,3449,1
+"/phylanx/identity$0/2$23$25","identity(23, 25)",1,60552,-1
+"/phylanx/identity$1/2$24$25","identity(24, 25)",1,98049,-1
+"/phylanx/identity$2/2$25$25","identity(25, 25)",1,65688,-1
+"/phylanx/if$0/2$37$21","if(37, 21)",3,100810,1
+"/phylanx/inverse$0/2$54$72","inverse(54, 72)",30,119580315,0
+"/phylanx/inverse$1/2$66$72","inverse(66, 72)",300,6799591,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,556028945,-1
+"/phylanx/lambda$1/2$5$12","lambda(5, 12)",1,414784776,-1
+"/phylanx/list$0/2$54$44","list(54, 44)",30,1542209,1
+"/phylanx/list$1/2$66$44","list(66, 44)",300,13526820,1
+"/phylanx/list$2/2$74$13","list(74, 13)",1,39068,-1
+"/phylanx/make_list$0/0$6$40","make_list(6, 40)",1,70691,-1
+"/phylanx/make_list$1/0$7$15","make_list(7, 15)",1,22746,-1
+"/phylanx/make_list$10/2$30$39","make_list(30, 39)",1,42114,-1
+"/phylanx/make_list$11/2$31$39","make_list(31, 39)",1,51001,-1
+"/phylanx/make_list$12/2$32$37","make_list(32, 37)",1,49278,-1
+"/phylanx/make_list$13/2$33$37","make_list(33, 37)",1,35350,-1
+"/phylanx/make_list$2/2$12$42","make_list(12, 42)",1,45977,-1
+"/phylanx/make_list$3/2$13$42","make_list(13, 42)",1,69788,-1
+"/phylanx/make_list$4/2$15$39","make_list(15, 39)",1,91842,-1
+"/phylanx/make_list$5/2$16$39","make_list(16, 39)",1,81909,-1
+"/phylanx/make_list$6/2$17$39","make_list(17, 39)",1,30803,-1
+"/phylanx/make_list$7/2$18$39","make_list(18, 39)",1,71073,-1
+"/phylanx/make_list$8/2$21$30","make_list(21, 30)",1,70178,-1
+"/phylanx/make_list$9/2$22$30","make_list(22, 30)",1,36543,-1
+"/phylanx/random$0/2$21$23","random(21, 23)",1,279154,-1
+"/phylanx/random$1/2$22$23","random(22, 23)",1,201488,-1
+"/phylanx/set_seed$0/2$20$13","set_seed(20, 13)",1,297070,-1
+"/phylanx/shape$0/2$8$31","shape(8, 31)",1,71394,-1
+"/phylanx/shape$1/2$9$31","shape(9, 31)",1,37530,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,555943925,-1
+"/phylanx/slice_column$0/2$61$43","slice_column(61, 43)",300,11144905,1
+"/phylanx/slice_row$0/2$49$43","slice_row(49, 43)",30,1247647,1
+"/phylanx/store$0/2$44$21","store(44, 21)",3,869127,-1
+"/phylanx/store$1/2$45$21","store(45, 21)",3,738972,1
+"/phylanx/store$10/2$61$29","store(61, 29)",300,27286937,1
+"/phylanx/store$11/2$62$29","store(62, 29)",300,18967455,1
+"/phylanx/store$12/2$63$29","store(63, 29)",300,17488338,1
+"/phylanx/store$13/2$64$29","store(64, 29)",300,39011649,1
+"/phylanx/store$14/2$65$29","store(65, 29)",300,39416147,1
+"/phylanx/store$15/2$66$29","store(66, 29)",300,46992680,1
+"/phylanx/store$16/2$67$29","store(67, 29)",300,23438510,1
+"/phylanx/store$17/2$70$21","store(70, 21)",3,167812,1
+"/phylanx/store$18/2$71$21","store(71, 21)",3,96049955,0
+"/phylanx/store$2/2$49$29","store(49, 29)",30,3018022,1
+"/phylanx/store$3/2$50$29","store(50, 29)",30,2322477,1
+"/phylanx/store$4/2$51$29","store(51, 29)",30,2410397,1
+"/phylanx/store$5/2$52$29","store(52, 29)",30,5676973,1
+"/phylanx/store$6/2$53$29","store(53, 29)",30,6354080,1
+"/phylanx/store$7/2$54$29","store(54, 29)",30,125617906,0
+"/phylanx/store$8/2$55$29","store(55, 29)",30,3756600,1
+"/phylanx/store$9/2$58$21","store(58, 21)",3,135056,1
+"/phylanx/transpose$0/2$44$36","transpose(44, 36)",3,139574,1
+"/phylanx/transpose$1/2$45$36","transpose(45, 36)",3,98715,1
+"/phylanx/transpose$2/2$52$46","transpose(52, 46)",30,680324,1
+"/phylanx/transpose$3/2$53$46","transpose(53, 46)",30,598314,1
+"/phylanx/transpose$4/2$53$73","transpose(53, 73)",30,513442,1
+"/phylanx/transpose$5/2$64$46","transpose(64, 46)",300,5767681,1
+"/phylanx/transpose$6/2$65$46","transpose(65, 46)",300,4979615,1
+"/phylanx/transpose$7/2$65$73","transpose(65, 73)",300,4142925,1
+"/phylanx/variable$0$num_users/2$8$20","variable/num_users(8, 20)",1,34336,1
+"/phylanx/variable$1$num_items/2$9$20","variable/num_items(9, 20)",1,13864,1
+"/phylanx/variable$10$Y/2$22$20","variable/Y(22, 20)",1,6643,1
+"/phylanx/variable$11$I_f/2$23$20","variable/I_f(23, 20)",1,11960,1
+"/phylanx/variable$12$I_i/2$24$20","variable/I_i(24, 20)",1,9913,1
+"/phylanx/variable$13$I_u/2$25$20","variable/I_u(25, 20)",1,9311,1
+"/phylanx/variable$14$k/2$26$20","variable/k(26, 20)",1,12067,1
+"/phylanx/variable$15$i/2$27$20","variable/i(27, 20)",1,5003,1
+"/phylanx/variable$16$u/2$28$20","variable/u(28, 20)",1,4811,1
+"/phylanx/variable$17$XtX/2$30$20","variable/XtX(30, 20)",1,4420,1
+"/phylanx/variable$18$YtY/2$31$20","variable/YtY(31, 20)",1,11784,1
+"/phylanx/variable$19$A/2$32$20","variable/A(32, 20)",1,11130,1
+"/phylanx/variable$2$conf/2$10$20","variable/conf(10, 20)",1,10429,1
+"/phylanx/variable$20$b/2$33$20","variable/b(33, 20)",1,10577,1
+"/phylanx/variable$3$conf_u/2$12$20","variable/conf_u(12, 20)",1,10140,1
+"/phylanx/variable$4$conf_i/2$13$20","variable/conf_i(13, 20)",1,8609,1
+"/phylanx/variable$5$c_u/2$15$20","variable/c_u(15, 20)",1,11911,1
+"/phylanx/variable$6$c_i/2$16$20","variable/c_i(16, 20)",1,11652,1
+"/phylanx/variable$7$p_u/2$17$20","variable/p_u(17, 20)",1,6874,1
+"/phylanx/variable$8$p_i/2$18$20","variable/p_i(18, 20)",1,6710,1
+"/phylanx/variable$9$X/2$21$20","variable/X(21, 20)",1,11403,1
+"/phylanx/while$0/2$35$13","while(35, 13)",1,409486966,-1
+"/phylanx/while$1/2$47$21","while(47, 21)",3,152811847,0
+"/phylanx/while$2/2$59$21","while(59, 21)",3,253174795,0
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-27-als-tree.txt b/static/weekly-data/2019-02-27-als-tree.txt
new file mode 100644
index 0000000..e80b305
--- /dev/null
+++ b/static/weekly-data/2019-02-27-als-tree.txt
@@ -0,0 +1 @@
+(((((((/phylanx/access-argument$5$ratings/2$8$37) /phylanx/shape$0/2$8$31) /phylanx/variable$0$num_users/2$8$20) /phylanx/define-variable$1$num_users/2$8$20,(((/phylanx/access-argument$6$ratings/2$9$37) /phylanx/shape$1/2$9$31) /phylanx/variable$1$num_items/2$9$20) /phylanx/define-variable$2$num_items/2$9$20,(((/phylanx/access-argument$7$alpha/2$10$26,/phylanx/access-argument$8$ratings/2$10$34) /phylanx/__mul$0/2$10$26) /phylanx/variable$2$conf/2$10$20) /phylanx/define-variable$3$conf/2$10$20,((((/phylanx/access-variable$0$num_items/2$12$52) /phylanx/make_list$2/2$12$42) /phylanx/constant$0/2$12$28) /phylanx/variable$3$conf_u/2$12$20) /phylanx/define-variable$4$conf_u/2$12$20,((((/phylanx/access-variable$1$num_users/2$13$52) /phylanx/make_list$3/2$13$42) /phylanx/constant$1/2$13$28) /phylanx/variable$4$conf_i/2$13$20) /phylanx/define-variable$5$conf_i/2$13$20,((((/phylanx/access-variable$2$num_items/2$15$49,/phylanx/access-variable$3$num_items/2$15$60) /phylanx/make_list$4/2$15$39) /phylanx/constant$2/2$15$25) /phylanx/variable$5$c_u/2$15$20) /phylanx/define-variable$6$c_u/2$15$20,((((/phylanx/access-variable$4$num_users/2$16$49,/phylanx/access-variable$5$num_users/2$16$60) /phylanx/make_list$5/2$16$39) /phylanx/constant$3/2$16$25) /phylanx/variable$6$c_i/2$16$20) /phylanx/define-variable$7$c_i/2$16$20,((((/phylanx/access-variable$6$num_items/2$17$49) /phylanx/make_list$6/2$17$39) /phylanx/constant$4/2$17$25) /phylanx/variable$7$p_u/2$17$20) /phylanx/define-variable$8$p_u/2$17$20,((((/phylanx/access-variable$7$num_users/2$18$49) /phylanx/make_list$7/2$18$39) /phylanx/constant$5/2$18$25) /phylanx/variable$8$p_i/2$18$20) /phylanx/define-variable$9$p_i/2$18$20,/phylanx/set_seed$0/2$20$13,((((/phylanx/access-variable$8$num_users/2$21$40,/phylanx/access-argument$9$num_factors/2$21$51) /phylanx/make_list$8/2$21$30) /phylanx/random$0/2$21$23) /phylanx/variable$9$X/2$21$20) /phylanx/define-variable$10$X/2$21$20,((((/phylanx/access-variable$9$num_items/2$22$40,/phylanx/access-argument$10$num_factors/2$22$51) /phylanx/make_list$9/2$22$30) /phylanx/random$1/2$22$23) /phylanx/variable$10$Y/2$22$20) /phylanx/define-variable$11$Y/2$22$20,(((/phylanx/access-argument$11$num_factors/2$23$34) /phylanx/identity$0/2$23$25) /phylanx/variable$11$I_f/2$23$20) /phylanx/define-variable$12$I_f/2$23$20,(((/phylanx/access-variable$10$num_items/2$24$34) /phylanx/identity$1/2$24$25) /phylanx/variable$12$I_i/2$24$20) /phylanx/define-variable$13$I_i/2$24$20,(((/phylanx/access-variable$11$num_users/2$25$34) /phylanx/identity$2/2$25$25) /phylanx/variable$13$I_u/2$25$20) /phylanx/define-variable$14$I_u/2$25$20,(/phylanx/variable$14$k/2$26$20) /phylanx/define-variable$15$k/2$26$20,(/phylanx/variable$15$i/2$27$20) /phylanx/define-variable$16$i/2$27$20,(/phylanx/variable$16$u/2$28$20) /phylanx/define-variable$17$u/2$28$20,((((/phylanx/access-argument$12$num_factors/2$30$49,/phylanx/access-argument$13$num_factors/2$30$62) /phylanx/make_list$10/2$30$39) /phylanx/constant$6/2$30$25) /phylanx/variable$17$XtX/2$30$20) /phylanx/define-variable$18$XtX/2$30$20,((((/phylanx/access-argument$14$num_factors/2$31$49,/phylanx/access-argument$15$num_factors/2$31$62) /phylanx/make_list$11/2$31$39) /phylanx/constant$7/2$31$25) /phylanx/variable$18$YtY/2$31$20) /phylanx/define-variable$19$YtY/2$31$20,((((/phylanx/access-argument$16$num_factors/2$32$47,/phylanx/access-argument$17$num_factors/2$32$60) /phylanx/make_list$12/2$32$37) /phylanx/constant$8/2$32$23) /phylanx/variable$19$A/2$32$20) /phylanx/define-variable$20$A/2$32$20,((((/phylanx/access-argument$18$num_factors/2$33$47) /phylanx/make_list$13/2$33$37) /phylanx/constant$9/2$33$23) /phylanx/variable$20$b/2$33$20) /phylanx/define-variable$21$b/2$33$20,((/phylanx/access-variable$12$k/2$35$19,/phylanx/access-argument$19$iterations/2$35$23) /phylanx/__lt$0/2$35$19,((/phylanx/access-argument$20$enable_output/2$37$24,((/phylanx/access-variable$13$k/2$39$56,/phylanx/access-variable$14$u/2$39$59) /phylanx/cout$0/2$39$37,(/phylanx/access-variable$15$X/2$40$48) /phylanx/cout$1/2$40$37,(/phylanx/access-variable$16$Y/2$41$48) /phylanx/cout$2/2$41$37) /phylanx/block$2/2$38$29) /phylanx/if$0/2$37$21,(/phylanx/access-variable$17$YtY/2$44$27,(((/phylanx/access-variable$18$Y/2$44$46) /phylanx/transpose$0/2$44$36,/phylanx/access-variable$19$Y/2$44$50) /phylanx/dot$0/2$44$32,(/phylanx/access-argument$21$regularization/2$44$55,/phylanx/access-variable$20$I_f/2$44$72) /phylanx/__mul$1/2$44$55) /phylanx/__add$0/2$44$32) /phylanx/store$0/2$44$21,(/phylanx/access-variable$21$XtX/2$45$27,(((/phylanx/access-variable$22$X/2$45$46) /phylanx/transpose$1/2$45$36,/phylanx/access-variable$23$X/2$45$50) /phylanx/dot$1/2$45$32,(/phylanx/access-argument$22$regularization/2$45$55,/phylanx/access-variable$24$I_f/2$45$72) /phylanx/__mul$2/2$45$55) /phylanx/__add$1/2$45$32) /phylanx/store$1/2$45$21,((/phylanx/access-variable$25$u/2$47$27,/phylanx/access-variable$26$num_users/2$47$31) /phylanx/__lt$1/2$47$27,((/phylanx/access-variable$27$conf_u/2$49$35,(/phylanx/access-variable$28$conf/2$49$53,/phylanx/access-variable$29$u/2$49$59) /phylanx/slice_row$0/2$49$43) /phylanx/store$2/2$49$29,(/phylanx/access-variable$30$c_u/2$50$35,(/phylanx/access-variable$31$conf_u/2$50$45) /phylanx/diag$0/2$50$40) /phylanx/store$3/2$50$29,(/phylanx/access-variable$32$p_u/2$51$35,(/phylanx/access-variable$33$conf_u/2$51$45) /phylanx/__ne$0/2$51$40) /phylanx/store$4/2$51$29,(/phylanx/access-variable$34$A/2$52$35,((((/phylanx/access-variable$35$Y/2$52$56) /phylanx/transpose$2/2$52$46,/phylanx/access-variable$36$c_u/2$52$60) /phylanx/dot$3/2$52$42,/phylanx/access-variable$37$Y/2$52$66) /phylanx/dot$2/2$52$38,/phylanx/access-variable$38$YtY/2$52$70) /phylanx/__add$2/2$52$38) /phylanx/store$5/2$52$29,(/phylanx/access-variable$39$b/2$53$35,(((/phylanx/access-variable$40$Y/2$53$56) /phylanx/transpose$3/2$53$46,(/phylanx/access-variable$41$c_u/2$53$60,/phylanx/access-variable$42$I_i/2$53$66) /phylanx/__add$3/2$53$60) /phylanx/dot$5/2$53$42,(/phylanx/access-variable$43$p_u/2$53$83) /phylanx/transpose$4/2$53$73) /phylanx/dot$4/2$53$38) /phylanx/store$6/2$53$29,(/phylanx/access-variable$46$X/2$54$41,((/phylanx/access-variable$47$A/2$54$80) /phylanx/inverse$0/2$54$72,/phylanx/access-variable$48$b/2$54$84) /phylanx/dot$6/2$54$68) /phylanx/store$7/2$54$29,(/phylanx/access-variable$49$u/2$55$35,(/phylanx/access-variable$50$u/2$55$38) /phylanx/__add$5/2$55$38) /phylanx/store$8/2$55$29) /phylanx/block$3/2$48$25) /phylanx/while$1/2$47$21,(/phylanx/access-variable$51$u/2$58$27) /phylanx/store$9/2$58$21,((/phylanx/access-variable$52$i/2$59$27,/phylanx/access-variable$53$num_items/2$59$31) /phylanx/__lt$2/2$59$27,((/phylanx/access-variable$54$conf_i/2$61$35,(/phylanx/access-variable$55$conf/2$61$56,/phylanx/access-variable$56$i/2$61$62) /phylanx/slice_column$0/2$61$43) /phylanx/store$10/2$61$29,(/phylanx/access-variable$57$c_i/2$62$35,(/phylanx/access-variable$58$conf_i/2$62$45) /phylanx/diag$1/2$62$40) /phylanx/store$11/2$62$29,(/phylanx/access-variable$59$p_i/2$63$35,(/phylanx/access-variable$60$conf_i/2$63$45) /phylanx/__ne$1/2$63$40) /phylanx/store$12/2$63$29,(/phylanx/access-variable$61$A/2$64$35,((((/phylanx/access-variable$62$X/2$64$56) /phylanx/transpose$5/2$64$46,/phylanx/access-variable$63$c_i/2$64$59) /phylanx/dot$8/2$64$42,/phylanx/access-variable$64$X/2$64$65) /phylanx/dot$7/2$64$38,/phylanx/access-variable$65$XtX/2$64$70) /phylanx/__add$6/2$64$38) /phylanx/store$13/2$64$29,(/phylanx/access-variable$66$b/2$65$35,(((/phylanx/access-variable$67$X/2$65$56) /phylanx/transpose$6/2$65$46,(/phylanx/access-variable$68$c_i/2$65$60,/phylanx/access-variable$69$I_u/2$65$66) /phylanx/__add$7/2$65$60) /phylanx/dot$10/2$65$42,(/phylanx/access-variable$70$p_i/2$65$83) /phylanx/transpose$7/2$65$73) /phylanx/dot$9/2$65$38) /phylanx/store$14/2$65$29,(/phylanx/access-variable$73$Y/2$66$41,((/phylanx/access-variable$74$A/2$66$80) /phylanx/inverse$1/2$66$72,/phylanx/access-variable$75$b/2$66$84) /phylanx/dot$11/2$66$68) /phylanx/store$15/2$66$29,(/phylanx/access-variable$76$i/2$67$35,(/phylanx/access-variable$77$i/2$67$38) /phylanx/__add$9/2$67$38) /phylanx/store$16/2$67$29) /phylanx/block$4/2$60$25) /phylanx/while$2/2$59$21,(/phylanx/access-variable$78$i/2$70$27) /phylanx/store$17/2$70$21,(/phylanx/access-variable$79$k/2$71$27,(/phylanx/access-variable$80$k/2$71$30) /phylanx/__add$10/2$71$30) /phylanx/store$18/2$71$21) /phylanx/block$1/2$36$17) /phylanx/while$0/2$35$13,(/phylanx/access-variable$81$X/2$74$18,/phylanx/access-variable$82$Y/2$74$21) /phylanx/list$2/2$74$13) /phylanx/block$0/2$7$9) /phylanx/lambda$1/2$5$12)) als;
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-27-lra-performance.csv b/static/weekly-data/2019-02-27-lra-performance.csv
new file mode 100644
index 0000000..8aa64e7
--- /dev/null
+++ b/static/weekly-data/2019-02-27-lra-performance.csv
@@ -0,0 +1,84 @@
+primitive_instance,display_name,count,time,eval_direct
+"/phylanx/__add$0/2$19$40","add(19, 40)",750,266702447,-1
+"/phylanx/__add$1/2$21$33","add(21, 33)",750,14670358,1
+"/phylanx/__div$0/2$19$33","div(19, 33)",750,291607601,-1
+"/phylanx/__lt$0/2$15$17","lt(15, 17)",751,19791821,1
+"/phylanx/__minus$0/2$19$51","minus(19, 51)",750,154346150,1
+"/phylanx/__mul$0/2$20$47","mul(20, 47)",750,62367562,1
+"/phylanx/__sub$0/2$20$36","sub(20, 36)",750,85737387,1
+"/phylanx/__sub$1/2$20$67","sub(20, 67)",750,20280467,1
+"/phylanx/access-argument$0$filepath/0$6$29","access-argument/filepath(6, 29)",1,2691,1
+"/phylanx/access-argument$1$row_start/0$7$25","access-argument/row_start(7, 25)",1,1267,1
+"/phylanx/access-argument$10$x/2$11$38","access-argument/x(11, 38)",1,2220,1
+"/phylanx/access-argument$11$x/2$12$46","access-argument/x(12, 46)",1,2772,1
+"/phylanx/access-argument$12$iterations/2$15$24","access-argument/iterations(15, 24)",751,454027,1
+"/phylanx/access-argument$13$enable_output/2$17$24","access-argument/enable_output(17, 24)",750,560749,1
+"/phylanx/access-argument$14$x/2$19$55","access-argument/x(19, 55)",750,722289,1
+"/phylanx/access-argument$15$alpha/2$20$47","access-argument/alpha(20, 47)",750,378858,1
+"/phylanx/access-argument$16$y/2$20$74","access-argument/y(20, 74)",750,350592,1
+"/phylanx/access-argument$2$row_stop/0$7$36","access-argument/row_stop(7, 36)",1,450,1
+"/phylanx/access-argument$3$col_start/0$8$25","access-argument/col_start(8, 25)",1,847,1
+"/phylanx/access-argument$4$col_stop/0$8$36","access-argument/col_stop(8, 36)",1,451,1
+"/phylanx/access-argument$5$filepath/1$6$29","access-argument/filepath(6, 29)",1,1953,1
+"/phylanx/access-argument$6$row_start/1$6$50","access-argument/row_start(6, 50)",1,1747,1
+"/phylanx/access-argument$7$row_stop/1$6$61","access-argument/row_stop(6, 61)",1,800,1
+"/phylanx/access-argument$8$col_stop/1$6$72","access-argument/col_stop(6, 72)",1,1823,1
+"/phylanx/access-argument$9$x/2$10$49","access-argument/x(10, 49)",1,2501,1
+"/phylanx/access-function$0$read_x/0$10$5","access-function/read_x(10, 5)",1,1125,1
+"/phylanx/access-function$1$read_y/1$8$5","access-function/read_y(8, 5)",1,456,1
+"/phylanx/access-function$2$lra_explicit/2$27$5","access-function/lra_explicit(27, 5)",1,462,1
+"/phylanx/access-variable$0$step/2$15$17","access-variable/step(15, 17)",751,6454893,1
+"/phylanx/access-variable$1$step/2$17$54","access-variable/step(17, 54)",0,0,1
+"/phylanx/access-variable$10$step/2$21$33","access-variable/step(21, 33)",750,6791596,1
+"/phylanx/access-variable$11$weights/2$24$13","access-variable/weights(24, 13)",1,17215,1
+"/phylanx/access-variable$2$weights/2$17$66","access-variable/weights(17, 66)",0,0,1
+"/phylanx/access-variable$3$pred/2$19$27","access-variable/pred(19, 27)",0,0,1
+"/phylanx/access-variable$4$weights/2$19$58","access-variable/weights(19, 58)",750,6845352,1
+"/phylanx/access-variable$5$weights/2$20$27","access-variable/weights(20, 27)",0,0,1
+"/phylanx/access-variable$6$weights/2$20$36","access-variable/weights(20, 36)",750,9782996,1
+"/phylanx/access-variable$7$transx/2$20$59","access-variable/transx(20, 59)",750,8799002,1
+"/phylanx/access-variable$8$pred/2$20$67","access-variable/pred(20, 67)",750,5800047,1
+"/phylanx/access-variable$9$step/2$21$27","access-variable/step(21, 27)",0,0,1
+"/phylanx/block$0/0$1$1","block(1, 1)",1,80276,-1
+"/phylanx/block$1/1$1$1","block(1, 1)",1,16602,-1
+"/phylanx/block$2/2$1$1","block(1, 1)",1,13264,-1
+"/phylanx/block$3/2$9$9","block(9, 9)",1,591052967,-1
+"/phylanx/block$4/2$16$17","block(16, 17)",750,607159105,0
+"/phylanx/constant$0/2$10$29","constant(10, 29)",1,295788,-1
+"/phylanx/constant$1/2$12$26","constant(12, 26)",1,120373,-1
+"/phylanx/cout$0/2$17$39","cout(17, 39)",0,0,-1
+"/phylanx/define-variable$0$read_x/0$5$12","define-variable/read_x(5, 12)",1,42978,-1
+"/phylanx/define-variable$1$read_y/1$5$12","define-variable/read_y(5, 12)",1,10718,-1
+"/phylanx/define-variable$2$weights/2$10$20","define-variable/weights(10, 20)",1,465817,-1
+"/phylanx/define-variable$3$transx/2$11$20","define-variable/transx(11, 20)",1,385238,-1
+"/phylanx/define-variable$4$pred/2$12$20","define-variable/pred(12, 20)",1,209606,-1
+"/phylanx/define-variable$5$step/2$13$20","define-variable/step(13, 20)",1,55049,-1
+"/phylanx/define-variable$6$lra_explicit/2$8$12","define-variable/lra_explicit(8, 12)",1,7431,-1
+"/phylanx/dot$0/2$19$51","dot(19, 51)",750,86274261,1
+"/phylanx/dot$1/2$20$55","dot(20, 55)",750,47111227,1
+"/phylanx/exp$0/2$19$46","exp(19, 46)",750,228360876,1
+"/phylanx/file_read_csv$0/0$6$15","file_read_csv(6, 15)",1,158761815,-1
+"/phylanx/file_read_csv$1/1$6$15","file_read_csv(6, 15)",1,5001274,-1
+"/phylanx/function$0$read_x/0$5$12","function/read_x(5, 12)",1,11788,1
+"/phylanx/function$1$read_y/1$5$12","function/read_y(5, 12)",1,4213,1
+"/phylanx/function$2$lra_explicit/2$8$12","function/lra_explicit(8, 12)",1,2946,1
+"/phylanx/if$0/2$17$21","if(17, 21)",750,12478062,1
+"/phylanx/lambda$0/0$5$12","lambda(5, 12)",1,158874196,-1
+"/phylanx/lambda$1/1$5$12","lambda(5, 12)",1,5114758,-1
+"/phylanx/lambda$2/2$8$12","lambda(8, 12)",1,591137436,-1
+"/phylanx/make_list$0/0$7$15","make_list(7, 15)",1,67517,-1
+"/phylanx/make_list$1/0$8$15","make_list(8, 15)",1,50673,-1
+"/phylanx/make_list$2/1$6$40","make_list(6, 40)",1,75925,-1
+"/phylanx/shape$0/2$10$43","shape(10, 43)",1,106439,-1
+"/phylanx/shape$1/2$12$40","shape(12, 40)",1,50977,-1
+"/phylanx/slice$0/0$6$9","slice(6, 9)",1,158802469,-1
+"/phylanx/slice$1/1$6$9","slice(6, 9)",1,5069413,-1
+"/phylanx/store$0/2$19$21","store(19, 21)",750,308964139,-1
+"/phylanx/store$1/2$20$21","store(20, 21)",750,127650844,1
+"/phylanx/store$2/2$21$21","store(21, 21)",750,105527247,1
+"/phylanx/transpose$0/2$11$28","transpose(11, 28)",1,275208,-1
+"/phylanx/variable$0$weights/2$10$20","variable/weights(10, 20)",1,34363,1
+"/phylanx/variable$1$transx/2$11$20","variable/transx(11, 20)",1,17411,1
+"/phylanx/variable$2$pred/2$12$20","variable/pred(12, 20)",1,11766,1
+"/phylanx/variable$3$step/2$13$20","variable/step(13, 20)",1,27683,1
+"/phylanx/while$0/2$14$13","while(14, 13)",1,589576159,-1
\ No newline at end of file
diff --git a/static/weekly-data/2019-02-27-lra-tree.txt b/static/weekly-data/2019-02-27-lra-tree.txt
new file mode 100644
index 0000000..fb16d08
--- /dev/null
+++ b/static/weekly-data/2019-02-27-lra-tree.txt
@@ -0,0 +1 @@
+((((((((/phylanx/access-argument$9$x/2$10$49) /phylanx/shape$0/2$10$43) /phylanx/constant$0/2$10$29) /phylanx/variable$0$weights/2$10$20) /phylanx/define-variable$2$weights/2$10$20,(((/phylanx/access-argument$10$x/2$11$38) /phylanx/transpose$0/2$11$28) /phylanx/variable$1$transx/2$11$20) /phylanx/define-variable$3$transx/2$11$20,((((/phylanx/access-argument$11$x/2$12$46) /phylanx/shape$1/2$12$40) /phylanx/constant$1/2$12$26) /phylanx/variable$2$pred/2$12$20) /phylanx/define-variable$4$pred/2$12$20,(/phylanx/variable$3$step/2$13$20) /phylanx/define-variable$5$step/2$13$20,((/phylanx/access-variable$0$step/2$15$17,/phylanx/access-argument$12$iterations/2$15$24) /phylanx/__lt$0/2$15$17,((/phylanx/access-argument$13$enable_output/2$17$24,(/phylanx/access-variable$1$step/2$17$54,/phylanx/access-variable$2$weights/2$17$66) /phylanx/cout$0/2$17$39) /phylanx/if$0/2$17$21,(/phylanx/access-variable$3$pred/2$19$27,(((((/phylanx/access-argument$14$x/2$19$55,/phylanx/access-variable$4$weights/2$19$58) /phylanx/dot$0/2$19$51) /phylanx/__minus$0/2$19$51) /phylanx/exp$0/2$19$46) /phylanx/__add$0/2$19$40) /phylanx/__div$0/2$19$33) /phylanx/store$0/2$19$21,(/phylanx/access-variable$5$weights/2$20$27,(/phylanx/access-variable$6$weights/2$20$36,(/phylanx/access-argument$15$alpha/2$20$47,(/phylanx/access-variable$7$transx/2$20$59,(/phylanx/access-variable$8$pred/2$20$67,/phylanx/access-argument$16$y/2$20$74) /phylanx/__sub$1/2$20$67) /phylanx/dot$1/2$20$55) /phylanx/__mul$0/2$20$47) /phylanx/__sub$0/2$20$36) /phylanx/store$1/2$20$21,(/phylanx/access-variable$9$step/2$21$27,(/phylanx/access-variable$10$step/2$21$33) /phylanx/__add$1/2$21$33) /phylanx/store$2/2$21$21) /phylanx/block$4/2$16$17) /phylanx/while$0/2$14$13,/phylanx/access-variable$11$weights/2$24$13) /phylanx/block$3/2$9$9) /phylanx/lambda$2/2$8$12)) lra;
\ No newline at end of file
diff --git a/static/weekly-data/als_csv_instrumented.cpp b/static/weekly-data/als_csv_instrumented.cpp
new file mode 100644
index 0000000..2df2dfe
--- /dev/null
+++ b/static/weekly-data/als_csv_instrumented.cpp
@@ -0,0 +1,419 @@
+//   Copyright (c) 2018 Shahrzad Shirzad
+//
+//   Distributed under the Boost Software License, Version 1.0.0. (See accompanying
+//   file LICENSE_1_0.0.txt or copy at http://www.boost.org/LICENSE_1_0.0.txt)
+
+#include <phylanx/phylanx.hpp>
+#include <hpx/hpx_init.hpp>
+
+#include <iostream>
+
+#include <blaze/Math.h>
+#include <boost/program_options.hpp>
+
+#include <hpx/include/agas.hpp>
+#include <hpx/runtime_fwd.hpp>
+
+#include <cstddef>
+#include <cstdint>
+#include <iostream>
+#include <map>
+#include <vector>
+#include <string>
+#include <utility>
+
+///////////////////////////////////////////////////////////////////////////////
+char const* const read_x_code = R"(
+    //
+    // Read input-data from given CSV file
+    //
+    define(read_x, filepath, row_start, row_stop, col_start, col_stop,
+        slice(file_read_csv(filepath), make_list(row_start , row_stop),
+              make_list(col_start , col_stop))
+    )
+    read_x
+)";
+
+
+char const* const als_explicit = R"(
+    //
+    // Alternating Least squares algorithm (ALS)
+    //
+    define(als_explicit, ratings, regularization, num_factors, iterations, alpha,
+        enable_output,
+        block(
+            define(num_users, shape(ratings, 0)),
+            define(num_items, shape(ratings, 1)),
+            define(conf, alpha * ratings),
+
+            define(conf_u, constant(0.0, make_list(num_items))),
+            define(conf_i, constant(0.0, make_list(num_users))),
+
+            define(c_u, constant(0.0, make_list(num_items, num_items))),
+            define(c_i, constant(0.0, make_list(num_users, num_users))),
+            define(p_u, constant(0.0, make_list(num_items))),
+            define(p_i, constant(0.0, make_list(num_users))),
+
+            set_seed(0),
+            define(X, random(make_list(num_users, num_factors))),
+            define(Y, random(make_list(num_items, num_factors))),
+            define(I_f, identity(num_factors)),
+            define(I_i, identity(num_items)),
+            define(I_u, identity(num_users)),
+            define(k, 0),
+            define(i, 0),
+            define(u, 0),
+
+            define(XtX, constant(0.0, make_list(num_factors, num_factors))),
+            define(YtY, constant(0.0, make_list(num_factors, num_factors))),
+            define(A, constant(0.0, make_list(num_factors, num_factors))),
+            define(b, constant(0.0, make_list(num_factors))),
+
+            while(k < iterations,
+                block(
+                    if(enable_output,
+                            block(
+                                    cout("iteration ", k, u),
+                                    cout("X: ",X),
+                                    cout("Y: ",Y)
+                            )
+                    ),
+                    store(YtY, dot(transpose(Y), Y) + regularization * I_f),
+                    store(XtX, dot(transpose(X), X) + regularization * I_f),
+
+                    while(u < num_users,
+                        block(
+                            store(conf_u, slice_row(conf, u)),
+                            store(c_u, diag(conf_u)),
+                            store(p_u, __ne(conf_u, 0.0, true)),
+                            store(A, dot(dot(transpose(Y), c_u), Y)+ YtY),
+                            store(b, dot(dot(transpose(Y),(c_u + I_i)), transpose(p_u))),
+                            store(slice(X, list(u, u + 1, 1),nil), dot(inverse(A), b)),
+                            store(u, u + 1)
+                        )
+                    ),
+                    store(u, 0),
+                    while(i < num_items,
+                        block(
+                            store(conf_i, slice_column(conf, i)),
+                            store(c_i, diag(conf_i)),
+                            store(p_i, __ne(conf_i, 0.0, true)),
+                            store(A, dot(dot(transpose(X),c_i), X) + XtX),
+                            store(b, dot(dot(transpose(X),(c_i + I_u)), transpose(p_i))),
+                            store(slice(Y, list(i, i + 1, 1),nil), dot(inverse(A), b)),
+                            store(i, i + 1)
+                        )
+                    ),
+                    store(i, 0),
+                    store(k, k + 1)
+                )
+            ),
+            list(X, Y)
+        )
+    )
+    als_explicit
+)";
+
+std::string const als_direct = R"(
+    //
+    // Alternating Least squares algorithm (ALS) (direct implementation)
+    //
+    define(als_direct, ratings, regularization, num_factors, iterations, alpha,
+        enable_output, als(ratings, regularization, num_factors, iterations, alpha,
+        enable_output)
+    )
+    als_direct
+)";
+
+///////////////////////////////////////////////////////////////////////////////
+// Find the line/column position in the source code from a given iterator
+// pointing into it.
+//
+std::pair<std::size_t, std::size_t> get_pos(std::string const& code,
+    std::tuple<std::size_t, std::size_t, std::int64_t> const& tags)
+{
+    // Column might be given directly, in that case line is given as well
+    if (std::get<2>(tags) != -1)
+    {
+        return std::make_pair(std::get<1>(tags), std::get<2>(tags));
+    }
+
+    // Otherwise the given value is the offset into the code
+    std::size_t pos = std::get<1>(tags);
+    std::size_t line = 1;
+    std::size_t column = 1;
+
+    for (std::int64_t i = 0; i != pos && i != code.size(); ++i)
+    {
+        if (code[i] == '\r' || code[i] == '\n')    // CR/LF
+        {
+            ++line;
+            column = 1;
+        }
+        else
+        {
+            ++column;
+        }
+    }
+
+    return std::make_pair(line, column);
+}
+
+///////////////////////////////////////////////////////////////////////////////
+// Find offset into code as given by the tags argument
+//
+std::size_t get_offset(std::string const& code,
+    std::tuple<std::size_t, std::size_t, std::size_t> const& tags)
+{
+    // Offset might be given directly
+    if (std::get<2>(tags) == -1)
+    {
+        return std::get<1>(tags);
+    }
+
+    // Otherwise the given value is the line/column position in the code
+    std::size_t offset = 0;
+    std::size_t line = 1;
+    std::size_t column = 0;
+
+    for (std::int64_t i = 0; i != code.size(); ++i, ++offset)
+    {
+        if (code[i] == '\r' || code[i] == '\n')    // CR/LF
+        {
+            ++line;
+            column = 0;
+        }
+        else
+        {
+            ++column;
+        }
+
+        if (std::get<1>(tags) == line && std::get<2>(tags) == column)
+        {
+            break;
+        }
+    }
+
+    return offset;
+}
+
+// Extract the compile_id/tag pair from a given primitive instance name.
+//
+// The compile_id is a sequence number tracking invocations of the
+// function phylanx::execution_tree::compile (needed to link back to the
+// concrete source code compiled).
+//
+// The tag is an index into the array of iterators filled by
+// phylanx::ast::generate_ast. It allows to find the iterator referring
+// to the construct in the source code a particular primitive instance was
+// created by.
+//
+std::tuple<std::size_t, std::size_t, std::size_t> extract_tags(
+    std::string const& name)
+{
+    auto data = phylanx::execution_tree::compiler::parse_primitive_name(name);
+    return std::make_tuple(data.compile_id, data.tag1, data.tag2);
+}
+
+// The symbolic names registered in AGAS that identify the created
+// primitive instances have the following structure:
+//
+// /phylanx/<primitive>$<sequence-nr>[$<instance>]/<compile_id>$<tag1>[$<tag2>]
+//
+//  where:
+//      <primitive>:   the name of primitive type representing the given
+//                     node in the expression tree
+//      <sequence-nr>: the sequence number of the corresponding instance
+//                     of type <primitive>
+//      <instance>:    (optional), some primitives have additional instance
+//                     names, for instance references to function arguments
+//                     have the name of the argument as their <instance>
+//      <compile_id>:  the sequence number of the invocation of the
+//                     function phylanx::execution_tree::compile
+//      <tag1>:        if <tag2> == -1: the position inside the compiled code
+//                     block where the referring to the point of usage of the
+//                     primitive in the compiled source code
+//                     if <tag2> != -1: the line number in the compiled code
+//                     block where the referring to the point of usage of the
+//                     primitive in the compiled source code
+//      <tag2>:        (optional) if <tag2> != -1 or not given: the column
+//                      offset in the given line (default: -1)
+//
+void print_instrumentation(char const* const name, int compile_id,
+    std::string const& code,
+    phylanx::execution_tree::compiler::function const& func,
+    std::map<std::string, hpx::id_type> const& entries)
+{
+    std::cout << "Instrumentation information for function: " << name << "\n";
+
+    for (auto const& e : entries)
+    {
+        // Extract compile_id and iterator index (tag) from the symbolic name
+        auto tags = extract_tags(e.first);
+        if (std::get<0>(tags) != compile_id)
+            continue;
+
+        // Find real position of given symbol in source code
+        if (std::get<1>(tags) != std::size_t(-1))
+        {
+            auto pos = get_pos(code, tags);
+            std::cout << e.first << ": " << name << "(" << pos.first << ", "
+                      << pos.second << "): ";
+
+            // Show the next (at max) 20 characters
+            auto offset = get_offset(code, tags);
+            auto end = code.begin() + offset;
+            for (int i = 0; end != code.end() && i != 20; ++end, ++i)
+            {
+                if (*end == '\n' || *end == '\r')
+                    break;
+            }
+            std::cout << std::string(code.begin() + offset, end) << " ...\n";
+        }
+        else
+        {
+            std::cout << e.first << "\n";
+        }
+    }
+
+    std::cout << "\n";
+
+    std::cout << "Tree information for function: " << name << "\n";
+    std::cout << phylanx::execution_tree::newick_tree(
+                     name, func.get_expression_topology())
+              << "\n\n";
+
+    std::cout << phylanx::execution_tree::dot_tree(
+                     name, func.get_expression_topology())
+              << "\n\n";
+}
+
+void print_performance_counter_data_csv(
+    std::vector<std::string> const& existing_primitive_instances)
+{
+    std::cout << std::endl << "Primitive Performance Counter Data in CSV:";
+
+    // CSV Header
+    std::cout << "\nprimitive_instance,display_name,count,time,eval_direct\n";
+
+    // Print performance data
+    for (auto const& entry :
+        phylanx::util::retrieve_counter_data(existing_primitive_instances))
+    {
+        std::cout << "\"" << entry.first << "\",\""
+                  << phylanx::execution_tree::compiler::primitive_display_name(
+                         entry.first)
+                  << "\"";
+        for (auto const& counter_value : entry.second)
+        {
+            std::cout << "," << counter_value;
+        }
+        std::cout << std::endl;
+    }
+
+    std::cout << std::endl;
+}
+
+int hpx_main(boost::program_options::variables_map& vm)
+{
+    if (vm.count("data_csv") == 0)
+    {
+        std::cerr << "Please specify '--data_csv=data-file'";
+        return hpx::finalize();
+    }
+
+    // compile the given code
+    phylanx::execution_tree::compiler::function_list snippets;
+    auto const& code_read_x =
+        phylanx::execution_tree::compile("read_x", read_x_code, snippets);
+
+    auto const& code_als = phylanx::execution_tree::compile(
+        vm.count("direct") != 0 ? "als_direct" : "als_explicit",
+        vm.count("direct") != 0 ? als_direct : als_explicit, snippets);
+
+    // Enable collection of performance data for all existing primitives
+    auto primitives = phylanx::util::enable_measurements();
+
+    auto read_x = code_read_x.run();
+    auto als = code_als.run();
+
+    // Print instrumentation information, if enabled
+    if (vm.count("instrument") != 0)
+    {
+        auto entries = hpx::agas::find_symbols(hpx::launch::sync, "/phylanx/*");
+
+        print_instrumentation("als", 0,
+            vm.count("direct") != 0 ? als_direct : als_explicit, als, entries);
+    }
+
+    // evaluate generated execution tree
+    auto row_start = static_cast<int64_t>(0);
+    auto col_start = static_cast<int64_t>(0);
+    auto row_stop = vm["row_stop"].as<std::int64_t>();
+    auto col_stop = vm["col_stop"].as<std::int64_t>();
+
+    auto regularization = vm["regularization"].as<double>();
+    auto iterations = vm["iterations"].as<int64_t>();
+    auto num_factors = vm["factors"].as<int64_t>();
+    auto alpha = vm["alpha"].as<double>();
+    auto filepath = vm["data_csv"].as<std::string>();
+
+    bool enable_output = vm.count("enable_output") != 0;
+
+    // Read the data from the files
+    auto ratings = read_x(filepath, row_start, row_stop, col_start, col_stop);
+
+    // Measure execution time
+    hpx::util::high_resolution_timer t;
+
+    // Evaluate ALS using the read data
+    auto result =
+        als(ratings, regularization, num_factors, iterations, alpha, enable_output);
+    auto elapsed = t.elapsed();
+
+    // Print performance counter data in CSV
+    if (vm.count("instrument") != 0)
+    {
+        print_performance_counter_data_csv(primitives);
+    }
+
+    // Make sure all counters are properly initialized, don't reset current
+    // counter values
+    hpx::reinit_active_counters(false);
+
+    auto result_r = phylanx::execution_tree::extract_list_value(result);
+    auto it = result_r.begin();
+    std::cout << "X: \n"
+              << phylanx::execution_tree::extract_numeric_value(*it++)
+              << "\nY: \n"
+              << phylanx::execution_tree::extract_numeric_value(*it)
+              << std::endl;
+    std::cout << "time: " << t.elapsed() << std::endl;
+
+    return hpx::finalize();
+}
+
+int main(int argc, char* argv[])
+{
+    // command line handling
+    boost::program_options::options_description desc("usage: als [options]");
+    desc.add_options()("enable_output,e",
+        "enable progress output (default: false)")("instrument,i",
+        "print instrumentation information (default: false)")("direct,d",
+        "use direct implementation of ALS (default: false)")("iterations,n",
+        boost::program_options::value<std::int64_t>()->default_value(3),
+        "number of iterations (default: 10.0)")("factors,f",
+        boost::program_options::value<std::int64_t>()->default_value(10),
+        "number of factors (default: 10)")("alpha,a",
+        boost::program_options::value<double>()->default_value(40),
+        "alpha (default: 40)")("regularization,r",
+        boost::program_options::value<double>()->default_value(0.1),
+        "regularization (default: 0.1)")("data_csv",
+        boost::program_options::value<std::string>(),
+        "file name for reading data")("row_stop",
+        boost::program_options::value<std::int64_t>()->default_value(10),
+        "row_stop (default: 10)")("col_stop",
+        boost::program_options::value<std::int64_t>()->default_value(100),
+        "col_stop (default: 100)");
+    return hpx::init(desc, argc, argv);
+}
diff --git a/static/weekly-data/lra_csv_instrumented.cpp b/static/weekly-data/lra_csv_instrumented.cpp
new file mode 100644
index 0000000..56328bf
--- /dev/null
+++ b/static/weekly-data/lra_csv_instrumented.cpp
@@ -0,0 +1,410 @@
+//   Copyright (c) 2017-2018 Hartmut Kaiser
+//   Copyright (c) 2018 Parsa Amini
+//
+//   Distributed under the Boost Software License, Version 1.0. (See accompanying
+//   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
+
+#include <phylanx/phylanx.hpp>
+
+#include <hpx/hpx_init.hpp>
+#include <hpx/include/agas.hpp>
+#include <hpx/runtime_fwd.hpp>
+
+#include <cstddef>
+#include <cstdint>
+#include <iostream>
+#include <map>
+#include <vector>
+#include <string>
+#include <utility>
+
+#include <boost/program_options.hpp>
+#include <blaze/Math.h>
+
+//////////////////////////////////////////////////////////////////////////////////
+// This example uses part of the breast cancer dataset from UCI Machine Learning
+// Repository:
+//     https://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+(Diagnostic)
+//
+// A copy of the full dataset in CSV format (breast_cancer.csv), obtained from
+// scikit-learn datasets, is provided in the same folder as this example.
+//
+// The layout of the data in the provided CSV file used by the example
+// is as follows:
+// 30 features per line followed by the classification
+// 569 lines of data
+//
+// This example also demonstrates how the generated primitives can be introspected
+// and linked back to the source code.
+//
+/////////////////////////////////////////////////////////////////////////////////
+
+std::string const read_x_code = R"(block(
+    //
+    // Read X-data from given CSV file
+    //
+    define(read_x, filepath, row_start, row_stop, col_start, col_stop,
+        slice(file_read_csv(filepath),
+              make_list(row_start, row_stop),
+              make_list(col_start, col_stop))
+    ),
+    read_x
+))";
+
+std::string const read_y_code = R"(block(
+    //
+    // Read Y-data from given CSV file
+    //
+    define(read_y, filepath, row_start, row_stop, col_stop,
+        slice(file_read_csv(filepath), make_list(row_start, row_stop), col_stop)
+    ),
+    read_y
+))";
+
+///////////////////////////////////////////////////////////////////////////////
+std::string const lra_code = R"(block(
+    //
+    // Logistic regression analysis algorithm
+    //
+    //   x: [N, M]
+    //   y: [N]
+    //
+    define(lra_explicit, x, y, alpha, iterations, enable_output,
+        block(
+            define(weights, constant(0.0, shape(x, 1))),            // weights: [M]
+            define(transx, transpose(x)),                           // transx:  [M, N]
+            define(pred, constant(0.0, shape(x, 0))),
+            define(step, 0),
+            while(
+                step < iterations,
+                block(
+                    if(enable_output, cout("step: ", step, ", ", weights)),
+                    // exp(-dot(x, weights)): [N], pred: [N]
+                    store(pred, 1.0 / (1.0 + exp(-dot(x, weights)))),
+                    store(weights, weights - (alpha * dot(transx, pred - y))),
+                    store(step, step + 1)
+                )
+            ),
+            weights
+        )
+    ),
+    lra_explicit
+))";
+
+std::string const lra_code_direct = R"(block(
+    //
+    // Logistic regression analysis algorithm (direct implementation)
+    //
+    //   x: [N, M]
+    //   y: [N]
+    //
+    define(lra_direct, x, y, alpha, iterations, enable_output,
+        lra(x, y, alpha, iterations, enable_output)
+    ),
+    lra_direct
+))";
+
+///////////////////////////////////////////////////////////////////////////////
+// Find the line/column position in the source code from a given iterator
+// pointing into it.
+//
+std::pair<std::size_t, std::size_t> get_pos(std::string const& code,
+    std::tuple<std::size_t, std::size_t, std::int64_t> const& tags)
+{
+    // Column might be given directly, in that case line is given as well
+    if (std::get<2>(tags) != -1)
+    {
+        return std::make_pair(std::get<1>(tags), std::get<2>(tags));
+    }
+
+    // Otherwise the given value is the offset into the code
+    std::size_t pos = std::get<1>(tags);
+    std::size_t line = 1;
+    std::size_t column = 1;
+
+    for (std::int64_t i = 0; i != pos && i != code.size(); ++i)
+    {
+        if (code[i] == '\r' || code[i] == '\n')    // CR/LF
+        {
+            ++line;
+            column = 1;
+        }
+        else
+        {
+            ++column;
+        }
+    }
+
+    return std::make_pair(line, column);
+}
+
+///////////////////////////////////////////////////////////////////////////////
+// Find offset into code as given by the tags argument
+//
+std::size_t get_offset(std::string const& code,
+    std::tuple<std::size_t, std::size_t, std::size_t> const& tags)
+{
+    // Offset might be given directly
+    if (std::get<2>(tags) == -1)
+    {
+        return std::get<1>(tags);
+    }
+
+    // Otherwise the given value is the line/column position in the code
+    std::size_t offset = 0;
+    std::size_t line = 1;
+    std::size_t column = 0;
+
+    for (std::int64_t i = 0; i != code.size(); ++i, ++offset)
+    {
+        if (code[i] == '\r' || code[i] == '\n')    // CR/LF
+        {
+            ++line;
+            column = 0;
+        }
+        else
+        {
+            ++column;
+        }
+
+        if (std::get<1>(tags) == line && std::get<2>(tags) == column)
+        {
+            break;
+        }
+    }
+
+    return offset;
+}
+
+// Extract the compile_id/tag pair from a given primitive instance name.
+//
+// The compile_id is a sequence number tracking invocations of the
+// function phylanx::execution_tree::compile (needed to link back to the
+// concrete source code compiled).
+//
+// The tag is an index into the array of iterators filled by
+// phylanx::ast::generate_ast. It allows to find the iterator referring
+// to the construct in the source code a particular primitive instance was
+// created by.
+//
+std::tuple<std::size_t, std::size_t, std::size_t> extract_tags(
+    std::string const& name)
+{
+    auto data = phylanx::execution_tree::compiler::parse_primitive_name(name);
+    return std::make_tuple(data.compile_id, data.tag1, data.tag2);
+}
+
+// The symbolic names registered in AGAS that identify the created
+// primitive instances have the following structure:
+//
+// /phylanx/<primitive>$<sequence-nr>[$<instance>]/<compile_id>$<tag1>[$<tag2>]
+//
+//  where:
+//      <primitive>:   the name of primitive type representing the given
+//                     node in the expression tree
+//      <sequence-nr>: the sequence number of the corresponding instance
+//                     of type <primitive>
+//      <instance>:    (optional), some primitives have additional instance
+//                     names, for instance references to function arguments
+//                     have the name of the argument as their <instance>
+//      <compile_id>:  the sequence number of the invocation of the
+//                     function phylanx::execution_tree::compile
+//      <tag1>:        if <tag2> == -1: the position inside the compiled code
+//                     block where the referring to the point of usage of the
+//                     primitive in the compiled source code
+//                     if <tag2> != -1: the line number in the compiled code
+//                     block where the referring to the point of usage of the
+//                     primitive in the compiled source code
+//      <tag2>:        (optional) if <tag2> != -1 or not given: the column
+//                      offset in the given line (default: -1)
+//
+void print_instrumentation(
+    char const* const name, int compile_id, std::string const& code,
+    phylanx::execution_tree::compiler::function const& func,
+    std::map<std::string, hpx::id_type> const& entries)
+{
+    std::cout << "Instrumentation information for function: " << name << "\n";
+
+    for (auto const& e : entries)
+    {
+        // Extract compile_id and iterator index (tag) from the symbolic name
+        auto tags = extract_tags(e.first);
+        if (std::get<0>(tags) != compile_id)
+            continue;
+
+        // Find real position of given symbol in source code
+        if (std::get<1>(tags) != std::size_t(-1))
+        {
+            auto pos = get_pos(code, tags);
+            std::cout << e.first << ": " << name << "(" << pos.first << ", "
+                      << pos.second << "): ";
+
+            // Show the next (at max) 20 characters
+            auto offset = get_offset(code, tags);
+            auto end = code.begin() + offset;
+            for (int i = 0; end != code.end() && i != 20; ++end, ++i)
+            {
+                if (*end == '\n' || *end == '\r')
+                    break;
+            }
+            std::cout << std::string(code.begin() + offset, end)
+                      << " ...\n";
+        }
+        else
+        {
+            std::cout << e.first << "\n";
+        }
+    }
+
+    std::cout << "\n";
+
+    std::cout << "Tree information for function: " << name << "\n";
+    std::cout << phylanx::execution_tree::newick_tree(
+                     name, func.get_expression_topology())
+              << "\n\n";
+
+    std::cout << phylanx::execution_tree::dot_tree(
+                     name, func.get_expression_topology())
+              << "\n\n";
+}
+
+void print_performance_counter_data_csv(
+    std::vector<std::string> const& existing_primitive_instances)
+{
+    std::cout << std::endl << "Primitive Performance Counter Data in CSV:";
+
+    // CSV Header
+    std::cout << "\nprimitive_instance,display_name,count,time,eval_direct\n";
+
+    // Print performance data
+    for (auto const& entry :
+        phylanx::util::retrieve_counter_data(existing_primitive_instances))
+    {
+        std::cout << "\"" << entry.first << "\",\""
+                  << phylanx::execution_tree::compiler::primitive_display_name(
+                         entry.first)
+                  << "\"";
+        for (auto const& counter_value : entry.second)
+        {
+            std::cout << "," << counter_value;
+        }
+        std::cout << std::endl;
+    }
+
+    std::cout << std::endl;
+}
+
+///////////////////////////////////////////////////////////////////////////////
+int hpx_main(boost::program_options::variables_map& vm)
+{
+    if (vm.count("data_csv") == 0)
+    {
+        std::cerr << "Please specify '--data_csv=data-file'";
+        return hpx::finalize();
+    }
+
+    // Compile the given code
+    phylanx::execution_tree::compiler::function_list snippets;
+    auto const& code_read_x = phylanx::execution_tree::compile(
+        "read_x", phylanx::ast::generate_ast(read_x_code), snippets);
+
+    auto const& code_read_y = phylanx::execution_tree::compile(
+        "read_y", phylanx::ast::generate_ast(read_y_code), snippets);
+
+    auto const& code_lra = phylanx::execution_tree::compile(
+        vm.count("direct") != 0 ? "lra_direct" : "lra",
+        vm.count("direct") != 0 ? lra_code_direct : lra_code, snippets);
+
+    // Enable collection of performance data for all existing primitives
+    auto primitives = phylanx::util::enable_measurements();
+
+    auto read_x = code_read_x.run();
+    auto read_y = code_read_y.run();
+    auto lra = code_lra.run();
+
+    // Print instrumentation information, if enabled
+    if (vm.count("instrument") != 0)
+    {
+        auto entries =
+            hpx::agas::find_symbols(hpx::launch::sync, "/phylanx/*");
+
+        print_instrumentation("read_x", 0, read_x_code, read_x, entries);
+        print_instrumentation("read_y", 1, read_y_code, read_y, entries);
+        print_instrumentation("lra", 2, lra_code, lra, entries);
+    }
+
+    auto row_start = vm["row_start"].as<std::int64_t>();
+    auto col_start = vm["col_start"].as<std::int64_t>();
+    auto row_stop = vm["row_stop"].as<std::int64_t>();
+    auto col_stop = vm["col_stop"].as<std::int64_t>();
+
+    // Read the data from the files
+    auto x = read_x(vm["data_csv"].as<std::string>(), row_start, row_stop,
+        col_start, col_stop);
+    auto y =
+        read_y(vm["data_csv"].as<std::string>(), row_start, row_stop, col_stop);
+
+    // Remaining command line options
+    auto alpha = vm["alpha"].as<double>();
+    auto iterations = vm["num_iterations"].as<std::int64_t>();
+    bool enable_output = vm.count("enable_output") != 0;
+
+    // Measure execution time
+    hpx::util::high_resolution_timer t;
+
+    // Evaluate LRA using the read data
+    auto result =
+        lra(std::move(x), std::move(y), alpha, iterations, enable_output);
+
+    auto elapsed = t.elapsed();
+
+    // Print performance counter data in CSV
+    if (vm.count("instrument") != 0)
+    {
+        print_performance_counter_data_csv(primitives);
+    }
+
+    // Make sure all counters are properly initialized, don't reset current
+    // counter values
+    hpx::reinit_active_counters(false);
+
+    std::cout << "Result: \n"
+              << phylanx::execution_tree::extract_numeric_value(result) << "\n"
+              << "Calculated in: " << elapsed << " seconds\n";
+
+    return hpx::finalize();
+}
+
+int main(int argc, char* argv[])
+{
+    // Command line handling
+    boost::program_options::options_description desc("usage: lra [options]");
+    desc.add_options()
+        ("enable_output,e", "enable progress output (default: false)")
+        ("instrument,i", "print instrumentation information (default: false)")
+        ("direct,d", "use direct implementation of LRA (default: false)")
+        ("num_iterations,n",
+            boost::program_options::value<std::int64_t>()->default_value(750),
+            "number of iterations (default: 750)")
+        ("alpha,a",
+            boost::program_options::value<double>()->default_value(1e-5),
+            "alpha (default: 1e-5)")
+        ("data_csv",
+            boost::program_options::value<std::string>(),
+            "file name for reading data")
+        ("row_start",
+            boost::program_options::value<std::int64_t>()->default_value(0),
+            "row_start (default: 0)")
+        ("col_start",
+            boost::program_options::value<std::int64_t>()->default_value(0),
+            "col_start (default: 0)")
+        ("row_stop",
+            boost::program_options::value<std::int64_t>()->default_value(569),
+            "row_stop (default: 569)")
+        ("col_stop",
+            boost::program_options::value<std::int64_t>()->default_value(30),
+            "col_stop (default: 30)")
+        ;
+
+    return hpx::init(desc, argc, argv);
+}
